<?xml version='1.0'?>
<Devices>
    <Device type='custom' id='activityTimer'>
        <Name>Activity Timer</Name>
        <ConfigUI>
            <Field id='description0' type='label'>
                <Label>Activity Timer device tracks multiple momentary inputs.</Label>
            </Field>
            <Field id='description1' type='label' fontSize='small' fontColor='darkgray'>
                <Label>Device turns ON if THRESHOLD inputs are detected before RESET TIMER expires, and remains ON until OFF TIMER expires.  OFF TIMER is extended when any additional input is detected or when THRESHOLD is met, depending on the setting of ALWAYS EXTEND.</Label>
            </Field>
            <Field id='timerSeparator' type='separator' />
            <Field id='timerSection' type='label' fontColor='blue'>
                <Label>Timer Settings:</Label>
            </Field>
            <Field id='countThreshold' type='textfield' defaultValue='1'>
                <Label>Threshold:</Label>
            </Field>
            <Field id='thresholdHelp' type='label' fontSize='small' fontColor='darkgray' alignWithControl='true'>
                <Label>Number of TRUE inputs before this device turns on</Label>
            </Field>
            <Field id='resetCycles' type='textfield' defaultValue='1'>
                <Label>Reset Timer Cycles:</Label>
            </Field>
            <Field id='resetUnits' type='menu' defaultValue='minutes'>
                <Label>Reset Timer Units:</Label>
                <List>
                    <Option value='seconds'>Seconds</Option>
                    <Option value='minutes'>Minutes</Option>
                    <Option value='hours'>Hours</Option>
                    <Option value='days'>Days</Option>
                </List>
            </Field>
            <Field id='resetHelp' type='label' fontSize='small' fontColor='darkgray' alignWithControl='true'>
                <Label>Max time to reach threshold before count is reset</Label>
            </Field>
            <Field id='offCycles' type='textfield' defaultValue='10'>
                <Label>Off Timer Cycles:</Label>
            </Field>
            <Field id='offUnits' type='menu' defaultValue='minutes'>
                <Label>Off Timer Units:</Label>
                <List>
                    <Option value='seconds'>Seconds</Option>
                    <Option value='minutes'>Minutes</Option>
                    <Option value='hours'>Hours</Option>
                    <Option value='days'>Days</Option>
                </List>
            </Field>
            <Field id='offHelp' type='label' fontSize='small' fontColor='darkgray' alignWithControl='true'>
                <Label>How long before this device turns off</Label>
            </Field>
            <Field id='extend' type='checkbox' defaultValue='true'>
                <Label>Always Extend?:</Label>
            </Field>
            <Field id='extendHelp1' type='label' fontSize='small' fontColor='darkgray' alignWithControl='true'>
                <Label>Checked = extend OFF TIMER when any TRUE input is detected</Label>
            </Field>
            <Field id='extendHelp2' type='label' fontSize='small' fontColor='darkgray' alignWithControl='true'>
                <Label>Unchecked = only extend OFF TIMER when threshold is met</Label>
            </Field>
            <Field id='trackSeparator' type='separator' />
            <Field id='trackSection' type='label' fontColor='blue'>
                <Label>Tracked Entities:</Label>
            </Field>
            <Field id='device1' type='menu'>
                <Label>Device 1:</Label>
                <List class='self' method='getDeviceList'/>
            </Field>
            <Field id='state1' type='menu'>
                <Label>State 1:</Label>
                <List class='self' filter='device1' method='getStateList' dynamicReload='true'/>
            </Field>
            <Field id='device2' type='menu'>
                <Label>Device 2:</Label>
                <List class='self' method='getDeviceList'/>
            </Field>
            <Field id='state2' type='menu'>
                <Label>State 2:</Label>
                <List class='self' filter='device2' method='getStateList' dynamicReload='true'/>
            </Field>
            <Field id='device3' type='menu'>
                <Label>Device 3:</Label>
                <List class='self' method='getDeviceList'/>
            </Field>
            <Field id='state3' type='menu'>
                <Label>State 3:</Label>
                <List class='self' filter='device3' method='getStateList' dynamicReload='true'/>
            </Field>
            <Field id='device4' type='menu'>
                <Label>Device 4:</Label>
                <List class='self' method='getDeviceList'/>
            </Field>
            <Field id='state4' type='menu'>
                <Label>State 4:</Label>
                <List class='self' filter='device4' method='getStateList' dynamicReload='true'/>
            </Field>
            <Field id='device5' type='menu'>
                <Label>Device 5:</Label>
                <List class='self' method='getDeviceList'/>
            </Field>
            <Field id='state5' type='menu'>
                <Label>State 5:</Label>
                <List class='self' filter='device5' method='getStateList' dynamicReload='true'/>
            </Field>
            <Field id='statesButton1' type='button'>
                <Title>Load Device States</Title>
                <CallbackMethod>loadStates</CallbackMethod>
            </Field>
            <Field id='show10dev' type='checkbox' defaultValue='false'>
                <Label>Show more</Label>
            </Field>
            <Field id='device6' type='menu' visibleBindingId='show10dev'  visibleBindingValue='true'>
                <Label>Device 6:</Label>
                <List class='self' method='getDeviceList'/>
            </Field>
            <Field id='state6' type='menu' visibleBindingId='show10dev'  visibleBindingValue='true'>
                <Label>State 6:</Label>
                <List class='self' filter='device6' method='getStateList' dynamicReload='true'/>
            </Field>
            <Field id='device7' type='menu' visibleBindingId='show10dev'  visibleBindingValue='true'>
                <Label>Device 7:</Label>
                <List class='self' method='getDeviceList'/>
            </Field>
            <Field id='state7' type='menu' visibleBindingId='show10dev'  visibleBindingValue='true'>
                <Label>State 7:</Label>
                <List class='self' filter='device7' method='getStateList' dynamicReload='true'/>
            </Field>
            <Field id='device8' type='menu' visibleBindingId='show10dev'  visibleBindingValue='true'>
                <Label>Device 8:</Label>
                <List class='self' method='getDeviceList'/>
            </Field>
            <Field id='state8' type='menu' visibleBindingId='show10dev'  visibleBindingValue='true'>
                <Label>State 8:</Label>
                <List class='self' filter='device8' method='getStateList' dynamicReload='true'/>
            </Field>
            <Field id='device9' type='menu' visibleBindingId='show10dev'  visibleBindingValue='true'>
                <Label>Device 9:</Label>
                <List class='self' method='getDeviceList'/>
            </Field>
            <Field id='state9' type='menu' visibleBindingId='show10dev'  visibleBindingValue='true'>
                <Label>State 9:</Label>
                <List class='self' filter='device9' method='getStateList' dynamicReload='true'/>
            </Field>
            <Field id='device10' type='menu' visibleBindingId='show10dev'  visibleBindingValue='true'>
                <Label>Device 10:</Label>
                <List class='self' method='getDeviceList'/>
            </Field>
            <Field id='state10' type='menu' visibleBindingId='show10dev'  visibleBindingValue='true'>
                <Label>State 10:</Label>
                <List class='self' filter='device10' method='getStateList' dynamicReload='true'/>
            </Field>
            <Field id='statesButton2' type='button' visibleBindingId='show10dev'  visibleBindingValue='true'>
                <Title>Load Device States</Title>
                <CallbackMethod>loadStates</CallbackMethod>
            </Field>
            <Field id='show20dev' type='checkbox' defaultValue='false' visibleBindingId='show10dev'  visibleBindingValue='true'>
                <Label>Show even more</Label>
            </Field>
            <Field id='device11' type='menu' visibleBindingId='show20dev'  visibleBindingValue='true'>
                <Label>Device 11:</Label>
                <List class='self' method='getDeviceList'/>
            </Field>
            <Field id='state11' type='menu' visibleBindingId='show20dev'  visibleBindingValue='true'>
                <Label>State 11:</Label>
                <List class='self' filter='device11' method='getStateList' dynamicReload='true'/>
            </Field>
            <Field id='device12' type='menu' visibleBindingId='show20dev'  visibleBindingValue='true'>
                <Label>Device 12:</Label>
                <List class='self' method='getDeviceList'/>
            </Field>
            <Field id='state12' type='menu' visibleBindingId='show20dev'  visibleBindingValue='true'>
                <Label>State 12:</Label>
                <List class='self' filter='device12' method='getStateList' dynamicReload='true'/>
            </Field>
            <Field id='device13' type='menu' visibleBindingId='show20dev'  visibleBindingValue='true'>
                <Label>Device 13:</Label>
                <List class='self' method='getDeviceList'/>
            </Field>
            <Field id='state13' type='menu' visibleBindingId='show20dev'  visibleBindingValue='true'>
                <Label>State 13:</Label>
                <List class='self' filter='device13' method='getStateList' dynamicReload='true'/>
            </Field>
            <Field id='device14' type='menu' visibleBindingId='show20dev'  visibleBindingValue='true'>
                <Label>Device 14:</Label>
                <List class='self' method='getDeviceList'/>
            </Field>
            <Field id='state14' type='menu' visibleBindingId='show20dev'  visibleBindingValue='true'>
                <Label>State 14:</Label>
                <List class='self' filter='device14' method='getStateList' dynamicReload='true'/>
            </Field>
            <Field id='device15' type='menu' visibleBindingId='show20dev'  visibleBindingValue='true'>
                <Label>Device 15:</Label>
                <List class='self' method='getDeviceList'/>
            </Field>
            <Field id='state15' type='menu' visibleBindingId='show20dev'  visibleBindingValue='true'>
                <Label>State 15:</Label>
                <List class='self' filter='device15' method='getStateList' dynamicReload='true'/>
            </Field>
            <Field id='device16' type='menu' visibleBindingId='show20dev'  visibleBindingValue='true'>
                <Label>Device 16:</Label>
                <List class='self' method='getDeviceList'/>
            </Field>
            <Field id='state16' type='menu' visibleBindingId='show20dev'  visibleBindingValue='true'>
                <Label>State 16:</Label>
                <List class='self' filter='device16' method='getStateList' dynamicReload='true'/>
            </Field>
            <Field id='device17' type='menu' visibleBindingId='show20dev'  visibleBindingValue='true'>
                <Label>Device 17:</Label>
                <List class='self' method='getDeviceList'/>
            </Field>
            <Field id='state17' type='menu' visibleBindingId='show20dev'  visibleBindingValue='true'>
                <Label>State 17:</Label>
                <List class='self' filter='device17' method='getStateList' dynamicReload='true'/>
            </Field>
            <Field id='device18' type='menu' visibleBindingId='show20dev'  visibleBindingValue='true'>
                <Label>Device 18:</Label>
                <List class='self' method='getDeviceList'/>
            </Field>
            <Field id='state18' type='menu' visibleBindingId='show20dev'  visibleBindingValue='true'>
                <Label>State 18:</Label>
                <List class='self' filter='device18' method='getStateList' dynamicReload='true'/>
            </Field>
            <Field id='device19' type='menu' visibleBindingId='show20dev'  visibleBindingValue='true'>
                <Label>Device 19:</Label>
                <List class='self' method='getDeviceList'/>
            </Field>
            <Field id='state19' type='menu' visibleBindingId='show20dev'  visibleBindingValue='true'>
                <Label>State 19:</Label>
                <List class='self' filter='device19' method='getStateList' dynamicReload='true'/>
            </Field>
            <Field id='device20' type='menu' visibleBindingId='show20dev'  visibleBindingValue='true'>
                <Label>Device 20:</Label>
                <List class='self' method='getDeviceList'/>
            </Field>
            <Field id='state20' type='menu' visibleBindingId='show20dev'  visibleBindingValue='true'>
                <Label>State 20:</Label>
                <List class='self' filter='device20' method='getStateList' dynamicReload='true'/>
            </Field>
            <Field id='statesButton3' type='button' visibleBindingId='show20dev'  visibleBindingValue='true'>
                <Title>Load Device States</Title>
                <CallbackMethod>loadStates</CallbackMethod>
            </Field>
            <Field id='variableSpacer' type='label'>
                <Label> </Label>
            </Field>
            <Field id='variable1' type='menu'>
                <Label>Variable 1:</Label>
                <List class='self' method='getVariableList'/>
            </Field>
            <Field id='variable2' type='menu'>
                <Label>Variable 2:</Label>
                <List class='self' method='getVariableList'/>
            </Field>
            <Field id='variable3' type='menu'>
                <Label>Variable 3:</Label>
                <List class='self' method='getVariableList'/>
            </Field>
            <Field id='variable4' type='menu'>
                <Label>Variable 4:</Label>
                <List class='self' method='getVariableList'/>
            </Field>
            <Field id='variable5' type='menu'>
                <Label>Variable 5:</Label>
                <List class='self' method='getVariableList'/>
            </Field>
            <Field id='show10var' type='checkbox' defaultValue='false'>
                <Label>Show more</Label>
            </Field>
            <Field id='variable6' type='menu' visibleBindingId='show10var'  visibleBindingValue='true'>
                <Label>Variable 6:</Label>
                <List class='self' method='getVariableList'/>
            </Field>
            <Field id='variable7' type='menu' visibleBindingId='show10var'  visibleBindingValue='true'>
                <Label>Variable 7:</Label>
                <List class='self' method='getVariableList'/>
            </Field>
            <Field id='variable8' type='menu' visibleBindingId='show10var'  visibleBindingValue='true'>
                <Label>Variable 8:</Label>
                <List class='self' method='getVariableList'/>
            </Field>
            <Field id='variable9' type='menu' visibleBindingId='show10var'  visibleBindingValue='true'>
                <Label>Variable 9:</Label>
                <List class='self' method='getVariableList'/>
            </Field>
            <Field id='variable10' type='menu' visibleBindingId='show10var'  visibleBindingValue='true'>
                <Label>Variable 10:</Label>
                <List class='self' method='getVariableList'/>
            </Field>
            <Field id='logicSeparator' type='separator' />
            <Field id='logicSection' type='label' fontColor='blue'>
                <Label>Input Logic:</Label>
            </Field>
            <Field id='logicHelp' type='label' alignWithControl='true' fontSize='small' fontColor='darkgray'>
                <Label>Which state or variable values are counted as TRUE inputs?</Label>
            </Field>
            <Field id='logicType' type='menu' defaultValue='simple'>
                <Label>Logic:</Label>
                <List>
                    <Option value='any'>Any Change</Option>
                    <Option value='simple'>Simple</Option>
                    <Option value='complex'>Complex</Option>
                </List>
            </Field>
            <Field id='boolLabel0' type='label' visibleBindingId='logicType'  visibleBindingValue='any' alignWithControl='true' fontSize='small' fontColor='darkgray'>
                <Label>• Any change will be considered a TRUE input</Label>
            </Field>
            <Field id='boolLabel1' type='label' visibleBindingId='logicType'  visibleBindingValue='simple' alignWithControl='true' fontSize='small' fontColor='darkgray'>
                <Label>• Strings match 'true', 'on', 'open', 'up', 'yes', 'active', 'locked', '1'  </Label>
            </Field>
            <Field id='boolLabel2' type='label' visibleBindingId='logicType'  visibleBindingValue='simple' alignWithControl='true' fontSize='small' fontColor='darkgray'>
                <Label>• Numbers match if non-zero</Label>
            </Field>
            <Field id='boolLabel3' type='label' visibleBindingId='logicType'  visibleBindingValue='simple' alignWithControl='true' fontSize='small' fontColor='darkgray'>
                <Label>• Booleans match if True</Label>
            </Field>
            <Field id='reverseBoolean' type='checkbox' defaultValue='false' visibleBindingId='logicType'  visibleBindingValue='simple' alwaysUseInDialogHeightCalc='true'>
                <Label>Reverse?:</Label>
                <Description>Check to reverse above logic.</Description>
            </Field>
            <Field id='boolLabel4' type='label' visibleBindingId='reverseBoolean'  visibleBindingValue='false' alignWithControl='true' fontSize='small' fontColor='darkgray'>
                <Label>• Matched value is TRUE input</Label>
            </Field>
            <Field id='boolLabel5' type='label' visibleBindingId='reverseBoolean'  visibleBindingValue='true' alignWithControl='true' fontSize='small' fontColor='darkgray'>
                <Label>• Matched value is FALSE input</Label>
            </Field>
            <Field id='operator' type='menu' defaultValue='eq' visibleBindingId='logicType'  visibleBindingValue='complex'>
                <Label>Operator:</Label>
                <List>
                    <Option value='eq'>Equal</Option>
                    <Option value='ne'>Not Equal</Option>
                    <Option value='gt'>Greater Than</Option>
                    <Option value='lt'>Less Than</Option>
                    <Option value='ge'>Greater or Equal</Option>
                    <Option value='le'>Less or Equal</Option>
                </List>
            </Field>
            <Field id='value' type='textfield' visibleBindingId='logicType'  visibleBindingValue='complex'>
                <Label>Comparison Value:</Label>
            </Field>
            <Field id='valueType' type='menu' defaultValue='str' visibleBindingId='logicType'  visibleBindingValue='complex'>
                <Label>Data Type:</Label>
                <List>
                    <Option value='str'>String</Option>
                    <Option value='num'>Number</Option>
                </List>
            </Field>
            <Field id='boolLabel6' type='label' visibleBindingId='logicType'  visibleBindingValue='complex' alignWithControl='true' fontSize='small' fontColor='darkgray'>
                <Label>• Type errors always compare as False</Label>
            </Field>
            <Field id='boolLabel7' type='label' visibleBindingId='logicType'  visibleBindingValue='complex' alignWithControl='true' fontSize='small' fontColor='darkgray'>
                <Label>• Strings are compared in lowercase</Label>
            </Field>
            <Field id='boolLabel8' type='label' visibleBindingId='logicType'  visibleBindingValue='complex' alignWithControl='true' fontSize='small' fontColor='darkgray'>
                <Label>• Numbers are compared as floats</Label>
            </Field>
            <Field id='boolLabel9' type='label' visibleBindingId='logicType'  visibleBindingValue='complex' alignWithControl='true' fontSize='small' fontColor='darkgray'>
                <Label>• For boolean comparison, use simple logic</Label>
            </Field>
            <Field id='miscSeparator' type='separator' />
            <Field id='miscSection' type='label' fontColor='blue'>
                <Label>Miscellaneous:</Label>
            </Field>
            <Field id='logOnOff' type='checkbox' defaultValue='true'>
                <Label>Log On/Off?:</Label>
                <Description>Uncheck to suppress logging on/off events</Description>
            </Field>
        </ConfigUI>
        <States>
            <State id='onOffState'>
                <ValueType>Boolean</ValueType>
                <TriggerLabel>On/Off State is On</TriggerLabel>
                <TriggerLabelPrefix>On/Off State is</TriggerLabelPrefix>
                <ControlPageLabel>On/Off State</ControlPageLabel>
                <ControlPageLabelPrefix>On/Off State is</ControlPageLabelPrefix>
            </State>
            <State id='state'>
                <ValueType>
                    <List>
                        <Option value='idle'>Idle</Option>
                        <Option value='accrue'>Accrual</Option>
                        <Option value='active'>Active</Option>
                        <Option value='persist'>Persistent</Option>
                    </List>
                </ValueType>
                <TriggerLabel>Any State Change</TriggerLabel>
                <TriggerLabelPrefix>State is</TriggerLabelPrefix>
                <ControlPageLabel>State</ControlPageLabel>
                <ControlPageLabelPrefix>State is</ControlPageLabelPrefix>
            </State>
            <State id='displayState'>
                <ValueType>String</ValueType>
                <TriggerLabel>Display State Change</TriggerLabel>
                <TriggerLabelPrefix>Display State is</TriggerLabelPrefix>
                <ControlPageLabel>Display State</ControlPageLabel>
                <ControlPageLabelPrefix>Display State is</ControlPageLabelPrefix>
            </State>
            <State id='count'>
                <ValueType>Number</ValueType>
                <TriggerLabel>Count</TriggerLabel>
                <ControlPageLabel>Count</ControlPageLabel>
            </State>
            <State id='counting'>
                <ValueType>Boolean</ValueType>
                <TriggerLabel>Counting</TriggerLabel>
                <ControlPageLabel>Counting</ControlPageLabel>
            </State>
            <State id='expired'>
                <ValueType>Boolean</ValueType>
                <TriggerLabel>Expired</TriggerLabel>
                <ControlPageLabel>Expired</ControlPageLabel>
            </State>
            <State id='reset'>
                <ValueType>Boolean</ValueType>
                <TriggerLabel>Reset</TriggerLabel>
                <ControlPageLabel>Reset</ControlPageLabel>
            </State>
            <State id='resetTime'>
                <ValueType>Number</ValueType>
                <TriggerLabel>Reset Time</TriggerLabel>
                <ControlPageLabel>Reset Time</ControlPageLabel>
            </State>
            <State id='resetString'>
                <ValueType>String</ValueType>
                <TriggerLabel>Reset String</TriggerLabel>
                <ControlPageLabel>Reset String</ControlPageLabel>
            </State>
            <State id='offTime'>
                <ValueType>Number</ValueType>
                <TriggerLabel>Off Time</TriggerLabel>
                <ControlPageLabel>Off Time</ControlPageLabel>
            </State>
            <State id='offString'>
                <ValueType>String</ValueType>
                <TriggerLabel>Off String</TriggerLabel>
                <ControlPageLabel>Off String</ControlPageLabel>
            </State>
        </States>
        <UiDisplayStateId>displayState</UiDisplayStateId>
    </Device>
    <Device type='custom' id='thresholdTimer'>
        <Name>Threshold Timer</Name>
        <ConfigUI>
            <Field id='description0' type='label'>
                <Label>Threshold Timer device tracks multiple continuous inputs.</Label>
            </Field>
            <Field id='description1' type='label' fontSize='small' fontColor='darkgray'>
                <Label>Device turns ON once THRESHOLD inputs are detected.</Label>
            </Field>
            <Field id='description2' type='label' fontSize='small' fontColor='darkgray'>
                <Label>OFF TIMER starts when input count drops below THRESHOLD.</Label>
            </Field>
            <Field id='description3' type='label' fontSize='small' fontColor='darkgray'>
                <Label>Device turns OFF when OFF TIMER expires.</Label>
            </Field>
            <Field id='timerSeparator' type='separator' />
            <Field id='timerSection' type='label' fontColor='blue'>
                <Label>Timer Settings:</Label>
            </Field>
            <Field id='countThreshold' type='textfield' defaultValue='1'>
                <Label>Threshold:</Label>
            </Field>
            <Field id='thresholdHelp' type='label' fontSize='small' fontColor='darkgray' alignWithControl='true'>
                <Label>Number of TRUE inputs before this device turns on</Label>
            </Field>
            <Field id='offCycles' type='textfield' defaultValue='10'>
                <Label>Off Timer Cycles:</Label>
            </Field>
            <Field id='offUnits' type='menu' defaultValue='minutes'>
                <Label>Off Timer Units:</Label>
                <List>
                    <Option value='seconds'>Seconds</Option>
                    <Option value='minutes'>Minutes</Option>
                    <Option value='hours'>Hours</Option>
                    <Option value='days'>Days</Option>
                </List>
            </Field>
            <Field id='offHelp' type='label' fontSize='small' fontColor='darkgray' alignWithControl='true'>
                <Label>How long before this device turns off.</Label>
            </Field>
            <Field id='trackSeparator' type='separator' />
            <Field id='trackSection' type='label' fontColor='blue'>
                <Label>Tracked Entities:</Label>
            </Field>
            <Field id='device1' type='menu'>
                <Label>Device 1:</Label>
                <List class='self' method='getDeviceList'/>
            </Field>
            <Field id='state1' type='menu'>
                <Label>State 1:</Label>
                <List class='self' filter='device1' method='getStateList' dynamicReload='true'/>
            </Field>
            <Field id='device2' type='menu'>
                <Label>Device 2:</Label>
                <List class='self' method='getDeviceList'/>
            </Field>
            <Field id='state2' type='menu'>
                <Label>State 2:</Label>
                <List class='self' filter='device2' method='getStateList' dynamicReload='true'/>
            </Field>
            <Field id='device3' type='menu'>
                <Label>Device 3:</Label>
                <List class='self' method='getDeviceList'/>
            </Field>
            <Field id='state3' type='menu'>
                <Label>State 3:</Label>
                <List class='self' filter='device3' method='getStateList' dynamicReload='true'/>
            </Field>
            <Field id='device4' type='menu'>
                <Label>Device 4:</Label>
                <List class='self' method='getDeviceList'/>
            </Field>
            <Field id='state4' type='menu'>
                <Label>State 4:</Label>
                <List class='self' filter='device4' method='getStateList' dynamicReload='true'/>
            </Field>
            <Field id='device5' type='menu'>
                <Label>Device 5:</Label>
                <List class='self' method='getDeviceList'/>
            </Field>
            <Field id='state5' type='menu'>
                <Label>State 5:</Label>
                <List class='self' filter='device5' method='getStateList' dynamicReload='true'/>
            </Field>
            <Field id='statesButton1' type='button'>
                <Title>Load Device States</Title>
                <CallbackMethod>loadStates</CallbackMethod>
            </Field>
            <Field id='show10dev' type='checkbox' defaultValue='false'>
                <Label>Show more</Label>
            </Field>
            <Field id='device6' type='menu' visibleBindingId='show10dev'  visibleBindingValue='true'>
                <Label>Device 6:</Label>
                <List class='self' method='getDeviceList'/>
            </Field>
            <Field id='state6' type='menu' visibleBindingId='show10dev'  visibleBindingValue='true'>
                <Label>State 6:</Label>
                <List class='self' filter='device6' method='getStateList' dynamicReload='true'/>
            </Field>
            <Field id='device7' type='menu' visibleBindingId='show10dev'  visibleBindingValue='true'>
                <Label>Device 7:</Label>
                <List class='self' method='getDeviceList'/>
            </Field>
            <Field id='state7' type='menu' visibleBindingId='show10dev'  visibleBindingValue='true'>
                <Label>State 7:</Label>
                <List class='self' filter='device7' method='getStateList' dynamicReload='true'/>
            </Field>
            <Field id='device8' type='menu' visibleBindingId='show10dev'  visibleBindingValue='true'>
                <Label>Device 8:</Label>
                <List class='self' method='getDeviceList'/>
            </Field>
            <Field id='state8' type='menu' visibleBindingId='show10dev'  visibleBindingValue='true'>
                <Label>State 8:</Label>
                <List class='self' filter='device8' method='getStateList' dynamicReload='true'/>
            </Field>
            <Field id='device9' type='menu' visibleBindingId='show10dev'  visibleBindingValue='true'>
                <Label>Device 9:</Label>
                <List class='self' method='getDeviceList'/>
            </Field>
            <Field id='state9' type='menu' visibleBindingId='show10dev'  visibleBindingValue='true'>
                <Label>State 9:</Label>
                <List class='self' filter='device9' method='getStateList' dynamicReload='true'/>
            </Field>
            <Field id='device10' type='menu' visibleBindingId='show10dev'  visibleBindingValue='true'>
                <Label>Device 10:</Label>
                <List class='self' method='getDeviceList'/>
            </Field>
            <Field id='state10' type='menu' visibleBindingId='show10dev'  visibleBindingValue='true'>
                <Label>State 10:</Label>
                <List class='self' filter='device10' method='getStateList' dynamicReload='true'/>
            </Field>
            <Field id='statesButton2' type='button' visibleBindingId='show10dev'  visibleBindingValue='true'>
                <Title>Load Device States</Title>
                <CallbackMethod>loadStates</CallbackMethod>
            </Field>
            <Field id='show20dev' type='checkbox' defaultValue='false' visibleBindingId='show10dev'  visibleBindingValue='true'>
                <Label>Show even more</Label>
            </Field>
            <Field id='device11' type='menu' visibleBindingId='show20dev'  visibleBindingValue='true'>
                <Label>Device 11:</Label>
                <List class='self' method='getDeviceList'/>
            </Field>
            <Field id='state11' type='menu' visibleBindingId='show20dev'  visibleBindingValue='true'>
                <Label>State 11:</Label>
                <List class='self' filter='device11' method='getStateList' dynamicReload='true'/>
            </Field>
            <Field id='device12' type='menu' visibleBindingId='show20dev'  visibleBindingValue='true'>
                <Label>Device 12:</Label>
                <List class='self' method='getDeviceList'/>
            </Field>
            <Field id='state12' type='menu' visibleBindingId='show20dev'  visibleBindingValue='true'>
                <Label>State 12:</Label>
                <List class='self' filter='device12' method='getStateList' dynamicReload='true'/>
            </Field>
            <Field id='device13' type='menu' visibleBindingId='show20dev'  visibleBindingValue='true'>
                <Label>Device 13:</Label>
                <List class='self' method='getDeviceList'/>
            </Field>
            <Field id='state13' type='menu' visibleBindingId='show20dev'  visibleBindingValue='true'>
                <Label>State 13:</Label>
                <List class='self' filter='device13' method='getStateList' dynamicReload='true'/>
            </Field>
            <Field id='device14' type='menu' visibleBindingId='show20dev'  visibleBindingValue='true'>
                <Label>Device 14:</Label>
                <List class='self' method='getDeviceList'/>
            </Field>
            <Field id='state14' type='menu' visibleBindingId='show20dev'  visibleBindingValue='true'>
                <Label>State 14:</Label>
                <List class='self' filter='device14' method='getStateList' dynamicReload='true'/>
            </Field>
            <Field id='device15' type='menu' visibleBindingId='show20dev'  visibleBindingValue='true'>
                <Label>Device 15:</Label>
                <List class='self' method='getDeviceList'/>
            </Field>
            <Field id='state15' type='menu' visibleBindingId='show20dev'  visibleBindingValue='true'>
                <Label>State 15:</Label>
                <List class='self' filter='device15' method='getStateList' dynamicReload='true'/>
            </Field>
            <Field id='device16' type='menu' visibleBindingId='show20dev'  visibleBindingValue='true'>
                <Label>Device 16:</Label>
                <List class='self' method='getDeviceList'/>
            </Field>
            <Field id='state16' type='menu' visibleBindingId='show20dev'  visibleBindingValue='true'>
                <Label>State 16:</Label>
                <List class='self' filter='device16' method='getStateList' dynamicReload='true'/>
            </Field>
            <Field id='device17' type='menu' visibleBindingId='show20dev'  visibleBindingValue='true'>
                <Label>Device 17:</Label>
                <List class='self' method='getDeviceList'/>
            </Field>
            <Field id='state17' type='menu' visibleBindingId='show20dev'  visibleBindingValue='true'>
                <Label>State 17:</Label>
                <List class='self' filter='device17' method='getStateList' dynamicReload='true'/>
            </Field>
            <Field id='device18' type='menu' visibleBindingId='show20dev'  visibleBindingValue='true'>
                <Label>Device 18:</Label>
                <List class='self' method='getDeviceList'/>
            </Field>
            <Field id='state18' type='menu' visibleBindingId='show20dev'  visibleBindingValue='true'>
                <Label>State 18:</Label>
                <List class='self' filter='device18' method='getStateList' dynamicReload='true'/>
            </Field>
            <Field id='device19' type='menu' visibleBindingId='show20dev'  visibleBindingValue='true'>
                <Label>Device 19:</Label>
                <List class='self' method='getDeviceList'/>
            </Field>
            <Field id='state19' type='menu' visibleBindingId='show20dev'  visibleBindingValue='true'>
                <Label>State 19:</Label>
                <List class='self' filter='device19' method='getStateList' dynamicReload='true'/>
            </Field>
            <Field id='device20' type='menu' visibleBindingId='show20dev'  visibleBindingValue='true'>
                <Label>Device 20:</Label>
                <List class='self' method='getDeviceList'/>
            </Field>
            <Field id='state20' type='menu' visibleBindingId='show20dev'  visibleBindingValue='true'>
                <Label>State 20:</Label>
                <List class='self' filter='device20' method='getStateList' dynamicReload='true'/>
            </Field>
            <Field id='statesButton3' type='button' visibleBindingId='show20dev'  visibleBindingValue='true'>
                <Title>Load Device States</Title>
                <CallbackMethod>loadStates</CallbackMethod>
            </Field>
            <Field id='variableSeparator' type='separator' />
            <Field id='variable1' type='menu'>
                <Label>Variable 1:</Label>
                <List class='self' method='getVariableList'/>
            </Field>
            <Field id='variable2' type='menu'>
                <Label>Variable 2:</Label>
                <List class='self' method='getVariableList'/>
            </Field>
            <Field id='variable3' type='menu'>
                <Label>Variable 3:</Label>
                <List class='self' method='getVariableList'/>
            </Field>
            <Field id='variable4' type='menu'>
                <Label>Variable 4:</Label>
                <List class='self' method='getVariableList'/>
            </Field>
            <Field id='variable5' type='menu'>
                <Label>Variable 5:</Label>
                <List class='self' method='getVariableList'/>
            </Field>
            <Field id='show10var' type='checkbox' defaultValue='false'>
                <Label>Show more</Label>
            </Field>
            <Field id='variable6' type='menu' visibleBindingId='show10var'  visibleBindingValue='true'>
                <Label>Variable 6:</Label>
                <List class='self' method='getVariableList'/>
            </Field>
            <Field id='variable7' type='menu' visibleBindingId='show10var'  visibleBindingValue='true'>
                <Label>Variable 7:</Label>
                <List class='self' method='getVariableList'/>
            </Field>
            <Field id='variable8' type='menu' visibleBindingId='show10var'  visibleBindingValue='true'>
                <Label>Variable 8:</Label>
                <List class='self' method='getVariableList'/>
            </Field>
            <Field id='variable9' type='menu' visibleBindingId='show10var'  visibleBindingValue='true'>
                <Label>Variable 9:</Label>
                <List class='self' method='getVariableList'/>
            </Field>
            <Field id='variable10' type='menu' visibleBindingId='show10var'  visibleBindingValue='true'>
                <Label>Variable 10:</Label>
                <List class='self' method='getVariableList'/>
            </Field>
            <Field id='logicSeparator' type='separator' />
            <Field id='logicSection' type='label' fontColor='blue'>
                <Label>Input Logic:</Label>
            </Field>
            <Field id='logicHelp' type='label' alignWithControl='true' fontSize='small' fontColor='darkgray'>
                <Label>Which state or variable values are counted as TRUE inputs?</Label>
            </Field>
            <Field id='logicType' type='menu' defaultValue='simple'>
                <Label>Logic:</Label>
                <List>
                    <Option value='simple'>Simple</Option>
                    <Option value='complex'>Complex</Option>
                </List>
            </Field>
            <Field id='boolLabel1' type='label' visibleBindingId='logicType'  visibleBindingValue='simple' alignWithControl='true' fontSize='small' fontColor='darkgray'>
                <Label>• Strings match 'true', 'on', 'open', 'up', 'yes', 'active', 'locked', '1'  </Label>
            </Field>
            <Field id='boolLabel2' type='label' visibleBindingId='logicType'  visibleBindingValue='simple' alignWithControl='true' fontSize='small' fontColor='darkgray'>
                <Label>• Numbers match if non-zero</Label>
            </Field>
            <Field id='boolLabel3' type='label' visibleBindingId='logicType'  visibleBindingValue='simple' alignWithControl='true' fontSize='small' fontColor='darkgray'>
                <Label>• Booleans match if True</Label>
            </Field>
            <Field id='reverseBoolean' type='checkbox' defaultValue='false' visibleBindingId='logicType'  visibleBindingValue='simple' alwaysUseInDialogHeightCalc='true'>
                <Label>Reverse?:</Label>
                <Description>Check to reverse above logic.</Description>
            </Field>
            <Field id='boolLabel4' type='label' visibleBindingId='reverseBoolean'  visibleBindingValue='false' alignWithControl='true' fontSize='small' fontColor='darkgray'>
                <Label>• Matched value is TRUE input</Label>
            </Field>
            <Field id='boolLabel5' type='label' visibleBindingId='reverseBoolean'  visibleBindingValue='true' alignWithControl='true' fontSize='small' fontColor='darkgray'>
                <Label>• Matched value is FALSE input</Label>
            </Field>
            <Field id='operator' type='menu' defaultValue='eq' visibleBindingId='logicType'  visibleBindingValue='complex'>
                <Label>Operator:</Label>
                <List>
                    <Option value='eq'>Equal</Option>
                    <Option value='ne'>Not Equal</Option>
                    <Option value='gt'>Greater Than</Option>
                    <Option value='lt'>Less Than</Option>
                    <Option value='ge'>Greater or Equal</Option>
                    <Option value='le'>Less or Equal</Option>
                </List>
            </Field>
            <Field id='value' type='textfield' visibleBindingId='logicType'  visibleBindingValue='complex'>
                <Label>Comparison Value:</Label>
            </Field>
            <Field id='valueType' type='menu' defaultValue='str' visibleBindingId='logicType'  visibleBindingValue='complex'>
                <Label>Data Type:</Label>
                <List>
                    <Option value='str'>String</Option>
                    <Option value='num'>Number</Option>
                </List>
            </Field>
            <Field id='boolLabel6' type='label' visibleBindingId='logicType'  visibleBindingValue='complex' alignWithControl='true' fontSize='small' fontColor='darkgray'>
                <Label>• Type errors always compare as False</Label>
            </Field>
            <Field id='boolLabel7' type='label' visibleBindingId='logicType'  visibleBindingValue='complex' alignWithControl='true' fontSize='small' fontColor='darkgray'>
                <Label>• Strings are compared in lowercase</Label>
            </Field>
            <Field id='boolLabel8' type='label' visibleBindingId='logicType'  visibleBindingValue='complex' alignWithControl='true' fontSize='small' fontColor='darkgray'>
                <Label>• Numbers are compared as floats</Label>
            </Field>
            <Field id='boolLabel9' type='label' visibleBindingId='logicType'  visibleBindingValue='complex' alignWithControl='true' fontSize='small' fontColor='darkgray'>
                <Label>• For boolean comparison, use simple logic</Label>
            </Field>
            <Field id='miscSeparator' type='separator' />
            <Field id='miscSection' type='label' fontColor='blue'>
                <Label>Miscellaneous:</Label>
            </Field>
            <Field id='logOnOff' type='checkbox' defaultValue='true'>
                <Label>Log On/Off?:</Label>
                <Description>Uncheck to suppress logging on/off events</Description>
            </Field>
        </ConfigUI>
        <States>
            <State id='onOffState'>
                <ValueType>Boolean</ValueType>
                <TriggerLabel>On/Off State is On</TriggerLabel>
                <TriggerLabelPrefix>On/Off State is</TriggerLabelPrefix>
                <ControlPageLabel>On/Off State</ControlPageLabel>
                <ControlPageLabelPrefix>On/Off State is</ControlPageLabelPrefix>
            </State>
            <State id='state'>
                <ValueType>
                    <List>
                        <Option value='idle'>Idle</Option>
                        <Option value='accrue'>Accrual</Option>
                        <Option value='active'>Active</Option>
                        <Option value='persist'>Persistent</Option>
                    </List>
                </ValueType>
                <TriggerLabel>Any State Change</TriggerLabel>
                <TriggerLabelPrefix>State is</TriggerLabelPrefix>
                <ControlPageLabel>State</ControlPageLabel>
                <ControlPageLabelPrefix>State is</ControlPageLabelPrefix>
            </State>
            <State id='displayState'>
                <ValueType>String</ValueType>
                <TriggerLabel>Display State Change</TriggerLabel>
                <TriggerLabelPrefix>Display State is</TriggerLabelPrefix>
                <ControlPageLabel>Display State</ControlPageLabel>
                <ControlPageLabelPrefix>Display State is</ControlPageLabelPrefix>
            </State>
            <State id='count'>
                <ValueType>Number</ValueType>
                <TriggerLabel>Count</TriggerLabel>
                <ControlPageLabel>Count</ControlPageLabel>
            </State>
            <State id='counting'>
                <ValueType>Boolean</ValueType>
                <TriggerLabel>Counting</TriggerLabel>
                <ControlPageLabel>Counting</ControlPageLabel>
            </State>
            <State id='expired'>
                <ValueType>Boolean</ValueType>
                <TriggerLabel>Expired</TriggerLabel>
                <ControlPageLabel>Expired</ControlPageLabel>
            </State>
            <State id='resetTime'>
                <ValueType>Number</ValueType>
                <TriggerLabel>Reset Time</TriggerLabel>
                <ControlPageLabel>Reset Time</ControlPageLabel>
            </State>
            <State id='resetString'>
                <ValueType>String</ValueType>
                <TriggerLabel>Reset String</TriggerLabel>
                <ControlPageLabel>Reset String</ControlPageLabel>
            </State>
            <State id='offTime'>
                <ValueType>Number</ValueType>
                <TriggerLabel>Off Time</TriggerLabel>
                <ControlPageLabel>Off Time</ControlPageLabel>
            </State>
            <State id='offString'>
                <ValueType>String</ValueType>
                <TriggerLabel>Off String</TriggerLabel>
                <ControlPageLabel>Off String</ControlPageLabel>
            </State>
        </States>
        <UiDisplayStateId>displayState</UiDisplayStateId>
    </Device>
    <Device type='custom' id='persistenceTimer'>
        <Name>Persistence Timer</Name>
        <ConfigUI>
            <Field id='description0' type='label'>
                <Label>Persistence Timer device tracks a single entity, igoring momentary changes.</Label>
            </Field>
            <Field id='description1' type='label' fontSize='small' fontColor='darkgray'>
                <Label>Device turns ON if input remains TRUE for duration of ON PERSIST.</Label>
            </Field>
            <Field id='description2' type='label' fontSize='small' fontColor='darkgray'>
                <Label>Device turns OFF if input remains FALSE for duration of OFF PERSIST.</Label>
            </Field>
            <Field id='timerSeparator' type='separator' />
            <Field id='timerSection' type='label' fontColor='blue'>
                <Label>Timer Settings:</Label>
            </Field>
            <Field id='onCycles' type='textfield' defaultValue='30'>
                <Label>On Persist Cycles:</Label>
            </Field>
            <Field id='onUnits' type='menu' defaultValue='seconds'>
                <Label>On Persist Units:</Label>
                <List>
                    <Option value='seconds'>Seconds</Option>
                    <Option value='minutes'>Minutes</Option>
                    <Option value='hours'>Hours</Option>
                    <Option value='days'>Days</Option>
                </List>
            </Field>
            <Field id='onHelp' type='label' fontSize='small' fontColor='darkgray' alignWithControl='true'>
                <Label>How long after TRUE input until this device turns ON.</Label>
            </Field>
            <Field id='offCycles' type='textfield' defaultValue='30'>
                <Label>Off Persist Cycles:</Label>
            </Field>
            <Field id='offUnits' type='menu' defaultValue='seconds'>
                <Label>Off Persist Units:</Label>
                <List>
                    <Option value='seconds'>Seconds</Option>
                    <Option value='minutes'>Minutes</Option>
                    <Option value='hours'>Hours</Option>
                    <Option value='days'>Days</Option>
                </List>
            </Field>
            <Field id='offHelp' type='label' fontSize='small' fontColor='darkgray' alignWithControl='true'>
                <Label>How long after FALSE input until this device turns OFF.</Label>
            </Field>
            <Field id='trackSeparator' type='separator' />
            <Field id='trackSection' type='label' fontColor='blue'>
                <Label>Tracked Entity:</Label>
            </Field>
            <Field id='trackEntity' type='menu' defaultValue='dev'>
                <Label>Track:</Label>
                <List>
                    <Option value='dev'>Device</Option>
                    <Option value='var'>Variable</Option>
                </List>
            </Field>
            <Field id='device1' type='menu' visibleBindingId='trackEntity'  visibleBindingValue='dev' alwaysUseInDialogHeightCalc='true'>
                <Label>Device:</Label>
                <List class='self' method='getDeviceList'/>
                <CallbackMethod>loadStates</CallbackMethod>
            </Field>
            <Field id='state1' type='menu' visibleBindingId='trackEntity'  visibleBindingValue='dev' alwaysUseInDialogHeightCalc='true'>
                <Label>State:</Label>
                <List class='self' filter='device1' method='getStateList' dynamicReload='true'/>
            </Field>
            <Field id='variable1' type='menu' visibleBindingId='trackEntity'  visibleBindingValue='var' alwaysUseInDialogHeightCalc='false'>
                <Label>Variable:</Label>
                <List class='self' method='getVariableList'/>
            </Field>
            <Field id='logicSeparator' type='separator' />
            <Field id='logicSection' type='label' fontColor='blue'>
                <Label>Input Logic:</Label>
            </Field>
            <Field id='logicHelp' type='label' alignWithControl='true' fontSize='small' fontColor='darkgray'>
                <Label>Which state or variable values are counted as TRUE inputs?</Label>
            </Field>
            <Field id='logicType' type='menu' defaultValue='simple'>
                <Label>Logic:</Label>
                <List>
                    <Option value='simple'>Simple</Option>
                    <Option value='complex'>Complex</Option>
                </List>
            </Field>
            <Field id='boolLabel1' type='label' visibleBindingId='logicType'  visibleBindingValue='simple' alignWithControl='true' fontSize='small' fontColor='darkgray'>
                <Label>• Strings match 'true', 'on', 'open', 'up', 'yes', 'active', 'locked', '1'  </Label>
            </Field>
            <Field id='boolLabel2' type='label' visibleBindingId='logicType'  visibleBindingValue='simple' alignWithControl='true' fontSize='small' fontColor='darkgray'>
                <Label>• Numbers match if non-zero</Label>
            </Field>
            <Field id='boolLabel3' type='label' visibleBindingId='logicType'  visibleBindingValue='simple' alignWithControl='true' fontSize='small' fontColor='darkgray'>
                <Label>• Booleans match if True</Label>
            </Field>
            <Field id='reverseBoolean' type='checkbox' defaultValue='false' visibleBindingId='logicType'  visibleBindingValue='simple' alwaysUseInDialogHeightCalc='true'>
                <Label>Reverse?:</Label>
                <Description>Check to reverse above logic.</Description>
            </Field>
            <Field id='boolLabel4' type='label' visibleBindingId='reverseBoolean'  visibleBindingValue='false' alignWithControl='true' fontSize='small' fontColor='darkgray'>
                <Label>• Matched value is TRUE input</Label>
            </Field>
            <Field id='boolLabel5' type='label' visibleBindingId='reverseBoolean'  visibleBindingValue='true' alignWithControl='true' fontSize='small' fontColor='darkgray'>
                <Label>• Matched value is FALSE input</Label>
            </Field>
            <Field id='operator' type='menu' defaultValue='eq' visibleBindingId='logicType'  visibleBindingValue='complex'>
                <Label>Operator:</Label>
                <List>
                    <Option value='eq'>Equal</Option>
                    <Option value='ne'>Not Equal</Option>
                    <Option value='gt'>Greater Than</Option>
                    <Option value='lt'>Less Than</Option>
                    <Option value='ge'>Greater or Equal</Option>
                    <Option value='le'>Less or Equal</Option>
                </List>
            </Field>
            <Field id='value' type='textfield' visibleBindingId='logicType'  visibleBindingValue='complex'>
                <Label>Comparison Value:</Label>
            </Field>
            <Field id='valueType' type='menu' defaultValue='str' visibleBindingId='logicType'  visibleBindingValue='complex'>
                <Label>Data Type:</Label>
                <List>
                    <Option value='str'>String</Option>
                    <Option value='num'>Number</Option>
                </List>
            </Field>
            <Field id='boolLabel6' type='label' visibleBindingId='logicType'  visibleBindingValue='complex' alignWithControl='true' fontSize='small' fontColor='darkgray'>
                <Label>• Type errors always compare as False</Label>
            </Field>
            <Field id='boolLabel7' type='label' visibleBindingId='logicType'  visibleBindingValue='complex' alignWithControl='true' fontSize='small' fontColor='darkgray'>
                <Label>• Strings are compared in lowercase</Label>
            </Field>
            <Field id='boolLabel8' type='label' visibleBindingId='logicType'  visibleBindingValue='complex' alignWithControl='true' fontSize='small' fontColor='darkgray'>
                <Label>• Numbers are compared as floats</Label>
            </Field>
            <Field id='boolLabel9' type='label' visibleBindingId='logicType'  visibleBindingValue='complex' alignWithControl='true' fontSize='small' fontColor='darkgray'>
                <Label>• For boolean comparison, use simple logic</Label>
            </Field>
            <Field id='miscSeparator' type='separator' />
            <Field id='miscSection' type='label' fontColor='blue'>
                <Label>Miscellaneous:</Label>
            </Field>
            <Field id='logOnOff' type='checkbox' defaultValue='true'>
                <Label>Log On/Off?:</Label>
                <Description>Uncheck to suppress logging on/off events</Description>
            </Field>
        </ConfigUI>
        <States>
            <State id='onOffState'>
                <ValueType>Boolean</ValueType>
                <TriggerLabel>On/Off State is On</TriggerLabel>
                <TriggerLabelPrefix>On/Off State is</TriggerLabelPrefix>
                <ControlPageLabel>On/Off State</ControlPageLabel>
                <ControlPageLabelPrefix>On/Off State is</ControlPageLabelPrefix>
            </State>
            <State id='state'>
                <ValueType>
                    <List>
                        <Option value='on'>On</Option>
                        <Option value='off'>Off</Option>
                        <Option value='pending'>Pending</Option>
                    </List>
                </ValueType>
                <TriggerLabel>Any State Change</TriggerLabel>
                <TriggerLabelPrefix>State is</TriggerLabelPrefix>
                <ControlPageLabel>State</ControlPageLabel>
                <ControlPageLabelPrefix>State is</ControlPageLabelPrefix>
            </State>
            <State id='displayState'>
                <ValueType>String</ValueType>
                <TriggerLabel>Display State Change</TriggerLabel>
                <TriggerLabelPrefix>Display State is</TriggerLabelPrefix>
                <ControlPageLabel>Display State</ControlPageLabel>
                <ControlPageLabelPrefix>Display State is</ControlPageLabelPrefix>
            </State>
            <State id='pending'>
                <ValueType>Boolean</ValueType>
                <TriggerLabel>Pending is</TriggerLabel>
                <TriggerLabelPrefix>Pending is</TriggerLabelPrefix>
                <ControlPageLabel>Pending</ControlPageLabel>
                <ControlPageLabelPrefix>Pending is</ControlPageLabelPrefix>
            </State>
            <State id='onTime'>
                <ValueType>Number</ValueType>
                <TriggerLabel>Reset Time</TriggerLabel>
                <ControlPageLabel>Reset Time</ControlPageLabel>
            </State>
            <State id='onString'>
                <ValueType>String</ValueType>
                <TriggerLabel>Reset String</TriggerLabel>
                <ControlPageLabel>Reset String</ControlPageLabel>
            </State>
            <State id='offTime'>
                <ValueType>Number</ValueType>
                <TriggerLabel>Reset Time</TriggerLabel>
                <ControlPageLabel>Reset Time</ControlPageLabel>
            </State>
            <State id='offString'>
                <ValueType>String</ValueType>
                <TriggerLabel>Reset String</TriggerLabel>
                <ControlPageLabel>Reset String</ControlPageLabel>
            </State>
        </States>
        <UiDisplayStateId>displayState</UiDisplayStateId>
    </Device>
    <Device type='custom' id='lockoutTimer'>
        <Name>Lockout Timer</Name>
        <ConfigUI>
            <Field id='description0' type='label'>
                <Label>Lockout Timer device tracks a single entity, igoring fast changes.</Label>
            </Field>
            <Field id='description1' type='label' fontSize='small' fontColor='darkgray'>
                <Label>Device turns ON with TRUE input, and locks until ON LOCKOUT expires.</Label>
            </Field>
            <Field id='description2' type='label' fontSize='small' fontColor='darkgray'>
                <Label>Device turns OFF with FALSE input, and locks until OFF LOCKOUT expires.</Label>
            </Field>
            <Field id='description3' type='label' fontSize='small' fontColor='darkgray'>
                <Label>When LOCKOUT expires, device will evaluate any subsequent changes.</Label>
            </Field>
            <Field id='timerSeparator' type='separator' />
            <Field id='timerSection' type='label' fontColor='blue'>
                <Label>Timer Settings:</Label>
            </Field>
            <Field id='onCycles' type='textfield' defaultValue='30'>
                <Label>On Lockout Cycles:</Label>
            </Field>
            <Field id='onUnits' type='menu' defaultValue='seconds'>
                <Label>On Lockout Units:</Label>
                <List>
                    <Option value='seconds'>Seconds</Option>
                    <Option value='minutes'>Minutes</Option>
                    <Option value='hours'>Hours</Option>
                    <Option value='days'>Days</Option>
                </List>
            </Field>
            <Field id='onHelp' type='label' fontSize='small' fontColor='darkgray' alignWithControl='true'>
                <Label>How long to prevent changes after this device turns ON.</Label>
            </Field>
            <Field id='offCycles' type='textfield' defaultValue='30'>
                <Label>Off Lockout Cycles:</Label>
            </Field>
            <Field id='offUnits' type='menu' defaultValue='seconds'>
                <Label>Off Lockout Units:</Label>
                <List>
                    <Option value='seconds'>Seconds</Option>
                    <Option value='minutes'>Minutes</Option>
                    <Option value='hours'>Hours</Option>
                    <Option value='days'>Days</Option>
                </List>
            </Field>
            <Field id='offHelp' type='label' fontSize='small' fontColor='darkgray' alignWithControl='true'>
                <Label>How long to prevent changes after this device turns OFF.</Label>
            </Field>
            <Field id='trackSeparator' type='separator' />
            <Field id='trackSection' type='label' fontColor='blue'>
                <Label>Tracked Entity:</Label>
            </Field>
            <Field id='trackEntity' type='menu' defaultValue='dev'>
                <Label>Track:</Label>
                <List>
                    <Option value='dev'>Device</Option>
                    <Option value='var'>Variable</Option>
                </List>
            </Field>
            <Field id='device1' type='menu' visibleBindingId='trackEntity'  visibleBindingValue='dev' alwaysUseInDialogHeightCalc='true'>
                <Label>Device:</Label>
                <List class='self' method='getDeviceList'/>
                <CallbackMethod>loadStates</CallbackMethod>
            </Field>
            <Field id='state1' type='menu' visibleBindingId='trackEntity'  visibleBindingValue='dev' alwaysUseInDialogHeightCalc='true'>
                <Label>State:</Label>
                <List class='self' filter='device1' method='getStateList' dynamicReload='true'/>
            </Field>
            <Field id='variable1' type='menu' visibleBindingId='trackEntity'  visibleBindingValue='var' alwaysUseInDialogHeightCalc='false'>
                <Label>Variable:</Label>
                <List class='self' method='getVariableList'/>
            </Field>
            <Field id='logicSeparator' type='separator' />
            <Field id='logicSection' type='label' fontColor='blue'>
                <Label>Input Logic:</Label>
            </Field>
            <Field id='logicHelp' type='label' alignWithControl='true' fontSize='small' fontColor='darkgray'>
                <Label>Which state or variable values are counted as TRUE inputs?</Label>
            </Field>
            <Field id='logicType' type='menu' defaultValue='simple'>
                <Label>Logic:</Label>
                <List>
                    <Option value='simple'>Simple</Option>
                    <Option value='complex'>Complex</Option>
                </List>
            </Field>
            <Field id='boolLabel1' type='label' visibleBindingId='logicType'  visibleBindingValue='simple' alignWithControl='true' fontSize='small' fontColor='darkgray'>
                <Label>• Strings match 'true', 'on', 'open', 'up', 'yes', 'active', 'locked', '1'  </Label>
            </Field>
            <Field id='boolLabel2' type='label' visibleBindingId='logicType'  visibleBindingValue='simple' alignWithControl='true' fontSize='small' fontColor='darkgray'>
                <Label>• Numbers match if non-zero</Label>
            </Field>
            <Field id='boolLabel3' type='label' visibleBindingId='logicType'  visibleBindingValue='simple' alignWithControl='true' fontSize='small' fontColor='darkgray'>
                <Label>• Booleans match if True</Label>
            </Field>
            <Field id='reverseBoolean' type='checkbox' defaultValue='false' visibleBindingId='logicType'  visibleBindingValue='simple' alwaysUseInDialogHeightCalc='true'>
                <Label>Reverse?:</Label>
                <Description>Check to reverse above logic.</Description>
            </Field>
            <Field id='boolLabel4' type='label' visibleBindingId='reverseBoolean'  visibleBindingValue='false' alignWithControl='true' fontSize='small' fontColor='darkgray'>
                <Label>• Matched value is TRUE input</Label>
            </Field>
            <Field id='boolLabel5' type='label' visibleBindingId='reverseBoolean'  visibleBindingValue='true' alignWithControl='true' fontSize='small' fontColor='darkgray'>
                <Label>• Matched value is FALSE input</Label>
            </Field>
            <Field id='operator' type='menu' defaultValue='eq' visibleBindingId='logicType'  visibleBindingValue='complex'>
                <Label>Operator:</Label>
                <List>
                    <Option value='eq'>Equal</Option>
                    <Option value='ne'>Not Equal</Option>
                    <Option value='gt'>Greater Than</Option>
                    <Option value='lt'>Less Than</Option>
                    <Option value='ge'>Greater or Equal</Option>
                    <Option value='le'>Less or Equal</Option>
                </List>
            </Field>
            <Field id='value' type='textfield' visibleBindingId='logicType'  visibleBindingValue='complex'>
                <Label>Comparison Value:</Label>
            </Field>
            <Field id='valueType' type='menu' defaultValue='str' visibleBindingId='logicType'  visibleBindingValue='complex'>
                <Label>Data Type:</Label>
                <List>
                    <Option value='str'>String</Option>
                    <Option value='num'>Number</Option>
                </List>
            </Field>
            <Field id='boolLabel6' type='label' visibleBindingId='logicType'  visibleBindingValue='complex' alignWithControl='true' fontSize='small' fontColor='darkgray'>
                <Label>• Type errors always compare as False</Label>
            </Field>
            <Field id='boolLabel7' type='label' visibleBindingId='logicType'  visibleBindingValue='complex' alignWithControl='true' fontSize='small' fontColor='darkgray'>
                <Label>• Strings are compared in lowercase</Label>
            </Field>
            <Field id='boolLabel8' type='label' visibleBindingId='logicType'  visibleBindingValue='complex' alignWithControl='true' fontSize='small' fontColor='darkgray'>
                <Label>• Numbers are compared as floats</Label>
            </Field>
            <Field id='boolLabel9' type='label' visibleBindingId='logicType'  visibleBindingValue='complex' alignWithControl='true' fontSize='small' fontColor='darkgray'>
                <Label>• For boolean comparison, use simple logic</Label>
            </Field>
            <Field id='miscSeparator' type='separator' />
            <Field id='miscSection' type='label' fontColor='blue'>
                <Label>Miscellaneous:</Label>
            </Field>
            <Field id='logOnOff' type='checkbox' defaultValue='true'>
                <Label>Log On/Off?:</Label>
                <Description>Uncheck to suppress logging on/off events</Description>
            </Field>
        </ConfigUI>
        <States>
            <State id='onOffState'>
                <ValueType>Boolean</ValueType>
                <TriggerLabel>On/Off State is On</TriggerLabel>
                <TriggerLabelPrefix>On/Off State is</TriggerLabelPrefix>
                <ControlPageLabel>On/Off State</ControlPageLabel>
                <ControlPageLabelPrefix>On/Off State is</ControlPageLabelPrefix>
            </State>
            <State id='state'>
                <ValueType>
                    <List>
                        <Option value='on'>On</Option>
                        <Option value='off'>Off</Option>
                        <Option value='locked'>Locked</Option>
                    </List>
                </ValueType>
                <TriggerLabel>Any State Change</TriggerLabel>
                <TriggerLabelPrefix>State is</TriggerLabelPrefix>
                <ControlPageLabel>State</ControlPageLabel>
                <ControlPageLabelPrefix>State is</ControlPageLabelPrefix>
            </State>
            <State id='displayState'>
                <ValueType>String</ValueType>
                <TriggerLabel>Display State Change</TriggerLabel>
                <TriggerLabelPrefix>Display State is</TriggerLabelPrefix>
                <ControlPageLabel>Display State</ControlPageLabel>
                <ControlPageLabelPrefix>Display State is</ControlPageLabelPrefix>
            </State>
            <State id='locked'>
                <ValueType>Boolean</ValueType>
                <TriggerLabel>Locked is</TriggerLabel>
                <TriggerLabelPrefix>Locked is</TriggerLabelPrefix>
                <ControlPageLabel>Locked</ControlPageLabel>
                <ControlPageLabelPrefix>Locked is</ControlPageLabelPrefix>
            </State>
            <State id='onTime'>
                <ValueType>Number</ValueType>
                <TriggerLabel>Reset Time</TriggerLabel>
                <ControlPageLabel>Reset Time</ControlPageLabel>
            </State>
            <State id='onString'>
                <ValueType>String</ValueType>
                <TriggerLabel>Reset String</TriggerLabel>
                <ControlPageLabel>Reset String</ControlPageLabel>
            </State>
            <State id='offTime'>
                <ValueType>Number</ValueType>
                <TriggerLabel>Reset Time</TriggerLabel>
                <ControlPageLabel>Reset Time</ControlPageLabel>
            </State>
            <State id='offString'>
                <ValueType>String</ValueType>
                <TriggerLabel>Reset String</TriggerLabel>
                <ControlPageLabel>Reset String</ControlPageLabel>
            </State>
        </States>
        <UiDisplayStateId>displayState</UiDisplayStateId>
    </Device>
    <Device type='custom' id='aliveTimer'>
        <Name>Alive Timer</Name>
        <ConfigUI>
            <Field id='description0' type='label'>
                <Label>Alive Timer device tracks a single enity for any changes.</Label>
            </Field>
            <Field id='description1' type='label' fontSize='small' fontColor='darkgray'>
                <Label>Device turns ON and sets ALIVE TIMER if any change is detected (including heartbeat).</Label>
            </Field>
            <Field id='description2' type='label' fontSize='small' fontColor='darkgray'>
                <Label>Device turns OFF if ALIVE TIMER expires.</Label>
            </Field>
            <Field id='timerSeparator' type='separator' />
            <Field id='timerSection' type='label' fontColor='blue'>
                <Label>Timer Settings:</Label>
            </Field>
            <Field id='offCycles' type='textfield' defaultValue='25'>
                <Label>Alive Timer Cycles:</Label>
            </Field>
            <Field id='offUnits' type='menu' defaultValue='hours'>
                <Label>Alive Timer Units:</Label>
                <List>
                    <Option value='seconds'>Seconds</Option>
                    <Option value='minutes'>Minutes</Option>
                    <Option value='hours'>Hours</Option>
                    <Option value='days'>Days</Option>
                </List>
            </Field>
            <Field id='offHelp' type='label' fontSize='small' fontColor='darkgray' alignWithControl='true'>
                <Label>How after last detected change before this device turns OFF.</Label>
            </Field>
            <Field id='trackSeparator' type='separator' />
            <Field id='trackSection' type='label' fontColor='blue'>
                <Label>Tracked Entity:</Label>
            </Field>
            <Field id='trackEntity' type='menu' defaultValue='dev'>
                <Label>Track:</Label>
                <List>
                    <Option value='dev'>Device</Option>
                    <Option value='var'>Variable</Option>
                </List>
            </Field>
            <Field id='device1' type='menu' visibleBindingId='trackEntity'  visibleBindingValue='dev' alwaysUseInDialogHeightCalc='true'>
                <Label>Device:</Label>
                <List class='self' method='getDeviceList'/>
            </Field>
            <Field id='state1' type='textField' defaultValue='None' hidden='true' />
            <Field id='variable1' type='menu' visibleBindingId='trackEntity'  visibleBindingValue='var' alwaysUseInDialogHeightCalc='false'>
                <Label>Variable:</Label>
                <List class='self' method='getVariableList'/>
            </Field>
            <Field id='miscSeparator' type='separator' />
            <Field id='miscSection' type='label' fontColor='blue'>
                <Label>Miscellaneous:</Label>
            </Field>
            <Field id='logOnOff' type='checkbox' defaultValue='true'>
                <Label>Log On/Off?:</Label>
                <Description>Uncheck to suppress logging on/off events</Description>
            </Field>
        </ConfigUI>
        <States>
            <State id='onOffState'>
                <ValueType>Boolean</ValueType>
                <TriggerLabel>On/Off State is On</TriggerLabel>
                <TriggerLabelPrefix>On/Off State is</TriggerLabelPrefix>
                <ControlPageLabel>On/Off State</ControlPageLabel>
                <ControlPageLabelPrefix>On/Off State is</ControlPageLabelPrefix>
            </State>
            <State id='state'>
                <ValueType>
                    <List>
                        <Option value='on'>On</Option>
                        <Option value='off'>Off</Option>
                    </List>
                </ValueType>
                <TriggerLabel>Any State Change</TriggerLabel>
                <TriggerLabelPrefix>State is</TriggerLabelPrefix>
                <ControlPageLabel>State</ControlPageLabel>
                <ControlPageLabelPrefix>State is</ControlPageLabelPrefix>
            </State>
            <State id='displayState'>
                <ValueType>String</ValueType>
                <TriggerLabel>Display State Change</TriggerLabel>
                <TriggerLabelPrefix>Display State is</TriggerLabelPrefix>
                <ControlPageLabel>Display State</ControlPageLabel>
                <ControlPageLabelPrefix>Display State is</ControlPageLabelPrefix>
            </State>
            <State id='offTime'>
                <ValueType>Number</ValueType>
                <TriggerLabel>Reset Time</TriggerLabel>
                <ControlPageLabel>Reset Time</ControlPageLabel>
            </State>
            <State id='offString'>
                <ValueType>String</ValueType>
                <TriggerLabel>Reset String</TriggerLabel>
                <ControlPageLabel>Reset String</ControlPageLabel>
            </State>
        </States>
        <UiDisplayStateId>displayState</UiDisplayStateId>
    </Device>
    <Device type='custom' id='runningTimer'>
        <Name>Running Timer</Name>
        <ConfigUI>
            <Field id='description0' type='label'>
                <Label>Running Timer device tracks a single enity, maintaining statistics of on time.</Label>
            </Field>
            <Field id='description1' type='label' fontSize='small' fontColor='darkgray'>
                <Label>Device turns ON with TRUE input and OFF with FALSE input.</Label>
            </Field>
            <Field id='description2' type='label' fontSize='small' fontColor='darkgray'>
                <Label>Total ON times are recorded for current and prior hour, day, week, month and year.</Label>
            </Field>
            <Field id='timerSeparator' type='separator' />
            <Field id='timerSection' type='label' fontColor='blue'>
                <Label>Timer Settings:</Label>
            </Field>
            <Field id='updateSeconds' type='menu' defaultValue='60'>
                <Label>Update Frequency:</Label>
                <List>
                    <Option value='0'>Only when changed</Option>
                    <Option value='5'>5 Seconds (testing)</Option>
                    <Option value='10'>10 Seconds</Option>
                    <Option value='30'>30 Seconds</Option>
                    <Option value="60">1 Minute</Option>
                    <Option value="120">2 Minutes</Option>
                    <Option value="300">5 Minutes</Option>
                    <Option value="600">10 Minutes</Option>
                    <Option value="900">15 Minutes</Option>
                    <Option value="1800">30 Minutes</Option>
                    <Option value="3600">1 Hour</Option>
                </List>
            </Field>
            <Field id='updateHelp0' type='label' alignWithControl='true' fontSize='small' fontColor='darkgray'>
                <Label>• Only affects how often totals are saved to device's states.</Label>
            </Field>
            <Field id='updateHelp1' type='label' alignWithControl='true' fontSize='small' fontColor='darkgray'>
                <Label>• This is NOT the granularity of the measurment.</Label>
            </Field>
            <Field id='updateHelp2' type='label' alignWithControl='true' fontSize='small' fontColor='darkgray'>
                <Label>• Device will ALWAYS update when the tracked entity changes.</Label>
            </Field>
            <Field id='trackSeparator' type='separator' />
            <Field id='trackSection' type='label' fontColor='blue'>
                <Label>Tracked Entity:</Label>
            </Field>
            <Field id='trackEntity' type='menu' defaultValue='dev'>
                <Label>Track:</Label>
                <List>
                    <Option value='dev'>Device</Option>
                    <Option value='var'>Variable</Option>
                </List>
            </Field>
            <Field id='device1' type='menu' visibleBindingId='trackEntity'  visibleBindingValue='dev' alwaysUseInDialogHeightCalc='true'>
                <Label>Device:</Label>
                <List class='self' method='getDeviceList'/>
                <CallbackMethod>loadStates</CallbackMethod>
            </Field>
            <Field id='state1' type='menu' visibleBindingId='trackEntity'  visibleBindingValue='dev' alwaysUseInDialogHeightCalc='true'>
                <Label>State:</Label>
                <List class='self' filter='device1' method='getStateList' dynamicReload='true'/>
            </Field>
            <Field id='variable1' type='menu' visibleBindingId='trackEntity'  visibleBindingValue='var' alwaysUseInDialogHeightCalc='false'>
                <Label>Variable:</Label>
                <List class='self' method='getVariableList'/>
            </Field>
            <Field id='logicSeparator' type='separator' />
            <Field id='logicSection' type='label' fontColor='blue'>
                <Label>Input Logic:</Label>
            </Field>
            <Field id='logicHelp' type='label' alignWithControl='true' fontSize='small' fontColor='darkgray'>
                <Label>Which state or variable values are counted as TRUE inputs?</Label>
            </Field>
            <Field id='logicType' type='menu' defaultValue='simple'>
                <Label>Logic:</Label>
                <List>
                    <Option value='simple'>Simple</Option>
                    <Option value='complex'>Complex</Option>
                </List>
            </Field>
            <Field id='boolLabel1' type='label' visibleBindingId='logicType'  visibleBindingValue='simple' alignWithControl='true' fontSize='small' fontColor='darkgray'>
                <Label>• Strings match 'true', 'on', 'open', 'up', 'yes', 'active', 'locked', '1'  </Label>
            </Field>
            <Field id='boolLabel2' type='label' visibleBindingId='logicType'  visibleBindingValue='simple' alignWithControl='true' fontSize='small' fontColor='darkgray'>
                <Label>• Numbers match if non-zero</Label>
            </Field>
            <Field id='boolLabel3' type='label' visibleBindingId='logicType'  visibleBindingValue='simple' alignWithControl='true' fontSize='small' fontColor='darkgray'>
                <Label>• Booleans match if True</Label>
            </Field>
            <Field id='reverseBoolean' type='checkbox' defaultValue='false' visibleBindingId='logicType'  visibleBindingValue='simple' alwaysUseInDialogHeightCalc='true'>
                <Label>Reverse?:</Label>
                <Description>Check to reverse above logic.</Description>
            </Field>
            <Field id='boolLabel4' type='label' visibleBindingId='reverseBoolean'  visibleBindingValue='false' alignWithControl='true' fontSize='small' fontColor='darkgray'>
                <Label>• Matched value is TRUE input</Label>
            </Field>
            <Field id='boolLabel5' type='label' visibleBindingId='reverseBoolean'  visibleBindingValue='true' alignWithControl='true' fontSize='small' fontColor='darkgray'>
                <Label>• Matched value is FALSE input</Label>
            </Field>
            <Field id='operator' type='menu' defaultValue='eq' visibleBindingId='logicType'  visibleBindingValue='complex'>
                <Label>Operator:</Label>
                <List>
                    <Option value='eq'>Equal</Option>
                    <Option value='ne'>Not Equal</Option>
                    <Option value='gt'>Greater Than</Option>
                    <Option value='lt'>Less Than</Option>
                    <Option value='ge'>Greater or Equal</Option>
                    <Option value='le'>Less or Equal</Option>
                </List>
            </Field>
            <Field id='value' type='textfield' visibleBindingId='logicType'  visibleBindingValue='complex'>
                <Label>Comparison Value:</Label>
            </Field>
            <Field id='valueType' type='menu' defaultValue='str' visibleBindingId='logicType'  visibleBindingValue='complex'>
                <Label>Data Type:</Label>
                <List>
                    <Option value='str'>String</Option>
                    <Option value='num'>Number</Option>
                </List>
            </Field>
            <Field id='boolLabel6' type='label' visibleBindingId='logicType'  visibleBindingValue='complex' alignWithControl='true' fontSize='small' fontColor='darkgray'>
                <Label>• Type errors always compare as False</Label>
            </Field>
            <Field id='boolLabel7' type='label' visibleBindingId='logicType'  visibleBindingValue='complex' alignWithControl='true' fontSize='small' fontColor='darkgray'>
                <Label>• Strings are compared in lowercase</Label>
            </Field>
            <Field id='boolLabel8' type='label' visibleBindingId='logicType'  visibleBindingValue='complex' alignWithControl='true' fontSize='small' fontColor='darkgray'>
                <Label>• Numbers are compared as floats</Label>
            </Field>
            <Field id='boolLabel9' type='label' visibleBindingId='logicType'  visibleBindingValue='complex' alignWithControl='true' fontSize='small' fontColor='darkgray'>
                <Label>• For boolean comparison, use simple logic</Label>
            </Field>
            <Field id='miscSeparator' type='separator' />
            <Field id='miscSection' type='label' fontColor='blue'>
                <Label>Miscellaneous:</Label>
            </Field>
            <Field id='logOnOff' type='checkbox' defaultValue='true'>
                <Label>Log On/Off?:</Label>
                <Description>Uncheck to suppress logging on/off events</Description>
            </Field>
        </ConfigUI>
        <States>
            <State id='onOffState'>
                <ValueType>Boolean</ValueType>
                <TriggerLabel>On/Off State is On</TriggerLabel>
                <TriggerLabelPrefix>On/Off State is</TriggerLabelPrefix>
                <ControlPageLabel>On/Off State</ControlPageLabel>
                <ControlPageLabelPrefix>On/Off State is</ControlPageLabelPrefix>
            </State>
            <State id='state'>
                <ValueType>
                    <List>
                        <Option value='on'>On</Option>
                        <Option value='off'>Off</Option>
                    </List>
                </ValueType>
                <TriggerLabel>Any State Change</TriggerLabel>
                <TriggerLabelPrefix>State is</TriggerLabelPrefix>
                <ControlPageLabel>State</ControlPageLabel>
                <ControlPageLabelPrefix>State is</ControlPageLabelPrefix>
            </State>
            <State id='displayState'>
                <ValueType>String</ValueType>
                <TriggerLabel>Display State Change</TriggerLabel>
                <TriggerLabelPrefix>Display State is</TriggerLabelPrefix>
                <ControlPageLabel>Display State</ControlPageLabel>
                <ControlPageLabelPrefix>Display State is</ControlPageLabelPrefix>
            </State>
            <State id='onTime'>
                <ValueType>Number</ValueType>
                <TriggerLabel>Reset Time</TriggerLabel>
                <ControlPageLabel>Reset Time</ControlPageLabel>
            </State>
            <State id='onString'>
                <ValueType>String</ValueType>
                <TriggerLabel>Reset String</TriggerLabel>
                <ControlPageLabel>Reset String</ControlPageLabel>
            </State>
            <State id='offTime'>
                <ValueType>Number</ValueType>
                <TriggerLabel>Reset Time</TriggerLabel>
                <ControlPageLabel>Reset Time</ControlPageLabel>
            </State>
            <State id='offString'>
                <ValueType>String</ValueType>
                <TriggerLabel>Reset String</TriggerLabel>
                <ControlPageLabel>Reset String</ControlPageLabel>
            </State>
            <State id='secondsContinuous00'>
                <ValueType>Number</ValueType>
                <TriggerLabel>Seconds On Currently</TriggerLabel>
                <ControlPageLabel>Seconds On Currently</ControlPageLabel>
            </State>
            <State id='secondsContinuous01'>
                <ValueType>Number</ValueType>
                <TriggerLabel>Seconds On Previously</TriggerLabel>
                <ControlPageLabel>Seconds On Previously</ControlPageLabel>
            </State>
            <State id='secondsHour00'>
                <ValueType>Number</ValueType>
                <TriggerLabel>Seconds On Current Hour</TriggerLabel>
                <ControlPageLabel>Seconds On Current Hour</ControlPageLabel>
            </State>
            <State id='secondsHour01'>
                <ValueType>Number</ValueType>
                <TriggerLabel>Seconds On 1 Hour Ago</TriggerLabel>
                <ControlPageLabel>Seconds On 1 Hour Ago</ControlPageLabel>
            </State>
            <State id='secondsHour02'>
                <ValueType>Number</ValueType>
                <TriggerLabel>Seconds On 2 Hours Ago</TriggerLabel>
                <ControlPageLabel>Seconds On 2 Hours Ago</ControlPageLabel>
            </State>
            <State id='secondsHour03'>
                <ValueType>Number</ValueType>
                <TriggerLabel>Seconds On 3 Hours Ago</TriggerLabel>
                <ControlPageLabel>Seconds On 3 Hours Ago</ControlPageLabel>
            </State>
            <State id='secondsHour04'>
                <ValueType>Number</ValueType>
                <TriggerLabel>Seconds On 4 Hours Ago</TriggerLabel>
                <ControlPageLabel>Seconds On 4 Hours Ago</ControlPageLabel>
            </State>
            <State id='secondsHour05'>
                <ValueType>Number</ValueType>
                <TriggerLabel>Seconds On 5 Hours Ago</TriggerLabel>
                <ControlPageLabel>Seconds On 5 Hours Ago</ControlPageLabel>
            </State>
            <State id='secondsHour06'>
                <ValueType>Number</ValueType>
                <TriggerLabel>Seconds On 6 Hours Ago</TriggerLabel>
                <ControlPageLabel>Seconds On 6 Hours Ago</ControlPageLabel>
            </State>
            <State id='secondsHour07'>
                <ValueType>Number</ValueType>
                <TriggerLabel>Seconds On 7 Hours Ago</TriggerLabel>
                <ControlPageLabel>Seconds On 7 Hours Ago</ControlPageLabel>
            </State>
            <State id='secondsHour08'>
                <ValueType>Number</ValueType>
                <TriggerLabel>Seconds On 8 Hours Ago</TriggerLabel>
                <ControlPageLabel>Seconds On 8 Hours Ago</ControlPageLabel>
            </State>
            <State id='secondsHour09'>
                <ValueType>Number</ValueType>
                <TriggerLabel>Seconds On 9 Hours Ago</TriggerLabel>
                <ControlPageLabel>Seconds On 9 Hours Ago</ControlPageLabel>
            </State>
            <State id='secondsHour10'>
                <ValueType>Number</ValueType>
                <TriggerLabel>Seconds On 10 Hours Ago</TriggerLabel>
                <ControlPageLabel>Seconds On 10 Hours Ago</ControlPageLabel>
            </State>
            <State id='secondsHour11'>
                <ValueType>Number</ValueType>
                <TriggerLabel>Seconds On 11 Hours Ago</TriggerLabel>
                <ControlPageLabel>Seconds On 11 Hours Ago</ControlPageLabel>
            </State>
            <State id='secondsHour12'>
                <ValueType>Number</ValueType>
                <TriggerLabel>Seconds On 12 Hours Ago</TriggerLabel>
                <ControlPageLabel>Seconds On 12 Hours Ago</ControlPageLabel>
            </State>
            <State id='secondsHour13'>
                <ValueType>Number</ValueType>
                <TriggerLabel>Seconds On 13 Hours Ago</TriggerLabel>
                <ControlPageLabel>Seconds On 13 Hours Ago</ControlPageLabel>
            </State>
            <State id='secondsHour14'>
                <ValueType>Number</ValueType>
                <TriggerLabel>Seconds On 14 Hours Ago</TriggerLabel>
                <ControlPageLabel>Seconds On 14 Hours Ago</ControlPageLabel>
            </State>
            <State id='secondsHour15'>
                <ValueType>Number</ValueType>
                <TriggerLabel>Seconds On 15 Hours Ago</TriggerLabel>
                <ControlPageLabel>Seconds On 15 Hours Ago</ControlPageLabel>
            </State>
            <State id='secondsHour16'>
                <ValueType>Number</ValueType>
                <TriggerLabel>Seconds On 16 Hours Ago</TriggerLabel>
                <ControlPageLabel>Seconds On 16 Hours Ago</ControlPageLabel>
            </State>
            <State id='secondsHour17'>
                <ValueType>Number</ValueType>
                <TriggerLabel>Seconds On 17 Hours Ago</TriggerLabel>
                <ControlPageLabel>Seconds On 17 Hours Ago</ControlPageLabel>
            </State>
            <State id='secondsHour18'>
                <ValueType>Number</ValueType>
                <TriggerLabel>Seconds On 18 Hours Ago</TriggerLabel>
                <ControlPageLabel>Seconds On 18 Hours Ago</ControlPageLabel>
            </State>
            <State id='secondsHour19'>
                <ValueType>Number</ValueType>
                <TriggerLabel>Seconds On 19 Hours Ago</TriggerLabel>
                <ControlPageLabel>Seconds On 19 Hours Ago</ControlPageLabel>
            </State>
            <State id='secondsHour20'>
                <ValueType>Number</ValueType>
                <TriggerLabel>Seconds On 20 Hours Ago</TriggerLabel>
                <ControlPageLabel>Seconds On 20 Hours Ago</ControlPageLabel>
            </State>
            <State id='secondsHour21'>
                <ValueType>Number</ValueType>
                <TriggerLabel>Seconds On 21 Hours Ago</TriggerLabel>
                <ControlPageLabel>Seconds On 21 Hours Ago</ControlPageLabel>
            </State>
            <State id='secondsHour22'>
                <ValueType>Number</ValueType>
                <TriggerLabel>Seconds On 22 Hours Ago</TriggerLabel>
                <ControlPageLabel>Seconds On 22 Hours Ago</ControlPageLabel>
            </State>
            <State id='secondsHour23'>
                <ValueType>Number</ValueType>
                <TriggerLabel>Seconds On 23 Hours Ago</TriggerLabel>
                <ControlPageLabel>Seconds On 23 Hours Ago</ControlPageLabel>
            </State>
            <State id='secondsHour24'>
                <ValueType>Number</ValueType>
                <TriggerLabel>Seconds On 24 Hours Ago</TriggerLabel>
                <ControlPageLabel>Seconds On 24 Hours Ago</ControlPageLabel>
            </State>
            <State id='secondsDay00'>
                <ValueType>Number</ValueType>
                <TriggerLabel>Seconds On Current Day</TriggerLabel>
                <ControlPageLabel>Seconds On Current Day</ControlPageLabel>
            </State>
            <State id='secondsDay01'>
                <ValueType>Number</ValueType>
                <TriggerLabel>Seconds On 1 Day Ago</TriggerLabel>
                <ControlPageLabel>Seconds On 1 Day Ago</ControlPageLabel>
            </State>
            <State id='secondsDay02'>
                <ValueType>Number</ValueType>
                <TriggerLabel>Seconds On 2 Days Ago</TriggerLabel>
                <ControlPageLabel>Seconds On 2 Days Ago</ControlPageLabel>
            </State>
            <State id='secondsDay03'>
                <ValueType>Number</ValueType>
                <TriggerLabel>Seconds On 3 Days Ago</TriggerLabel>
                <ControlPageLabel>Seconds On 3 Days Ago</ControlPageLabel>
            </State>
            <State id='secondsDay04'>
                <ValueType>Number</ValueType>
                <TriggerLabel>Seconds On 4 Days Ago</TriggerLabel>
                <ControlPageLabel>Seconds On 4 Days Ago</ControlPageLabel>
            </State>
            <State id='secondsDay05'>
                <ValueType>Number</ValueType>
                <TriggerLabel>Seconds On 5 Days Ago</TriggerLabel>
                <ControlPageLabel>Seconds On 5 Days Ago</ControlPageLabel>
            </State>
            <State id='secondsDay06'>
                <ValueType>Number</ValueType>
                <TriggerLabel>Seconds On 6 Days Ago</TriggerLabel>
                <ControlPageLabel>Seconds On 6 Days Ago</ControlPageLabel>
            </State>
            <State id='secondsDay07'>
                <ValueType>Number</ValueType>
                <TriggerLabel>Seconds On 7 Days Ago</TriggerLabel>
                <ControlPageLabel>Seconds On 7 Days Ago</ControlPageLabel>
            </State>
            <State id='secondsWeek00'>
                <ValueType>Number</ValueType>
                <TriggerLabel>Seconds On Current Week</TriggerLabel>
                <ControlPageLabel>Seconds On Current Week</ControlPageLabel>
            </State>
            <State id='secondsWeek01'>
                <ValueType>Number</ValueType>
                <TriggerLabel>Seconds On 1 Week Ago</TriggerLabel>
                <ControlPageLabel>Seconds On 1 Week Ago</ControlPageLabel>
            </State>
            <State id='secondsWeek02'>
                <ValueType>Number</ValueType>
                <TriggerLabel>Seconds On 2 Weeks Ago</TriggerLabel>
                <ControlPageLabel>Seconds On 2 Weeks Ago</ControlPageLabel>
            </State>
            <State id='secondsWeek03'>
                <ValueType>Number</ValueType>
                <TriggerLabel>Seconds On 3 Weeks Ago</TriggerLabel>
                <ControlPageLabel>Seconds On 3 Weeks Ago</ControlPageLabel>
            </State>
            <State id='secondsWeek04'>
                <ValueType>Number</ValueType>
                <TriggerLabel>Seconds On 4 Weeks Ago</TriggerLabel>
                <ControlPageLabel>Seconds On 4 Weeks Ago</ControlPageLabel>
            </State>
            <State id='secondsMonth00'>
                <ValueType>Number</ValueType>
                <TriggerLabel>Seconds On Current Month</TriggerLabel>
                <ControlPageLabel>Seconds On Current Month</ControlPageLabel>
            </State>
            <State id='secondsMonth01'>
                <ValueType>Number</ValueType>
                <TriggerLabel>Seconds On 1 Month Ago</TriggerLabel>
                <ControlPageLabel>Seconds On 1 Month Ago</ControlPageLabel>
            </State>
            <State id='secondsMonth02'>
                <ValueType>Number</ValueType>
                <TriggerLabel>Seconds On 2 Months Ago</TriggerLabel>
                <ControlPageLabel>Seconds On 2 Months Ago</ControlPageLabel>
            </State>
            <State id='secondsMonth03'>
                <ValueType>Number</ValueType>
                <TriggerLabel>Seconds On 3 Months Ago</TriggerLabel>
                <ControlPageLabel>Seconds On 3 Months Ago</ControlPageLabel>
            </State>
            <State id='secondsMonth04'>
                <ValueType>Number</ValueType>
                <TriggerLabel>Seconds On 4 Months Ago</TriggerLabel>
                <ControlPageLabel>Seconds On 4 Months Ago</ControlPageLabel>
            </State>
            <State id='secondsMonth05'>
                <ValueType>Number</ValueType>
                <TriggerLabel>Seconds On 5 Months Ago</TriggerLabel>
                <ControlPageLabel>Seconds On 5 Months Ago</ControlPageLabel>
            </State>
            <State id='secondsMonth06'>
                <ValueType>Number</ValueType>
                <TriggerLabel>Seconds On 6 Months Ago</TriggerLabel>
                <ControlPageLabel>Seconds On 6 Months Ago</ControlPageLabel>
            </State>
            <State id='secondsMonth07'>
                <ValueType>Number</ValueType>
                <TriggerLabel>Seconds On 7 Months Ago</TriggerLabel>
                <ControlPageLabel>Seconds On 7 Months Ago</ControlPageLabel>
            </State>
            <State id='secondsMonth08'>
                <ValueType>Number</ValueType>
                <TriggerLabel>Seconds On 8 Months Ago</TriggerLabel>
                <ControlPageLabel>Seconds On 8 Months Ago</ControlPageLabel>
            </State>
            <State id='secondsMonth09'>
                <ValueType>Number</ValueType>
                <TriggerLabel>Seconds On 9 Months Ago</TriggerLabel>
                <ControlPageLabel>Seconds On 9 Months Ago</ControlPageLabel>
            </State>
            <State id='secondsMonth10'>
                <ValueType>Number</ValueType>
                <TriggerLabel>Seconds On 10 Months Ago</TriggerLabel>
                <ControlPageLabel>Seconds On 10 Months Ago</ControlPageLabel>
            </State>
            <State id='secondsMonth11'>
                <ValueType>Number</ValueType>
                <TriggerLabel>Seconds On 11 Months Ago</TriggerLabel>
                <ControlPageLabel>Seconds On 11 Months Ago</ControlPageLabel>
            </State>
            <State id='secondsMonth12'>
                <ValueType>Number</ValueType>
                <TriggerLabel>Seconds On 12 Months Ago</TriggerLabel>
                <ControlPageLabel>Seconds On 12 Months Ago</ControlPageLabel>
            </State>
            <State id='secondsYear00'>
                <ValueType>Number</ValueType>
                <TriggerLabel>Seconds On Current Year</TriggerLabel>
                <ControlPageLabel>Seconds Current Year</ControlPageLabel>
            </State>
            <State id='secondsYear01'>
                <ValueType>Number</ValueType>
                <TriggerLabel>Seconds On Previous Year</TriggerLabel>
                <ControlPageLabel>Seconds On Previous Year</ControlPageLabel>
            </State>
            <State id='stringContinuous00'>
                <ValueType>String</ValueType>
                <TriggerLabel>String On Currently</TriggerLabel>
                <ControlPageLabel>String On Currently</ControlPageLabel>
            </State>
            <State id='stringContinuous01'>
                <ValueType>String</ValueType>
                <TriggerLabel>String On Previously</TriggerLabel>
                <ControlPageLabel>String On Previously</ControlPageLabel>
            </State>
            <State id='stringHour00'>
                <ValueType>String</ValueType>
                <TriggerLabel>String On This Hour</TriggerLabel>
                <ControlPageLabel>String On This Hour</ControlPageLabel>
            </State>
            <State id='stringHour00'>
                <ValueType>String</ValueType>
                <TriggerLabel>String On Current Hour</TriggerLabel>
                <ControlPageLabel>String On Current Hour</ControlPageLabel>
            </State>
            <State id='stringHour01'>
                <ValueType>String</ValueType>
                <TriggerLabel>String On 1 Hour Ago</TriggerLabel>
                <ControlPageLabel>String On 1 Hour Ago</ControlPageLabel>
            </State>
            <State id='stringHour02'>
                <ValueType>String</ValueType>
                <TriggerLabel>String On 2 Hours Ago</TriggerLabel>
                <ControlPageLabel>String On 2 Hours Ago</ControlPageLabel>
            </State>
            <State id='stringHour03'>
                <ValueType>String</ValueType>
                <TriggerLabel>String On 3 Hours Ago</TriggerLabel>
                <ControlPageLabel>String On 3 Hours Ago</ControlPageLabel>
            </State>
            <State id='stringHour04'>
                <ValueType>String</ValueType>
                <TriggerLabel>String On 4 Hours Ago</TriggerLabel>
                <ControlPageLabel>String On 4 Hours Ago</ControlPageLabel>
            </State>
            <State id='stringHour05'>
                <ValueType>String</ValueType>
                <TriggerLabel>String On 5 Hours Ago</TriggerLabel>
                <ControlPageLabel>String On 5 Hours Ago</ControlPageLabel>
            </State>
            <State id='stringHour06'>
                <ValueType>String</ValueType>
                <TriggerLabel>String On 6 Hours Ago</TriggerLabel>
                <ControlPageLabel>String On 6 Hours Ago</ControlPageLabel>
            </State>
            <State id='stringHour07'>
                <ValueType>String</ValueType>
                <TriggerLabel>String On 7 Hours Ago</TriggerLabel>
                <ControlPageLabel>String On 7 Hours Ago</ControlPageLabel>
            </State>
            <State id='stringHour08'>
                <ValueType>String</ValueType>
                <TriggerLabel>String On 8 Hours Ago</TriggerLabel>
                <ControlPageLabel>String On 8 Hours Ago</ControlPageLabel>
            </State>
            <State id='stringHour09'>
                <ValueType>String</ValueType>
                <TriggerLabel>String On 9 Hours Ago</TriggerLabel>
                <ControlPageLabel>String On 9 Hours Ago</ControlPageLabel>
            </State>
            <State id='stringHour10'>
                <ValueType>String</ValueType>
                <TriggerLabel>String On 10 Hours Ago</TriggerLabel>
                <ControlPageLabel>String On 10 Hours Ago</ControlPageLabel>
            </State>
            <State id='stringHour11'>
                <ValueType>String</ValueType>
                <TriggerLabel>String On 11 Hours Ago</TriggerLabel>
                <ControlPageLabel>String On 11 Hours Ago</ControlPageLabel>
            </State>
            <State id='stringHour12'>
                <ValueType>String</ValueType>
                <TriggerLabel>String On 12 Hours Ago</TriggerLabel>
                <ControlPageLabel>String On 12 Hours Ago</ControlPageLabel>
            </State>
            <State id='stringHour13'>
                <ValueType>String</ValueType>
                <TriggerLabel>String On 13 Hours Ago</TriggerLabel>
                <ControlPageLabel>String On 13 Hours Ago</ControlPageLabel>
            </State>
            <State id='stringHour14'>
                <ValueType>String</ValueType>
                <TriggerLabel>String On 14 Hours Ago</TriggerLabel>
                <ControlPageLabel>String On 14 Hours Ago</ControlPageLabel>
            </State>
            <State id='stringHour15'>
                <ValueType>String</ValueType>
                <TriggerLabel>String On 15 Hours Ago</TriggerLabel>
                <ControlPageLabel>String On 15 Hours Ago</ControlPageLabel>
            </State>
            <State id='stringHour16'>
                <ValueType>String</ValueType>
                <TriggerLabel>String On 16 Hours Ago</TriggerLabel>
                <ControlPageLabel>String On 16 Hours Ago</ControlPageLabel>
            </State>
            <State id='stringHour17'>
                <ValueType>String</ValueType>
                <TriggerLabel>String On 17 Hours Ago</TriggerLabel>
                <ControlPageLabel>String On 17 Hours Ago</ControlPageLabel>
            </State>
            <State id='stringHour18'>
                <ValueType>String</ValueType>
                <TriggerLabel>String On 18 Hours Ago</TriggerLabel>
                <ControlPageLabel>String On 18 Hours Ago</ControlPageLabel>
            </State>
            <State id='stringHour19'>
                <ValueType>String</ValueType>
                <TriggerLabel>String On 19 Hours Ago</TriggerLabel>
                <ControlPageLabel>String On 19 Hours Ago</ControlPageLabel>
            </State>
            <State id='stringHour20'>
                <ValueType>String</ValueType>
                <TriggerLabel>String On 20 Hours Ago</TriggerLabel>
                <ControlPageLabel>String On 20 Hours Ago</ControlPageLabel>
            </State>
            <State id='stringHour21'>
                <ValueType>String</ValueType>
                <TriggerLabel>String On 21 Hours Ago</TriggerLabel>
                <ControlPageLabel>String On 21 Hours Ago</ControlPageLabel>
            </State>
            <State id='stringHour22'>
                <ValueType>String</ValueType>
                <TriggerLabel>String On 22 Hours Ago</TriggerLabel>
                <ControlPageLabel>String On 22 Hours Ago</ControlPageLabel>
            </State>
            <State id='stringHour23'>
                <ValueType>String</ValueType>
                <TriggerLabel>String On 23 Hours Ago</TriggerLabel>
                <ControlPageLabel>String On 23 Hours Ago</ControlPageLabel>
            </State>
            <State id='stringHour24'>
                <ValueType>String</ValueType>
                <TriggerLabel>String On 24 Hours Ago</TriggerLabel>
                <ControlPageLabel>String On 24 Hours Ago</ControlPageLabel>
            </State>
            <State id='stringDay00'>
                <ValueType>String</ValueType>
                <TriggerLabel>String On Current Day</TriggerLabel>
                <ControlPageLabel>String On Current Day</ControlPageLabel>
            </State>
            <State id='stringDay01'>
                <ValueType>String</ValueType>
                <TriggerLabel>String On 1 Day Ago</TriggerLabel>
                <ControlPageLabel>String On 1 Day Ago</ControlPageLabel>
            </State>
            <State id='stringDay02'>
                <ValueType>String</ValueType>
                <TriggerLabel>String On 2 Days Ago</TriggerLabel>
                <ControlPageLabel>String On 2 Days Ago</ControlPageLabel>
            </State>
            <State id='stringDay03'>
                <ValueType>String</ValueType>
                <TriggerLabel>String On 3 Days Ago</TriggerLabel>
                <ControlPageLabel>String On 3 Days Ago</ControlPageLabel>
            </State>
            <State id='stringDay04'>
                <ValueType>String</ValueType>
                <TriggerLabel>String On 4 Days Ago</TriggerLabel>
                <ControlPageLabel>String On 4 Days Ago</ControlPageLabel>
            </State>
            <State id='stringDay05'>
                <ValueType>String</ValueType>
                <TriggerLabel>String On 5 Days Ago</TriggerLabel>
                <ControlPageLabel>String On 5 Days Ago</ControlPageLabel>
            </State>
            <State id='stringDay06'>
                <ValueType>String</ValueType>
                <TriggerLabel>String On 6 Days Ago</TriggerLabel>
                <ControlPageLabel>String On 6 Days Ago</ControlPageLabel>
            </State>
            <State id='stringDay07'>
                <ValueType>String</ValueType>
                <TriggerLabel>String On 7 Days Ago</TriggerLabel>
                <ControlPageLabel>String On 7 Days Ago</ControlPageLabel>
            </State>
            <State id='stringWeek00'>
                <ValueType>String</ValueType>
                <TriggerLabel>String On Current Week</TriggerLabel>
                <ControlPageLabel>String On Current Week</ControlPageLabel>
            </State>
            <State id='stringWeek01'>
                <ValueType>String</ValueType>
                <TriggerLabel>String On 1 Week Ago</TriggerLabel>
                <ControlPageLabel>String On 1 Week Ago</ControlPageLabel>
            </State>
            <State id='stringWeek02'>
                <ValueType>String</ValueType>
                <TriggerLabel>String On 2 Weeks Ago</TriggerLabel>
                <ControlPageLabel>String On 2 Weeks Ago</ControlPageLabel>
            </State>
            <State id='stringWeek03'>
                <ValueType>String</ValueType>
                <TriggerLabel>String On 3 Weeks Ago</TriggerLabel>
                <ControlPageLabel>String On 3 Weeks Ago</ControlPageLabel>
            </State>
            <State id='stringWeek04'>
                <ValueType>String</ValueType>
                <TriggerLabel>String On 4 Weeks Ago</TriggerLabel>
                <ControlPageLabel>String On 4 Weeks Ago</ControlPageLabel>
            </State>
            <State id='stringMonth00'>
                <ValueType>String</ValueType>
                <TriggerLabel>String On Current Month</TriggerLabel>
                <ControlPageLabel>String On Current Month</ControlPageLabel>
            </State>
            <State id='stringMonth01'>
                <ValueType>String</ValueType>
                <TriggerLabel>String On 1 Month Ago</TriggerLabel>
                <ControlPageLabel>String On 1 Month Ago</ControlPageLabel>
            </State>
            <State id='stringMonth02'>
                <ValueType>String</ValueType>
                <TriggerLabel>String On 2 Months Ago</TriggerLabel>
                <ControlPageLabel>String On 2 Months Ago</ControlPageLabel>
            </State>
            <State id='stringMonth03'>
                <ValueType>String</ValueType>
                <TriggerLabel>String On 3 Months Ago</TriggerLabel>
                <ControlPageLabel>String On 3 Months Ago</ControlPageLabel>
            </State>
            <State id='stringMonth04'>
                <ValueType>String</ValueType>
                <TriggerLabel>String On 4 Months Ago</TriggerLabel>
                <ControlPageLabel>String On 4 Months Ago</ControlPageLabel>
            </State>
            <State id='stringMonth05'>
                <ValueType>String</ValueType>
                <TriggerLabel>String On 5 Months Ago</TriggerLabel>
                <ControlPageLabel>String On 5 Months Ago</ControlPageLabel>
            </State>
            <State id='stringMonth06'>
                <ValueType>String</ValueType>
                <TriggerLabel>String On 6 Months Ago</TriggerLabel>
                <ControlPageLabel>String On 6 Months Ago</ControlPageLabel>
            </State>
            <State id='stringMonth07'>
                <ValueType>String</ValueType>
                <TriggerLabel>String On 7 Months Ago</TriggerLabel>
                <ControlPageLabel>String On 7 Months Ago</ControlPageLabel>
            </State>
            <State id='stringMonth08'>
                <ValueType>String</ValueType>
                <TriggerLabel>String On 8 Months Ago</TriggerLabel>
                <ControlPageLabel>String On 8 Months Ago</ControlPageLabel>
            </State>
            <State id='stringMonth09'>
                <ValueType>String</ValueType>
                <TriggerLabel>String On 9 Months Ago</TriggerLabel>
                <ControlPageLabel>String On 9 Months Ago</ControlPageLabel>
            </State>
            <State id='stringMonth10'>
                <ValueType>String</ValueType>
                <TriggerLabel>String On 10 Months Ago</TriggerLabel>
                <ControlPageLabel>String On 10 Months Ago</ControlPageLabel>
            </State>
            <State id='stringMonth11'>
                <ValueType>String</ValueType>
                <TriggerLabel>String On 11 Months Ago</TriggerLabel>
                <ControlPageLabel>String On 11 Months Ago</ControlPageLabel>
            </State>
            <State id='stringMonth12'>
                <ValueType>String</ValueType>
                <TriggerLabel>String On 12 Months Ago</TriggerLabel>
                <ControlPageLabel>String On 12 Months Ago</ControlPageLabel>
            </State>
            <State id='stringYear00'>
                <ValueType>String</ValueType>
                <TriggerLabel>String On Current Year</TriggerLabel>
                <ControlPageLabel>Seconds Current Year</ControlPageLabel>
            </State>
            <State id='stringYear01'>
                <ValueType>String</ValueType>
                <TriggerLabel>String On Previous Year</TriggerLabel>
                <ControlPageLabel>String On Previous Year</ControlPageLabel>
            </State>
            <State id='zzzSaveSpanDict'>
                <ValueType>String</ValueType>
                <TriggerLabel>-- Do Not Use --</TriggerLabel>
                <ControlPageLabel>-- Do Not Use --</ControlPageLabel>
            </State>
            <State id='zzzSecsDoneDict'>
                <ValueType>String</ValueType>
                <TriggerLabel>-- Do Not Use --</TriggerLabel>
                <ControlPageLabel>-- Do Not Use --</ControlPageLabel>
            </State>
            <!-- FIXME depricated state name -->
            <!-- remove after respectful transition period -->
            <State id='secondsThisContinuous'>
                <ValueType>Number</ValueType>
                <TriggerLabel>DEPRICATED: Seconds On Currently</TriggerLabel>
                <ControlPageLabel>DEPRICATED: Seconds On Currently</ControlPageLabel>
            </State>
            <State id='secondsThisHour'>
                <ValueType>Number</ValueType>
                <TriggerLabel>DEPRICATED: Seconds On This Hour</TriggerLabel>
                <ControlPageLabel>DEPRICATED: Seconds On This Hour</ControlPageLabel>
            </State>
            <State id='secondsThisDay'>
                <ValueType>Number</ValueType>
                <TriggerLabel>DEPRICATED: Seconds On This Day</TriggerLabel>
                <ControlPageLabel>DEPRICATED: Seconds On This Day</ControlPageLabel>
            </State>
            <State id='secondsThisWeek'>
                <ValueType>Number</ValueType>
                <TriggerLabel>DEPRICATED: Seconds On This Week</TriggerLabel>
                <ControlPageLabel>DEPRICATED: Seconds On This Week</ControlPageLabel>
            </State>
            <State id='secondsThisMonth'>
                <ValueType>Number</ValueType>
                <TriggerLabel>DEPRICATED: Seconds On This Month</TriggerLabel>
                <ControlPageLabel>DEPRICATED: Seconds On This Month</ControlPageLabel>
            </State>
            <State id='secondsThisYear'>
                <ValueType>Number</ValueType>
                <TriggerLabel>DEPRICATED: Seconds On This Year</TriggerLabel>
                <ControlPageLabel>DEPRICATED: Seconds On This Year</ControlPageLabel>
            </State>
            <State id='secondsLastContinuous'>
                <ValueType>Number</ValueType>
                <TriggerLabel>DEPRICATED: Seconds On Previously</TriggerLabel>
                <ControlPageLabel>DEPRICATED: Seconds On Previously</ControlPageLabel>
            </State>
            <State id='secondsLastHour'>
                <ValueType>Number</ValueType>
                <TriggerLabel>DEPRICATED: Seconds On Last Hour</TriggerLabel>
                <ControlPageLabel>DEPRICATED: Seconds On Last Hour</ControlPageLabel>
            </State>
            <State id='secondsLastDay'>
                <ValueType>Number</ValueType>
                <TriggerLabel>DEPRICATED: Seconds On Last Day</TriggerLabel>
                <ControlPageLabel>DEPRICATED: Seconds On Last Day</ControlPageLabel>
            </State>
            <State id='secondsLastWeek'>
                <ValueType>Number</ValueType>
                <TriggerLabel>DEPRICATED: Seconds On Last Week</TriggerLabel>
                <ControlPageLabel>DEPRICATED: Seconds On Last Week</ControlPageLabel>
            </State>
            <State id='secondsLastMonth'>
                <ValueType>Number</ValueType>
                <TriggerLabel>DEPRICATED: Seconds On Last Month</TriggerLabel>
                <ControlPageLabel>DEPRICATED: Seconds On Last Month</ControlPageLabel>
            </State>
            <State id='secondsLastYear'>
                <ValueType>Number</ValueType>
                <TriggerLabel>DEPRICATED: Seconds On Last Year</TriggerLabel>
                <ControlPageLabel>DEPRICATED: Seconds On Last Year</ControlPageLabel>
            </State>
            <State id='stringThisContinuous'>
                <ValueType>String</ValueType>
                <TriggerLabel>DEPRICATED: String On Currently</TriggerLabel>
                <ControlPageLabel>DEPRICATED: String On Currently</ControlPageLabel>
            </State>
            <State id='stringThisHour'>
                <ValueType>String</ValueType>
                <TriggerLabel>DEPRICATED: String On This Hour</TriggerLabel>
                <ControlPageLabel>DEPRICATED: String On This Hour</ControlPageLabel>
            </State>
            <State id='stringThisDay'>
                <ValueType>String</ValueType>
                <TriggerLabel>DEPRICATED: String On This Day</TriggerLabel>
                <ControlPageLabel>DEPRICATED: String On This Day</ControlPageLabel>
            </State>
            <State id='stringThisWeek'>
                <ValueType>String</ValueType>
                <TriggerLabel>DEPRICATED: String On This Week</TriggerLabel>
                <ControlPageLabel>DEPRICATED: String On This Week</ControlPageLabel>
            </State>
            <State id='stringThisMonth'>
                <ValueType>String</ValueType>
                <TriggerLabel>DEPRICATED: String On This Month</TriggerLabel>
                <ControlPageLabel>DEPRICATED: String On This Month</ControlPageLabel>
            </State>
            <State id='stringThisYear'>
                <ValueType>String</ValueType>
                <TriggerLabel>DEPRICATED: String On This Year</TriggerLabel>
                <ControlPageLabel>DEPRICATED: String On This Year</ControlPageLabel>
            </State>
            <State id='stringLastContinuous'>
                <ValueType>String</ValueType>
                <TriggerLabel>DEPRICATED: String On Previously</TriggerLabel>
                <ControlPageLabel>DEPRICATED: String On Previously</ControlPageLabel>
            </State>
            <State id='stringLastHour'>
                <ValueType>String</ValueType>
                <TriggerLabel>DEPRICATED: String On Last Hour</TriggerLabel>
                <ControlPageLabel>DEPRICATED: String On Last Hour</ControlPageLabel>
            </State>
            <State id='stringLastDay'>
                <ValueType>String</ValueType>
                <TriggerLabel>DEPRICATED: String On Last Day</TriggerLabel>
                <ControlPageLabel>DEPRICATED: String On Last Day</ControlPageLabel>
            </State>
            <State id='stringLastWeek'>
                <ValueType>String</ValueType>
                <TriggerLabel>DEPRICATED: String On Last Week</TriggerLabel>
                <ControlPageLabel>DEPRICATED: String On Last Week</ControlPageLabel>
            </State>
            <State id='stringLastMonth'>
                <ValueType>String</ValueType>
                <TriggerLabel>DEPRICATED: String On Last Month</TriggerLabel>
                <ControlPageLabel>DEPRICATED: String On Last Month</ControlPageLabel>
            </State>
            <State id='stringLastYear'>
                <ValueType>String</ValueType>
                <TriggerLabel>DEPRICATED: String On Last Year</TriggerLabel>
                <ControlPageLabel>DEPRICATED: String On Last Year</ControlPageLabel>
            </State>
            <!-- /FIXME -->
        </States>
        <UiDisplayStateId>displayState</UiDisplayStateId>
    </Device>
</Devices>
