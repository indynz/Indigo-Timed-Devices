<?xml version='1.0'?>
<Devices>
    <Device type='custom' id='activityTimer'>
        <Name>Activity Timer</Name>
        <ConfigUI>
            <Field id='description0' type='label'>
                <Label>Activity Timer device tracks multiple momentary inputs.</Label>
            </Field>
            <Field id='description1' type='label' fontSize='small' fontColor='darkgray'>
                <Label>Device turns ON if THRESHOLD inputs are detected before RESET TIMER expires, and remains ON until OFF TIMER expires.  OFF TIMER is extended when any additional input is detected or when THRESHOLD is met, depending on the setting of ALWAYS EXTEND.</Label>
            </Field>
            <Field id='timerSeparator' type='separator' />
            <Field id='timerSection' type='label' fontColor='blue'>
                <Label>Timer Settings:</Label>
            </Field>
            <Field id='countThreshold' type='textfield' defaultValue='1'>
                <Label>Threshold:</Label>
            </Field>
            <Field id='thresholdHelp' type='label' fontSize='small' fontColor='darkgray' alignWithControl='true'>
                <Label>Number of TRUE inputs before this device turns on</Label>
            </Field>
            <Field id='resetCycles' type='textfield' defaultValue='1'>
                <Label>Reset Timer Cycles:</Label>
            </Field>
            <Field id='resetUnits' type='menu' defaultValue='minutes'>
                <Label>Reset Timer Units:</Label>
                <List>
                    <Option value='seconds'>Seconds</Option>
                    <Option value='minutes'>Minutes</Option>
                    <Option value='hours'>Hours</Option>
                    <Option value='days'>Days</Option>
                </List>
            </Field>
            <Field id='resetHelp' type='label' fontSize='small' fontColor='darkgray' alignWithControl='true'>
                <Label>Max time to reach threshold before count is reset</Label>
            </Field>
            <Field id='offCycles' type='textfield' defaultValue='10'>
                <Label>Off Timer Cycles:</Label>
            </Field>
            <Field id='offUnits' type='menu' defaultValue='minutes'>
                <Label>Off Timer Units:</Label>
                <List>
                    <Option value='seconds'>Seconds</Option>
                    <Option value='minutes'>Minutes</Option>
                    <Option value='hours'>Hours</Option>
                    <Option value='days'>Days</Option>
                </List>
            </Field>
            <Field id='offHelp' type='label' fontSize='small' fontColor='darkgray' alignWithControl='true'>
                <Label>How long before this device turns off</Label>
            </Field>
            <Field id='extend' type='checkbox' defaultValue='true'>
                <Label>Always Extend?:</Label>
            </Field>
            <Field id='extendHelp1' type='label' fontSize='small' fontColor='darkgray' alignWithControl='true'>
                <Label>Checked = extend OFF TIMER when any TRUE input is detected</Label>
            </Field>
            <Field id='extendHelp2' type='label' fontSize='small' fontColor='darkgray' alignWithControl='true'>
                <Label>Unchecked = only extend OFF TIMER when threshold is met</Label>
            </Field>
            <Field id='trackSeparator' type='separator' />
            <Field id='trackSection' type='label' fontColor='blue'>
                <Label>Tracked Entities:</Label>
            </Field>
            <Field id='device1' type='menu'>
                <Label>Device 1:</Label>
                <List class='self' method='getDeviceList'/>
            </Field>
            <Field id='state1' type='menu'>
                <Label>State 1:</Label>
                <List class='self' filter='device1' method='getStateList' dynamicReload='true'/>
            </Field>
            <Field id='device2' type='menu'>
                <Label>Device 2:</Label>
                <List class='self' method='getDeviceList'/>
            </Field>
            <Field id='state2' type='menu'>
                <Label>State 2:</Label>
                <List class='self' filter='device2' method='getStateList' dynamicReload='true'/>
            </Field>
            <Field id='device3' type='menu'>
                <Label>Device 3:</Label>
                <List class='self' method='getDeviceList'/>
            </Field>
            <Field id='state3' type='menu'>
                <Label>State 3:</Label>
                <List class='self' filter='device3' method='getStateList' dynamicReload='true'/>
            </Field>
            <Field id='device4' type='menu'>
                <Label>Device 4:</Label>
                <List class='self' method='getDeviceList'/>
            </Field>
            <Field id='state4' type='menu'>
                <Label>State 4:</Label>
                <List class='self' filter='device4' method='getStateList' dynamicReload='true'/>
            </Field>
            <Field id='device5' type='menu'>
                <Label>Device 5:</Label>
                <List class='self' method='getDeviceList'/>
            </Field>
            <Field id='state5' type='menu'>
                <Label>State 5:</Label>
                <List class='self' filter='device5' method='getStateList' dynamicReload='true'/>
            </Field>
            <Field id='statesButton1' type='button'>
                <Title>Load Device States</Title>
                <CallbackMethod>loadStates</CallbackMethod>
            </Field>
            <Field id='show10dev' type='checkbox' defaultValue='false'>
                <Label>Show more</Label>
            </Field>
            <Field id='device6' type='menu' visibleBindingId='show10dev'  visibleBindingValue='true'>
                <Label>Device 6:</Label>
                <List class='self' method='getDeviceList'/>
            </Field>
            <Field id='state6' type='menu' visibleBindingId='show10dev'  visibleBindingValue='true'>
                <Label>State 6:</Label>
                <List class='self' filter='device6' method='getStateList' dynamicReload='true'/>
            </Field>
            <Field id='device7' type='menu' visibleBindingId='show10dev'  visibleBindingValue='true'>
                <Label>Device 7:</Label>
                <List class='self' method='getDeviceList'/>
            </Field>
            <Field id='state7' type='menu' visibleBindingId='show10dev'  visibleBindingValue='true'>
                <Label>State 7:</Label>
                <List class='self' filter='device7' method='getStateList' dynamicReload='true'/>
            </Field>
            <Field id='device8' type='menu' visibleBindingId='show10dev'  visibleBindingValue='true'>
                <Label>Device 8:</Label>
                <List class='self' method='getDeviceList'/>
            </Field>
            <Field id='state8' type='menu' visibleBindingId='show10dev'  visibleBindingValue='true'>
                <Label>State 8:</Label>
                <List class='self' filter='device8' method='getStateList' dynamicReload='true'/>
            </Field>
            <Field id='device9' type='menu' visibleBindingId='show10dev'  visibleBindingValue='true'>
                <Label>Device 9:</Label>
                <List class='self' method='getDeviceList'/>
            </Field>
            <Field id='state9' type='menu' visibleBindingId='show10dev'  visibleBindingValue='true'>
                <Label>State 9:</Label>
                <List class='self' filter='device9' method='getStateList' dynamicReload='true'/>
            </Field>
            <Field id='device10' type='menu' visibleBindingId='show10dev'  visibleBindingValue='true'>
                <Label>Device 10:</Label>
                <List class='self' method='getDeviceList'/>
            </Field>
            <Field id='state10' type='menu' visibleBindingId='show10dev'  visibleBindingValue='true'>
                <Label>State 10:</Label>
                <List class='self' filter='device10' method='getStateList' dynamicReload='true'/>
            </Field>
            <Field id='statesButton2' type='button' visibleBindingId='show10dev'  visibleBindingValue='true'>
                <Title>Load Device States</Title>
                <CallbackMethod>loadStates</CallbackMethod>
            </Field>
            <Field id='show20dev' type='checkbox' defaultValue='false' visibleBindingId='show10dev'  visibleBindingValue='true'>
                <Label>Show even more</Label>
            </Field>
            <Field id='device11' type='menu' visibleBindingId='show20dev'  visibleBindingValue='true'>
                <Label>Device 11:</Label>
                <List class='self' method='getDeviceList'/>
            </Field>
            <Field id='state11' type='menu' visibleBindingId='show20dev'  visibleBindingValue='true'>
                <Label>State 11:</Label>
                <List class='self' filter='device11' method='getStateList' dynamicReload='true'/>
            </Field>
            <Field id='device12' type='menu' visibleBindingId='show20dev'  visibleBindingValue='true'>
                <Label>Device 12:</Label>
                <List class='self' method='getDeviceList'/>
            </Field>
            <Field id='state12' type='menu' visibleBindingId='show20dev'  visibleBindingValue='true'>
                <Label>State 12:</Label>
                <List class='self' filter='device12' method='getStateList' dynamicReload='true'/>
            </Field>
            <Field id='device13' type='menu' visibleBindingId='show20dev'  visibleBindingValue='true'>
                <Label>Device 13:</Label>
                <List class='self' method='getDeviceList'/>
            </Field>
            <Field id='state13' type='menu' visibleBindingId='show20dev'  visibleBindingValue='true'>
                <Label>State 13:</Label>
                <List class='self' filter='device13' method='getStateList' dynamicReload='true'/>
            </Field>
            <Field id='device14' type='menu' visibleBindingId='show20dev'  visibleBindingValue='true'>
                <Label>Device 14:</Label>
                <List class='self' method='getDeviceList'/>
            </Field>
            <Field id='state14' type='menu' visibleBindingId='show20dev'  visibleBindingValue='true'>
                <Label>State 14:</Label>
                <List class='self' filter='device14' method='getStateList' dynamicReload='true'/>
            </Field>
            <Field id='device15' type='menu' visibleBindingId='show20dev'  visibleBindingValue='true'>
                <Label>Device 15:</Label>
                <List class='self' method='getDeviceList'/>
            </Field>
            <Field id='state15' type='menu' visibleBindingId='show20dev'  visibleBindingValue='true'>
                <Label>State 15:</Label>
                <List class='self' filter='device15' method='getStateList' dynamicReload='true'/>
            </Field>
            <Field id='device16' type='menu' visibleBindingId='show20dev'  visibleBindingValue='true'>
                <Label>Device 16:</Label>
                <List class='self' method='getDeviceList'/>
            </Field>
            <Field id='state16' type='menu' visibleBindingId='show20dev'  visibleBindingValue='true'>
                <Label>State 16:</Label>
                <List class='self' filter='device16' method='getStateList' dynamicReload='true'/>
            </Field>
            <Field id='device17' type='menu' visibleBindingId='show20dev'  visibleBindingValue='true'>
                <Label>Device 17:</Label>
                <List class='self' method='getDeviceList'/>
            </Field>
            <Field id='state17' type='menu' visibleBindingId='show20dev'  visibleBindingValue='true'>
                <Label>State 17:</Label>
                <List class='self' filter='device17' method='getStateList' dynamicReload='true'/>
            </Field>
            <Field id='device18' type='menu' visibleBindingId='show20dev'  visibleBindingValue='true'>
                <Label>Device 18:</Label>
                <List class='self' method='getDeviceList'/>
            </Field>
            <Field id='state18' type='menu' visibleBindingId='show20dev'  visibleBindingValue='true'>
                <Label>State 18:</Label>
                <List class='self' filter='device18' method='getStateList' dynamicReload='true'/>
            </Field>
            <Field id='device19' type='menu' visibleBindingId='show20dev'  visibleBindingValue='true'>
                <Label>Device 19:</Label>
                <List class='self' method='getDeviceList'/>
            </Field>
            <Field id='state19' type='menu' visibleBindingId='show20dev'  visibleBindingValue='true'>
                <Label>State 19:</Label>
                <List class='self' filter='device19' method='getStateList' dynamicReload='true'/>
            </Field>
            <Field id='device20' type='menu' visibleBindingId='show20dev'  visibleBindingValue='true'>
                <Label>Device 20:</Label>
                <List class='self' method='getDeviceList'/>
            </Field>
            <Field id='state20' type='menu' visibleBindingId='show20dev'  visibleBindingValue='true'>
                <Label>State 20:</Label>
                <List class='self' filter='device20' method='getStateList' dynamicReload='true'/>
            </Field>
            <Field id='statesButton3' type='button' visibleBindingId='show20dev'  visibleBindingValue='true'>
                <Title>Load Device States</Title>
                <CallbackMethod>loadStates</CallbackMethod>
            </Field>
            <Field id='variableSpacer' type='label'>
                <Label> </Label>
            </Field>
            <Field id='variable1' type='menu'>
                <Label>Variable 1:</Label>
                <List class='self' method='getVariableList'/>
            </Field>
            <Field id='variable2' type='menu'>
                <Label>Variable 2:</Label>
                <List class='self' method='getVariableList'/>
            </Field>
            <Field id='variable3' type='menu'>
                <Label>Variable 3:</Label>
                <List class='self' method='getVariableList'/>
            </Field>
            <Field id='variable4' type='menu'>
                <Label>Variable 4:</Label>
                <List class='self' method='getVariableList'/>
            </Field>
            <Field id='variable5' type='menu'>
                <Label>Variable 5:</Label>
                <List class='self' method='getVariableList'/>
            </Field>
            <Field id='show10var' type='checkbox' defaultValue='false'>
                <Label>Show more</Label>
            </Field>
            <Field id='variable6' type='menu' visibleBindingId='show10var'  visibleBindingValue='true'>
                <Label>Variable 6:</Label>
                <List class='self' method='getVariableList'/>
            </Field>
            <Field id='variable7' type='menu' visibleBindingId='show10var'  visibleBindingValue='true'>
                <Label>Variable 7:</Label>
                <List class='self' method='getVariableList'/>
            </Field>
            <Field id='variable8' type='menu' visibleBindingId='show10var'  visibleBindingValue='true'>
                <Label>Variable 8:</Label>
                <List class='self' method='getVariableList'/>
            </Field>
            <Field id='variable9' type='menu' visibleBindingId='show10var'  visibleBindingValue='true'>
                <Label>Variable 9:</Label>
                <List class='self' method='getVariableList'/>
            </Field>
            <Field id='variable10' type='menu' visibleBindingId='show10var'  visibleBindingValue='true'>
                <Label>Variable 10:</Label>
                <List class='self' method='getVariableList'/>
            </Field>
            <Field id='logicSeparator' type='separator' />
            <Field id='logicSection' type='label' fontColor='blue'>
                <Label>Input Logic:</Label>
            </Field>
            <Field id='logicHelp' type='label' alignWithControl='true' fontSize='small' fontColor='darkgray'>
                <Label>Which state or variable values are counted as TRUE inputs?</Label>
            </Field>
            <Field id='logicType' type='menu' defaultValue='simple'>
                <Label>Logic:</Label>
                <List>
                    <Option value='any'>Any Change</Option>
                    <Option value='simple'>Simple</Option>
                    <Option value='complex'>Complex</Option>
                </List>
            </Field>
            <Field id='boolLabel0' type='label' visibleBindingId='logicType'  visibleBindingValue='any' alignWithControl='true' fontSize='small' fontColor='darkgray'>
                <Label>• Any change will be considered a TRUE input</Label>
            </Field>
            <Field id='boolLabel1' type='label' visibleBindingId='logicType'  visibleBindingValue='simple' alignWithControl='true' fontSize='small' fontColor='darkgray'>
                <Label>• Strings match 'true', 'on', 'open', 'up', 'yes', 'active', 'locked', '1'  </Label>
            </Field>
            <Field id='boolLabel2' type='label' visibleBindingId='logicType'  visibleBindingValue='simple' alignWithControl='true' fontSize='small' fontColor='darkgray'>
                <Label>• Numbers match if non-zero</Label>
            </Field>
            <Field id='boolLabel3' type='label' visibleBindingId='logicType'  visibleBindingValue='simple' alignWithControl='true' fontSize='small' fontColor='darkgray'>
                <Label>• Booleans match if True</Label>
            </Field>
            <Field id='reverseBoolean' type='checkbox' defaultValue='false' visibleBindingId='logicType'  visibleBindingValue='simple' alwaysUseInDialogHeightCalc='true'>
                <Label>Reverse?:</Label>
                <Description>Check to reverse above logic.</Description>
            </Field>
            <Field id='boolLabel4' type='label' visibleBindingId='reverseBoolean'  visibleBindingValue='false' alignWithControl='true' fontSize='small' fontColor='darkgray'>
                <Label>• Matched value is TRUE input</Label>
            </Field>
            <Field id='boolLabel5' type='label' visibleBindingId='reverseBoolean'  visibleBindingValue='true' alignWithControl='true' fontSize='small' fontColor='darkgray'>
                <Label>• Matched value is FALSE input</Label>
            </Field>
            <Field id='operator' type='menu' defaultValue='eq' visibleBindingId='logicType'  visibleBindingValue='complex'>
                <Label>Operator:</Label>
                <List>
                    <Option value='eq'>Equal</Option>
                    <Option value='ne'>Not Equal</Option>
                    <Option value='gt'>Greater Than</Option>
                    <Option value='lt'>Less Than</Option>
                    <Option value='ge'>Greater or Equal</Option>
                    <Option value='le'>Less or Equal</Option>
                </List>
            </Field>
            <Field id='value' type='textfield' visibleBindingId='logicType'  visibleBindingValue='complex'>
                <Label>Comparison Value:</Label>
            </Field>
            <Field id='valueType' type='menu' defaultValue='str' visibleBindingId='logicType'  visibleBindingValue='complex'>
                <Label>Data Type:</Label>
                <List>
                    <Option value='str'>String</Option>
                    <Option value='num'>Number</Option>
                </List>
            </Field>
            <Field id='boolLabel6' type='label' visibleBindingId='logicType'  visibleBindingValue='complex' alignWithControl='true' fontSize='small' fontColor='darkgray'>
                <Label>• Type errors always compare as False</Label>
            </Field>
            <Field id='boolLabel7' type='label' visibleBindingId='logicType'  visibleBindingValue='complex' alignWithControl='true' fontSize='small' fontColor='darkgray'>
                <Label>• Strings are compared in lowercase</Label>
            </Field>
            <Field id='boolLabel8' type='label' visibleBindingId='logicType'  visibleBindingValue='complex' alignWithControl='true' fontSize='small' fontColor='darkgray'>
                <Label>• Numbers are compared as floats</Label>
            </Field>
            <Field id='boolLabel9' type='label' visibleBindingId='logicType'  visibleBindingValue='complex' alignWithControl='true' fontSize='small' fontColor='darkgray'>
                <Label>• For boolean comparison, use simple logic</Label>
            </Field>
            <Field id='miscSeparator' type='separator' />
            <Field id='miscSection' type='label' fontColor='blue'>
                <Label>Miscellaneous:</Label>
            </Field>
            <Field id='logOnOff' type='checkbox' defaultValue='true'>
                <Label>Log On/Off?:</Label>
                <Description>Uncheck to suppress logging on/off events</Description>
            </Field>
        </ConfigUI>
        <States>
            <State id='onOffState'>
                <ValueType>Boolean</ValueType>
                <TriggerLabel>On/Off State is On</TriggerLabel>
                <TriggerLabelPrefix>On/Off State is</TriggerLabelPrefix>
                <ControlPageLabel>On/Off State</ControlPageLabel>
                <ControlPageLabelPrefix>On/Off State is</ControlPageLabelPrefix>
            </State>
            <State id='state'>
                <ValueType>
                    <List>
                        <Option value='idle'>Idle</Option>
                        <Option value='accrue'>Accrual</Option>
                        <Option value='active'>Active</Option>
                        <Option value='persist'>Persistent</Option>
                    </List>
                </ValueType>
                <TriggerLabel>Any State Change</TriggerLabel>
                <TriggerLabelPrefix>State is</TriggerLabelPrefix>
                <ControlPageLabel>State</ControlPageLabel>
                <ControlPageLabelPrefix>State is</ControlPageLabelPrefix>
            </State>
            <State id='displayState'>
                <ValueType>String</ValueType>
                <TriggerLabel>Display State Change</TriggerLabel>
                <TriggerLabelPrefix>Display State is</TriggerLabelPrefix>
                <ControlPageLabel>Display State</ControlPageLabel>
                <ControlPageLabelPrefix>Display State is</ControlPageLabelPrefix>
            </State>
            <State id='count'>
                <ValueType>Number</ValueType>
                <TriggerLabel>Count</TriggerLabel>
                <ControlPageLabel>Count</ControlPageLabel>
            </State>
            <State id='counting'>
                <ValueType>Boolean</ValueType>
                <TriggerLabel>Counting</TriggerLabel>
                <ControlPageLabel>Counting</ControlPageLabel>
            </State>
            <State id='expired'>
                <ValueType>Boolean</ValueType>
                <TriggerLabel>Expired</TriggerLabel>
                <ControlPageLabel>Expired</ControlPageLabel>
            </State>
            <State id='reset'>
                <ValueType>Boolean</ValueType>
                <TriggerLabel>Reset</TriggerLabel>
                <ControlPageLabel>Reset</ControlPageLabel>
            </State>
            <State id='resetTime'>
                <ValueType>Number</ValueType>
                <TriggerLabel>Reset Time</TriggerLabel>
                <ControlPageLabel>Reset Time</ControlPageLabel>
            </State>
            <State id='resetString'>
                <ValueType>String</ValueType>
                <TriggerLabel>Reset String</TriggerLabel>
                <ControlPageLabel>Reset String</ControlPageLabel>
            </State>
            <State id='offTime'>
                <ValueType>Number</ValueType>
                <TriggerLabel>Off Time</TriggerLabel>
                <ControlPageLabel>Off Time</ControlPageLabel>
            </State>
            <State id='offString'>
                <ValueType>String</ValueType>
                <TriggerLabel>Off String</TriggerLabel>
                <ControlPageLabel>Off String</ControlPageLabel>
            </State>
        </States>
        <UiDisplayStateId>displayState</UiDisplayStateId>
    </Device>
    <Device type='custom' id='thresholdTimer'>
        <Name>Threshold Timer</Name>
        <ConfigUI>
            <Field id='description0' type='label'>
                <Label>Threshold Timer device tracks multiple continuous inputs.</Label>
            </Field>
            <Field id='description1' type='label' fontSize='small' fontColor='darkgray'>
                <Label>Device turns ON once THRESHOLD inputs are detected.</Label>
            </Field>
            <Field id='description2' type='label' fontSize='small' fontColor='darkgray'>
                <Label>OFF TIMER starts when input count drops below THRESHOLD.</Label>
            </Field>
            <Field id='description3' type='label' fontSize='small' fontColor='darkgray'>
                <Label>Device turns OFF when OFF TIMER expires.</Label>
            </Field>
            <Field id='timerSeparator' type='separator' />
            <Field id='timerSection' type='label' fontColor='blue'>
                <Label>Timer Settings:</Label>
            </Field>
            <Field id='countThreshold' type='textfield' defaultValue='1'>
                <Label>Threshold:</Label>
            </Field>
            <Field id='thresholdHelp' type='label' fontSize='small' fontColor='darkgray' alignWithControl='true'>
                <Label>Number of TRUE inputs before this device turns on</Label>
            </Field>
            <Field id='offCycles' type='textfield' defaultValue='10'>
                <Label>Off Timer Cycles:</Label>
            </Field>
            <Field id='offUnits' type='menu' defaultValue='minutes'>
                <Label>Off Timer Units:</Label>
                <List>
                    <Option value='seconds'>Seconds</Option>
                    <Option value='minutes'>Minutes</Option>
                    <Option value='hours'>Hours</Option>
                    <Option value='days'>Days</Option>
                </List>
            </Field>
            <Field id='offHelp' type='label' fontSize='small' fontColor='darkgray' alignWithControl='true'>
                <Label>How long before this device turns off.</Label>
            </Field>
            <Field id='trackSeparator' type='separator' />
            <Field id='trackSection' type='label' fontColor='blue'>
                <Label>Tracked Entities:</Label>
            </Field>
            <Field id='device1' type='menu'>
                <Label>Device 1:</Label>
                <List class='self' method='getDeviceList'/>
            </Field>
            <Field id='state1' type='menu'>
                <Label>State 1:</Label>
                <List class='self' filter='device1' method='getStateList' dynamicReload='true'/>
            </Field>
            <Field id='device2' type='menu'>
                <Label>Device 2:</Label>
                <List class='self' method='getDeviceList'/>
            </Field>
            <Field id='state2' type='menu'>
                <Label>State 2:</Label>
                <List class='self' filter='device2' method='getStateList' dynamicReload='true'/>
            </Field>
            <Field id='device3' type='menu'>
                <Label>Device 3:</Label>
                <List class='self' method='getDeviceList'/>
            </Field>
            <Field id='state3' type='menu'>
                <Label>State 3:</Label>
                <List class='self' filter='device3' method='getStateList' dynamicReload='true'/>
            </Field>
            <Field id='device4' type='menu'>
                <Label>Device 4:</Label>
                <List class='self' method='getDeviceList'/>
            </Field>
            <Field id='state4' type='menu'>
                <Label>State 4:</Label>
                <List class='self' filter='device4' method='getStateList' dynamicReload='true'/>
            </Field>
            <Field id='device5' type='menu'>
                <Label>Device 5:</Label>
                <List class='self' method='getDeviceList'/>
            </Field>
            <Field id='state5' type='menu'>
                <Label>State 5:</Label>
                <List class='self' filter='device5' method='getStateList' dynamicReload='true'/>
            </Field>
            <Field id='statesButton1' type='button'>
                <Title>Load Device States</Title>
                <CallbackMethod>loadStates</CallbackMethod>
            </Field>
            <Field id='show10dev' type='checkbox' defaultValue='false'>
                <Label>Show more</Label>
            </Field>
            <Field id='device6' type='menu' visibleBindingId='show10dev'  visibleBindingValue='true'>
                <Label>Device 6:</Label>
                <List class='self' method='getDeviceList'/>
            </Field>
            <Field id='state6' type='menu' visibleBindingId='show10dev'  visibleBindingValue='true'>
                <Label>State 6:</Label>
                <List class='self' filter='device6' method='getStateList' dynamicReload='true'/>
            </Field>
            <Field id='device7' type='menu' visibleBindingId='show10dev'  visibleBindingValue='true'>
                <Label>Device 7:</Label>
                <List class='self' method='getDeviceList'/>
            </Field>
            <Field id='state7' type='menu' visibleBindingId='show10dev'  visibleBindingValue='true'>
                <Label>State 7:</Label>
                <List class='self' filter='device7' method='getStateList' dynamicReload='true'/>
            </Field>
            <Field id='device8' type='menu' visibleBindingId='show10dev'  visibleBindingValue='true'>
                <Label>Device 8:</Label>
                <List class='self' method='getDeviceList'/>
            </Field>
            <Field id='state8' type='menu' visibleBindingId='show10dev'  visibleBindingValue='true'>
                <Label>State 8:</Label>
                <List class='self' filter='device8' method='getStateList' dynamicReload='true'/>
            </Field>
            <Field id='device9' type='menu' visibleBindingId='show10dev'  visibleBindingValue='true'>
                <Label>Device 9:</Label>
                <List class='self' method='getDeviceList'/>
            </Field>
            <Field id='state9' type='menu' visibleBindingId='show10dev'  visibleBindingValue='true'>
                <Label>State 9:</Label>
                <List class='self' filter='device9' method='getStateList' dynamicReload='true'/>
            </Field>
            <Field id='device10' type='menu' visibleBindingId='show10dev'  visibleBindingValue='true'>
                <Label>Device 10:</Label>
                <List class='self' method='getDeviceList'/>
            </Field>
            <Field id='state10' type='menu' visibleBindingId='show10dev'  visibleBindingValue='true'>
                <Label>State 10:</Label>
                <List class='self' filter='device10' method='getStateList' dynamicReload='true'/>
            </Field>
            <Field id='statesButton2' type='button' visibleBindingId='show10dev'  visibleBindingValue='true'>
                <Title>Load Device States</Title>
                <CallbackMethod>loadStates</CallbackMethod>
            </Field>
            <Field id='show20dev' type='checkbox' defaultValue='false' visibleBindingId='show10dev'  visibleBindingValue='true'>
                <Label>Show even more</Label>
            </Field>
            <Field id='device11' type='menu' visibleBindingId='show20dev'  visibleBindingValue='true'>
                <Label>Device 11:</Label>
                <List class='self' method='getDeviceList'/>
            </Field>
            <Field id='state11' type='menu' visibleBindingId='show20dev'  visibleBindingValue='true'>
                <Label>State 11:</Label>
                <List class='self' filter='device11' method='getStateList' dynamicReload='true'/>
            </Field>
            <Field id='device12' type='menu' visibleBindingId='show20dev'  visibleBindingValue='true'>
                <Label>Device 12:</Label>
                <List class='self' method='getDeviceList'/>
            </Field>
            <Field id='state12' type='menu' visibleBindingId='show20dev'  visibleBindingValue='true'>
                <Label>State 12:</Label>
                <List class='self' filter='device12' method='getStateList' dynamicReload='true'/>
            </Field>
            <Field id='device13' type='menu' visibleBindingId='show20dev'  visibleBindingValue='true'>
                <Label>Device 13:</Label>
                <List class='self' method='getDeviceList'/>
            </Field>
            <Field id='state13' type='menu' visibleBindingId='show20dev'  visibleBindingValue='true'>
                <Label>State 13:</Label>
                <List class='self' filter='device13' method='getStateList' dynamicReload='true'/>
            </Field>
            <Field id='device14' type='menu' visibleBindingId='show20dev'  visibleBindingValue='true'>
                <Label>Device 14:</Label>
                <List class='self' method='getDeviceList'/>
            </Field>
            <Field id='state14' type='menu' visibleBindingId='show20dev'  visibleBindingValue='true'>
                <Label>State 14:</Label>
                <List class='self' filter='device14' method='getStateList' dynamicReload='true'/>
            </Field>
            <Field id='device15' type='menu' visibleBindingId='show20dev'  visibleBindingValue='true'>
                <Label>Device 15:</Label>
                <List class='self' method='getDeviceList'/>
            </Field>
            <Field id='state15' type='menu' visibleBindingId='show20dev'  visibleBindingValue='true'>
                <Label>State 15:</Label>
                <List class='self' filter='device15' method='getStateList' dynamicReload='true'/>
            </Field>
            <Field id='device16' type='menu' visibleBindingId='show20dev'  visibleBindingValue='true'>
                <Label>Device 16:</Label>
                <List class='self' method='getDeviceList'/>
            </Field>
            <Field id='state16' type='menu' visibleBindingId='show20dev'  visibleBindingValue='true'>
                <Label>State 16:</Label>
                <List class='self' filter='device16' method='getStateList' dynamicReload='true'/>
            </Field>
            <Field id='device17' type='menu' visibleBindingId='show20dev'  visibleBindingValue='true'>
                <Label>Device 17:</Label>
                <List class='self' method='getDeviceList'/>
            </Field>
            <Field id='state17' type='menu' visibleBindingId='show20dev'  visibleBindingValue='true'>
                <Label>State 17:</Label>
                <List class='self' filter='device17' method='getStateList' dynamicReload='true'/>
            </Field>
            <Field id='device18' type='menu' visibleBindingId='show20dev'  visibleBindingValue='true'>
                <Label>Device 18:</Label>
                <List class='self' method='getDeviceList'/>
            </Field>
            <Field id='state18' type='menu' visibleBindingId='show20dev'  visibleBindingValue='true'>
                <Label>State 18:</Label>
                <List class='self' filter='device18' method='getStateList' dynamicReload='true'/>
            </Field>
            <Field id='device19' type='menu' visibleBindingId='show20dev'  visibleBindingValue='true'>
                <Label>Device 19:</Label>
                <List class='self' method='getDeviceList'/>
            </Field>
            <Field id='state19' type='menu' visibleBindingId='show20dev'  visibleBindingValue='true'>
                <Label>State 19:</Label>
                <List class='self' filter='device19' method='getStateList' dynamicReload='true'/>
            </Field>
            <Field id='device20' type='menu' visibleBindingId='show20dev'  visibleBindingValue='true'>
                <Label>Device 20:</Label>
                <List class='self' method='getDeviceList'/>
            </Field>
            <Field id='state20' type='menu' visibleBindingId='show20dev'  visibleBindingValue='true'>
                <Label>State 20:</Label>
                <List class='self' filter='device20' method='getStateList' dynamicReload='true'/>
            </Field>
            <Field id='statesButton3' type='button' visibleBindingId='show20dev'  visibleBindingValue='true'>
                <Title>Load Device States</Title>
                <CallbackMethod>loadStates</CallbackMethod>
            </Field>
            <Field id='variableSeparator' type='separator' />
            <Field id='variable1' type='menu'>
                <Label>Variable 1:</Label>
                <List class='self' method='getVariableList'/>
            </Field>
            <Field id='variable2' type='menu'>
                <Label>Variable 2:</Label>
                <List class='self' method='getVariableList'/>
            </Field>
            <Field id='variable3' type='menu'>
                <Label>Variable 3:</Label>
                <List class='self' method='getVariableList'/>
            </Field>
            <Field id='variable4' type='menu'>
                <Label>Variable 4:</Label>
                <List class='self' method='getVariableList'/>
            </Field>
            <Field id='variable5' type='menu'>
                <Label>Variable 5:</Label>
                <List class='self' method='getVariableList'/>
            </Field>
            <Field id='show10var' type='checkbox' defaultValue='false'>
                <Label>Show more</Label>
            </Field>
            <Field id='variable6' type='menu' visibleBindingId='show10var'  visibleBindingValue='true'>
                <Label>Variable 6:</Label>
                <List class='self' method='getVariableList'/>
            </Field>
            <Field id='variable7' type='menu' visibleBindingId='show10var'  visibleBindingValue='true'>
                <Label>Variable 7:</Label>
                <List class='self' method='getVariableList'/>
            </Field>
            <Field id='variable8' type='menu' visibleBindingId='show10var'  visibleBindingValue='true'>
                <Label>Variable 8:</Label>
                <List class='self' method='getVariableList'/>
            </Field>
            <Field id='variable9' type='menu' visibleBindingId='show10var'  visibleBindingValue='true'>
                <Label>Variable 9:</Label>
                <List class='self' method='getVariableList'/>
            </Field>
            <Field id='variable10' type='menu' visibleBindingId='show10var'  visibleBindingValue='true'>
                <Label>Variable 10:</Label>
                <List class='self' method='getVariableList'/>
            </Field>
            <Field id='logicSeparator' type='separator' />
            <Field id='logicSection' type='label' fontColor='blue'>
                <Label>Input Logic:</Label>
            </Field>
            <Field id='logicHelp' type='label' alignWithControl='true' fontSize='small' fontColor='darkgray'>
                <Label>Which state or variable values are counted as TRUE inputs?</Label>
            </Field>
            <Field id='logicType' type='menu' defaultValue='simple'>
                <Label>Logic:</Label>
                <List>
                    <Option value='simple'>Simple</Option>
                    <Option value='complex'>Complex</Option>
                </List>
            </Field>
            <Field id='boolLabel1' type='label' visibleBindingId='logicType'  visibleBindingValue='simple' alignWithControl='true' fontSize='small' fontColor='darkgray'>
                <Label>• Strings match 'true', 'on', 'open', 'up', 'yes', 'active', 'locked', '1'  </Label>
            </Field>
            <Field id='boolLabel2' type='label' visibleBindingId='logicType'  visibleBindingValue='simple' alignWithControl='true' fontSize='small' fontColor='darkgray'>
                <Label>• Numbers match if non-zero</Label>
            </Field>
            <Field id='boolLabel3' type='label' visibleBindingId='logicType'  visibleBindingValue='simple' alignWithControl='true' fontSize='small' fontColor='darkgray'>
                <Label>• Booleans match if True</Label>
            </Field>
            <Field id='reverseBoolean' type='checkbox' defaultValue='false' visibleBindingId='logicType'  visibleBindingValue='simple' alwaysUseInDialogHeightCalc='true'>
                <Label>Reverse?:</Label>
                <Description>Check to reverse above logic.</Description>
            </Field>
            <Field id='boolLabel4' type='label' visibleBindingId='reverseBoolean'  visibleBindingValue='false' alignWithControl='true' fontSize='small' fontColor='darkgray'>
                <Label>• Matched value is TRUE input</Label>
            </Field>
            <Field id='boolLabel5' type='label' visibleBindingId='reverseBoolean'  visibleBindingValue='true' alignWithControl='true' fontSize='small' fontColor='darkgray'>
                <Label>• Matched value is FALSE input</Label>
            </Field>
            <Field id='operator' type='menu' defaultValue='eq' visibleBindingId='logicType'  visibleBindingValue='complex'>
                <Label>Operator:</Label>
                <List>
                    <Option value='eq'>Equal</Option>
                    <Option value='ne'>Not Equal</Option>
                    <Option value='gt'>Greater Than</Option>
                    <Option value='lt'>Less Than</Option>
                    <Option value='ge'>Greater or Equal</Option>
                    <Option value='le'>Less or Equal</Option>
                </List>
            </Field>
            <Field id='value' type='textfield' visibleBindingId='logicType'  visibleBindingValue='complex'>
                <Label>Comparison Value:</Label>
            </Field>
            <Field id='valueType' type='menu' defaultValue='str' visibleBindingId='logicType'  visibleBindingValue='complex'>
                <Label>Data Type:</Label>
                <List>
                    <Option value='str'>String</Option>
                    <Option value='num'>Number</Option>
                </List>
            </Field>
            <Field id='boolLabel6' type='label' visibleBindingId='logicType'  visibleBindingValue='complex' alignWithControl='true' fontSize='small' fontColor='darkgray'>
                <Label>• Type errors always compare as False</Label>
            </Field>
            <Field id='boolLabel7' type='label' visibleBindingId='logicType'  visibleBindingValue='complex' alignWithControl='true' fontSize='small' fontColor='darkgray'>
                <Label>• Strings are compared in lowercase</Label>
            </Field>
            <Field id='boolLabel8' type='label' visibleBindingId='logicType'  visibleBindingValue='complex' alignWithControl='true' fontSize='small' fontColor='darkgray'>
                <Label>• Numbers are compared as floats</Label>
            </Field>
            <Field id='boolLabel9' type='label' visibleBindingId='logicType'  visibleBindingValue='complex' alignWithControl='true' fontSize='small' fontColor='darkgray'>
                <Label>• For boolean comparison, use simple logic</Label>
            </Field>
            <Field id='miscSeparator' type='separator' />
            <Field id='miscSection' type='label' fontColor='blue'>
                <Label>Miscellaneous:</Label>
            </Field>
            <Field id='logOnOff' type='checkbox' defaultValue='true'>
                <Label>Log On/Off?:</Label>
                <Description>Uncheck to suppress logging on/off events</Description>
            </Field>
        </ConfigUI>
        <States>
            <State id='onOffState'>
                <ValueType>Boolean</ValueType>
                <TriggerLabel>On/Off State is On</TriggerLabel>
                <TriggerLabelPrefix>On/Off State is</TriggerLabelPrefix>
                <ControlPageLabel>On/Off State</ControlPageLabel>
                <ControlPageLabelPrefix>On/Off State is</ControlPageLabelPrefix>
            </State>
            <State id='state'>
                <ValueType>
                    <List>
                        <Option value='idle'>Idle</Option>
                        <Option value='accrue'>Accrual</Option>
                        <Option value='active'>Active</Option>
                        <Option value='persist'>Persistent</Option>
                    </List>
                </ValueType>
                <TriggerLabel>Any State Change</TriggerLabel>
                <TriggerLabelPrefix>State is</TriggerLabelPrefix>
                <ControlPageLabel>State</ControlPageLabel>
                <ControlPageLabelPrefix>State is</ControlPageLabelPrefix>
            </State>
            <State id='displayState'>
                <ValueType>String</ValueType>
                <TriggerLabel>Display State Change</TriggerLabel>
                <TriggerLabelPrefix>Display State is</TriggerLabelPrefix>
                <ControlPageLabel>Display State</ControlPageLabel>
                <ControlPageLabelPrefix>Display State is</ControlPageLabelPrefix>
            </State>
            <State id='count'>
                <ValueType>Number</ValueType>
                <TriggerLabel>Count</TriggerLabel>
                <ControlPageLabel>Count</ControlPageLabel>
            </State>
            <State id='counting'>
                <ValueType>Boolean</ValueType>
                <TriggerLabel>Counting</TriggerLabel>
                <ControlPageLabel>Counting</ControlPageLabel>
            </State>
            <State id='expired'>
                <ValueType>Boolean</ValueType>
                <TriggerLabel>Expired</TriggerLabel>
                <ControlPageLabel>Expired</ControlPageLabel>
            </State>
            <State id='resetTime'>
                <ValueType>Number</ValueType>
                <TriggerLabel>Reset Time</TriggerLabel>
                <ControlPageLabel>Reset Time</ControlPageLabel>
            </State>
            <State id='resetString'>
                <ValueType>String</ValueType>
                <TriggerLabel>Reset String</TriggerLabel>
                <ControlPageLabel>Reset String</ControlPageLabel>
            </State>
            <State id='offTime'>
                <ValueType>Number</ValueType>
                <TriggerLabel>Off Time</TriggerLabel>
                <ControlPageLabel>Off Time</ControlPageLabel>
            </State>
            <State id='offString'>
                <ValueType>String</ValueType>
                <TriggerLabel>Off String</TriggerLabel>
                <ControlPageLabel>Off String</ControlPageLabel>
            </State>
        </States>
        <UiDisplayStateId>displayState</UiDisplayStateId>
    </Device>
    <Device type='custom' id='persistenceTimer'>
        <Name>Persistence Timer</Name>
        <ConfigUI>
            <Field id='description0' type='label'>
                <Label>Persistence Timer device tracks a single entity, igoring momentary changes.</Label>
            </Field>
            <Field id='description1' type='label' fontSize='small' fontColor='darkgray'>
                <Label>Device turns ON if input remains TRUE for duration of ON PERSIST.</Label>
            </Field>
            <Field id='description2' type='label' fontSize='small' fontColor='darkgray'>
                <Label>Device turns OFF if input remains FALSE for duration of OFF PERSIST.</Label>
            </Field>
            <Field id='timerSeparator' type='separator' />
            <Field id='timerSection' type='label' fontColor='blue'>
                <Label>Timer Settings:</Label>
            </Field>
            <Field id='onCycles' type='textfield' defaultValue='30'>
                <Label>On Persist Cycles:</Label>
            </Field>
            <Field id='onUnits' type='menu' defaultValue='seconds'>
                <Label>On Persist Units:</Label>
                <List>
                    <Option value='seconds'>Seconds</Option>
                    <Option value='minutes'>Minutes</Option>
                    <Option value='hours'>Hours</Option>
                    <Option value='days'>Days</Option>
                </List>
            </Field>
            <Field id='onHelp' type='label' fontSize='small' fontColor='darkgray' alignWithControl='true'>
                <Label>How long after TRUE input until this device turns ON.</Label>
            </Field>
            <Field id='offCycles' type='textfield' defaultValue='30'>
                <Label>Off Persist Cycles:</Label>
            </Field>
            <Field id='offUnits' type='menu' defaultValue='seconds'>
                <Label>Off Persist Units:</Label>
                <List>
                    <Option value='seconds'>Seconds</Option>
                    <Option value='minutes'>Minutes</Option>
                    <Option value='hours'>Hours</Option>
                    <Option value='days'>Days</Option>
                </List>
            </Field>
            <Field id='offHelp' type='label' fontSize='small' fontColor='darkgray' alignWithControl='true'>
                <Label>How long after FALSE input until this device turns OFF.</Label>
            </Field>
            <Field id='trackSeparator' type='separator' />
            <Field id='trackSection' type='label' fontColor='blue'>
                <Label>Tracked Entity:</Label>
            </Field>
            <Field id='trackEntity' type='menu' defaultValue='dev'>
                <Label>Track:</Label>
                <List>
                    <Option value='dev'>Device</Option>
                    <Option value='var'>Variable</Option>
                </List>
            </Field>
            <Field id='device1' type='menu' visibleBindingId='trackEntity'  visibleBindingValue='dev' alwaysUseInDialogHeightCalc='true'>
                <Label>Device:</Label>
                <List class='self' method='getDeviceList'/>
                <CallbackMethod>loadStates</CallbackMethod>
            </Field>
            <Field id='state1' type='menu' visibleBindingId='trackEntity'  visibleBindingValue='dev' alwaysUseInDialogHeightCalc='true'>
                <Label>State:</Label>
                <List class='self' filter='device1' method='getStateList' dynamicReload='true'/>
            </Field>
            <Field id='variable1' type='menu' visibleBindingId='trackEntity'  visibleBindingValue='var' alwaysUseInDialogHeightCalc='false'>
                <Label>Variable:</Label>
                <List class='self' method='getVariableList'/>
            </Field>
            <Field id='logicSeparator' type='separator' />
            <Field id='logicSection' type='label' fontColor='blue'>
                <Label>Input Logic:</Label>
            </Field>
            <Field id='logicHelp' type='label' alignWithControl='true' fontSize='small' fontColor='darkgray'>
                <Label>Which state or variable values are counted as TRUE inputs?</Label>
            </Field>
            <Field id='logicType' type='menu' defaultValue='simple'>
                <Label>Logic:</Label>
                <List>
                    <Option value='simple'>Simple</Option>
                    <Option value='complex'>Complex</Option>
                </List>
            </Field>
            <Field id='boolLabel1' type='label' visibleBindingId='logicType'  visibleBindingValue='simple' alignWithControl='true' fontSize='small' fontColor='darkgray'>
                <Label>• Strings match 'true', 'on', 'open', 'up', 'yes', 'active', 'locked', '1'  </Label>
            </Field>
            <Field id='boolLabel2' type='label' visibleBindingId='logicType'  visibleBindingValue='simple' alignWithControl='true' fontSize='small' fontColor='darkgray'>
                <Label>• Numbers match if non-zero</Label>
            </Field>
            <Field id='boolLabel3' type='label' visibleBindingId='logicType'  visibleBindingValue='simple' alignWithControl='true' fontSize='small' fontColor='darkgray'>
                <Label>• Booleans match if True</Label>
            </Field>
            <Field id='reverseBoolean' type='checkbox' defaultValue='false' visibleBindingId='logicType'  visibleBindingValue='simple' alwaysUseInDialogHeightCalc='true'>
                <Label>Reverse?:</Label>
                <Description>Check to reverse above logic.</Description>
            </Field>
            <Field id='boolLabel4' type='label' visibleBindingId='reverseBoolean'  visibleBindingValue='false' alignWithControl='true' fontSize='small' fontColor='darkgray'>
                <Label>• Matched value is TRUE input</Label>
            </Field>
            <Field id='boolLabel5' type='label' visibleBindingId='reverseBoolean'  visibleBindingValue='true' alignWithControl='true' fontSize='small' fontColor='darkgray'>
                <Label>• Matched value is FALSE input</Label>
            </Field>
            <Field id='operator' type='menu' defaultValue='eq' visibleBindingId='logicType'  visibleBindingValue='complex'>
                <Label>Operator:</Label>
                <List>
                    <Option value='eq'>Equal</Option>
                    <Option value='ne'>Not Equal</Option>
                    <Option value='gt'>Greater Than</Option>
                    <Option value='lt'>Less Than</Option>
                    <Option value='ge'>Greater or Equal</Option>
                    <Option value='le'>Less or Equal</Option>
                </List>
            </Field>
            <Field id='value' type='textfield' visibleBindingId='logicType'  visibleBindingValue='complex'>
                <Label>Comparison Value:</Label>
            </Field>
            <Field id='valueType' type='menu' defaultValue='str' visibleBindingId='logicType'  visibleBindingValue='complex'>
                <Label>Data Type:</Label>
                <List>
                    <Option value='str'>String</Option>
                    <Option value='num'>Number</Option>
                </List>
            </Field>
            <Field id='boolLabel6' type='label' visibleBindingId='logicType'  visibleBindingValue='complex' alignWithControl='true' fontSize='small' fontColor='darkgray'>
                <Label>• Type errors always compare as False</Label>
            </Field>
            <Field id='boolLabel7' type='label' visibleBindingId='logicType'  visibleBindingValue='complex' alignWithControl='true' fontSize='small' fontColor='darkgray'>
                <Label>• Strings are compared in lowercase</Label>
            </Field>
            <Field id='boolLabel8' type='label' visibleBindingId='logicType'  visibleBindingValue='complex' alignWithControl='true' fontSize='small' fontColor='darkgray'>
                <Label>• Numbers are compared as floats</Label>
            </Field>
            <Field id='boolLabel9' type='label' visibleBindingId='logicType'  visibleBindingValue='complex' alignWithControl='true' fontSize='small' fontColor='darkgray'>
                <Label>• For boolean comparison, use simple logic</Label>
            </Field>
            <Field id='miscSeparator' type='separator' />
            <Field id='miscSection' type='label' fontColor='blue'>
                <Label>Miscellaneous:</Label>
            </Field>
            <Field id='logOnOff' type='checkbox' defaultValue='true'>
                <Label>Log On/Off?:</Label>
                <Description>Uncheck to suppress logging on/off events</Description>
            </Field>
        </ConfigUI>
        <States>
            <State id='onOffState'>
                <ValueType>Boolean</ValueType>
                <TriggerLabel>On/Off State is On</TriggerLabel>
                <TriggerLabelPrefix>On/Off State is</TriggerLabelPrefix>
                <ControlPageLabel>On/Off State</ControlPageLabel>
                <ControlPageLabelPrefix>On/Off State is</ControlPageLabelPrefix>
            </State>
            <State id='state'>
                <ValueType>
                    <List>
                        <Option value='on'>On</Option>
                        <Option value='off'>Off</Option>
                        <Option value='pending'>Pending</Option>
                    </List>
                </ValueType>
                <TriggerLabel>Any State Change</TriggerLabel>
                <TriggerLabelPrefix>State is</TriggerLabelPrefix>
                <ControlPageLabel>State</ControlPageLabel>
                <ControlPageLabelPrefix>State is</ControlPageLabelPrefix>
            </State>
            <State id='displayState'>
                <ValueType>String</ValueType>
                <TriggerLabel>Display State Change</TriggerLabel>
                <TriggerLabelPrefix>Display State is</TriggerLabelPrefix>
                <ControlPageLabel>Display State</ControlPageLabel>
                <ControlPageLabelPrefix>Display State is</ControlPageLabelPrefix>
            </State>
            <State id='pending'>
                <ValueType>Boolean</ValueType>
                <TriggerLabel>Pending is</TriggerLabel>
                <TriggerLabelPrefix>Pending is</TriggerLabelPrefix>
                <ControlPageLabel>Pending</ControlPageLabel>
                <ControlPageLabelPrefix>Pending is</ControlPageLabelPrefix>
            </State>
            <State id='onTime'>
                <ValueType>Number</ValueType>
                <TriggerLabel>Reset Time</TriggerLabel>
                <ControlPageLabel>Reset Time</ControlPageLabel>
            </State>
            <State id='onString'>
                <ValueType>String</ValueType>
                <TriggerLabel>Reset String</TriggerLabel>
                <ControlPageLabel>Reset String</ControlPageLabel>
            </State>
            <State id='offTime'>
                <ValueType>Number</ValueType>
                <TriggerLabel>Reset Time</TriggerLabel>
                <ControlPageLabel>Reset Time</ControlPageLabel>
            </State>
            <State id='offString'>
                <ValueType>String</ValueType>
                <TriggerLabel>Reset String</TriggerLabel>
                <ControlPageLabel>Reset String</ControlPageLabel>
            </State>
        </States>
        <UiDisplayStateId>displayState</UiDisplayStateId>
    </Device>
    <Device type='custom' id='lockoutTimer'>
        <Name>Lockout Timer</Name>
        <ConfigUI>
            <Field id='description0' type='label'>
                <Label>Lockout Timer device tracks a single entity, igoring fast changes.</Label>
            </Field>
            <Field id='description1' type='label' fontSize='small' fontColor='darkgray'>
                <Label>Device turns ON with TRUE input, and locks until ON LOCKOUT expires.</Label>
            </Field>
            <Field id='description2' type='label' fontSize='small' fontColor='darkgray'>
                <Label>Device turns OFF with FALSE input, and locks until OFF LOCKOUT expires.</Label>
            </Field>
            <Field id='description3' type='label' fontSize='small' fontColor='darkgray'>
                <Label>When LOCKOUT expires, device will evaluate any subsequent changes.</Label>
            </Field>
            <Field id='timerSeparator' type='separator' />
            <Field id='timerSection' type='label' fontColor='blue'>
                <Label>Timer Settings:</Label>
            </Field>
            <Field id='onCycles' type='textfield' defaultValue='30'>
                <Label>On Lockout Cycles:</Label>
            </Field>
            <Field id='onUnits' type='menu' defaultValue='seconds'>
                <Label>On Lockout Units:</Label>
                <List>
                    <Option value='seconds'>Seconds</Option>
                    <Option value='minutes'>Minutes</Option>
                    <Option value='hours'>Hours</Option>
                    <Option value='days'>Days</Option>
                </List>
            </Field>
            <Field id='onHelp' type='label' fontSize='small' fontColor='darkgray' alignWithControl='true'>
                <Label>How long to prevent changes after this device turns ON.</Label>
            </Field>
            <Field id='offCycles' type='textfield' defaultValue='30'>
                <Label>Off Lockout Cycles:</Label>
            </Field>
            <Field id='offUnits' type='menu' defaultValue='seconds'>
                <Label>Off Lockout Units:</Label>
                <List>
                    <Option value='seconds'>Seconds</Option>
                    <Option value='minutes'>Minutes</Option>
                    <Option value='hours'>Hours</Option>
                    <Option value='days'>Days</Option>
                </List>
            </Field>
            <Field id='offHelp' type='label' fontSize='small' fontColor='darkgray' alignWithControl='true'>
                <Label>How long to prevent changes after this device turns OFF.</Label>
            </Field>
            <Field id='trackSeparator' type='separator' />
            <Field id='trackSection' type='label' fontColor='blue'>
                <Label>Tracked Entity:</Label>
            </Field>
            <Field id='trackEntity' type='menu' defaultValue='dev'>
                <Label>Track:</Label>
                <List>
                    <Option value='dev'>Device</Option>
                    <Option value='var'>Variable</Option>
                </List>
            </Field>
            <Field id='device1' type='menu' visibleBindingId='trackEntity'  visibleBindingValue='dev' alwaysUseInDialogHeightCalc='true'>
                <Label>Device:</Label>
                <List class='self' method='getDeviceList'/>
                <CallbackMethod>loadStates</CallbackMethod>
            </Field>
            <Field id='state1' type='menu' visibleBindingId='trackEntity'  visibleBindingValue='dev' alwaysUseInDialogHeightCalc='true'>
                <Label>State:</Label>
                <List class='self' filter='device1' method='getStateList' dynamicReload='true'/>
            </Field>
            <Field id='variable1' type='menu' visibleBindingId='trackEntity'  visibleBindingValue='var' alwaysUseInDialogHeightCalc='false'>
                <Label>Variable:</Label>
                <List class='self' method='getVariableList'/>
            </Field>
            <Field id='logicSeparator' type='separator' />
            <Field id='logicSection' type='label' fontColor='blue'>
                <Label>Input Logic:</Label>
            </Field>
            <Field id='logicHelp' type='label' alignWithControl='true' fontSize='small' fontColor='darkgray'>
                <Label>Which state or variable values are counted as TRUE inputs?</Label>
            </Field>
            <Field id='logicType' type='menu' defaultValue='simple'>
                <Label>Logic:</Label>
                <List>
                    <Option value='simple'>Simple</Option>
                    <Option value='complex'>Complex</Option>
                </List>
            </Field>
            <Field id='boolLabel1' type='label' visibleBindingId='logicType'  visibleBindingValue='simple' alignWithControl='true' fontSize='small' fontColor='darkgray'>
                <Label>• Strings match 'true', 'on', 'open', 'up', 'yes', 'active', 'locked', '1'  </Label>
            </Field>
            <Field id='boolLabel2' type='label' visibleBindingId='logicType'  visibleBindingValue='simple' alignWithControl='true' fontSize='small' fontColor='darkgray'>
                <Label>• Numbers match if non-zero</Label>
            </Field>
            <Field id='boolLabel3' type='label' visibleBindingId='logicType'  visibleBindingValue='simple' alignWithControl='true' fontSize='small' fontColor='darkgray'>
                <Label>• Booleans match if True</Label>
            </Field>
            <Field id='reverseBoolean' type='checkbox' defaultValue='false' visibleBindingId='logicType'  visibleBindingValue='simple' alwaysUseInDialogHeightCalc='true'>
                <Label>Reverse?:</Label>
                <Description>Check to reverse above logic.</Description>
            </Field>
            <Field id='boolLabel4' type='label' visibleBindingId='reverseBoolean'  visibleBindingValue='false' alignWithControl='true' fontSize='small' fontColor='darkgray'>
                <Label>• Matched value is TRUE input</Label>
            </Field>
            <Field id='boolLabel5' type='label' visibleBindingId='reverseBoolean'  visibleBindingValue='true' alignWithControl='true' fontSize='small' fontColor='darkgray'>
                <Label>• Matched value is FALSE input</Label>
            </Field>
            <Field id='operator' type='menu' defaultValue='eq' visibleBindingId='logicType'  visibleBindingValue='complex'>
                <Label>Operator:</Label>
                <List>
                    <Option value='eq'>Equal</Option>
                    <Option value='ne'>Not Equal</Option>
                    <Option value='gt'>Greater Than</Option>
                    <Option value='lt'>Less Than</Option>
                    <Option value='ge'>Greater or Equal</Option>
                    <Option value='le'>Less or Equal</Option>
                </List>
            </Field>
            <Field id='value' type='textfield' visibleBindingId='logicType'  visibleBindingValue='complex'>
                <Label>Comparison Value:</Label>
            </Field>
            <Field id='valueType' type='menu' defaultValue='str' visibleBindingId='logicType'  visibleBindingValue='complex'>
                <Label>Data Type:</Label>
                <List>
                    <Option value='str'>String</Option>
                    <Option value='num'>Number</Option>
                </List>
            </Field>
            <Field id='boolLabel6' type='label' visibleBindingId='logicType'  visibleBindingValue='complex' alignWithControl='true' fontSize='small' fontColor='darkgray'>
                <Label>• Type errors always compare as False</Label>
            </Field>
            <Field id='boolLabel7' type='label' visibleBindingId='logicType'  visibleBindingValue='complex' alignWithControl='true' fontSize='small' fontColor='darkgray'>
                <Label>• Strings are compared in lowercase</Label>
            </Field>
            <Field id='boolLabel8' type='label' visibleBindingId='logicType'  visibleBindingValue='complex' alignWithControl='true' fontSize='small' fontColor='darkgray'>
                <Label>• Numbers are compared as floats</Label>
            </Field>
            <Field id='boolLabel9' type='label' visibleBindingId='logicType'  visibleBindingValue='complex' alignWithControl='true' fontSize='small' fontColor='darkgray'>
                <Label>• For boolean comparison, use simple logic</Label>
            </Field>
            <Field id='miscSeparator' type='separator' />
            <Field id='miscSection' type='label' fontColor='blue'>
                <Label>Miscellaneous:</Label>
            </Field>
            <Field id='logOnOff' type='checkbox' defaultValue='true'>
                <Label>Log On/Off?:</Label>
                <Description>Uncheck to suppress logging on/off events</Description>
            </Field>
        </ConfigUI>
        <States>
            <State id='onOffState'>
                <ValueType>Boolean</ValueType>
                <TriggerLabel>On/Off State is On</TriggerLabel>
                <TriggerLabelPrefix>On/Off State is</TriggerLabelPrefix>
                <ControlPageLabel>On/Off State</ControlPageLabel>
                <ControlPageLabelPrefix>On/Off State is</ControlPageLabelPrefix>
            </State>
            <State id='state'>
                <ValueType>
                    <List>
                        <Option value='on'>On</Option>
                        <Option value='off'>Off</Option>
                        <Option value='locked'>Locked</Option>
                    </List>
                </ValueType>
                <TriggerLabel>Any State Change</TriggerLabel>
                <TriggerLabelPrefix>State is</TriggerLabelPrefix>
                <ControlPageLabel>State</ControlPageLabel>
                <ControlPageLabelPrefix>State is</ControlPageLabelPrefix>
            </State>
            <State id='displayState'>
                <ValueType>String</ValueType>
                <TriggerLabel>Display State Change</TriggerLabel>
                <TriggerLabelPrefix>Display State is</TriggerLabelPrefix>
                <ControlPageLabel>Display State</ControlPageLabel>
                <ControlPageLabelPrefix>Display State is</ControlPageLabelPrefix>
            </State>
            <State id='locked'>
                <ValueType>Boolean</ValueType>
                <TriggerLabel>Locked is</TriggerLabel>
                <TriggerLabelPrefix>Locked is</TriggerLabelPrefix>
                <ControlPageLabel>Locked</ControlPageLabel>
                <ControlPageLabelPrefix>Locked is</ControlPageLabelPrefix>
            </State>
            <State id='onTime'>
                <ValueType>Number</ValueType>
                <TriggerLabel>Reset Time</TriggerLabel>
                <ControlPageLabel>Reset Time</ControlPageLabel>
            </State>
            <State id='onString'>
                <ValueType>String</ValueType>
                <TriggerLabel>Reset String</TriggerLabel>
                <ControlPageLabel>Reset String</ControlPageLabel>
            </State>
            <State id='offTime'>
                <ValueType>Number</ValueType>
                <TriggerLabel>Reset Time</TriggerLabel>
                <ControlPageLabel>Reset Time</ControlPageLabel>
            </State>
            <State id='offString'>
                <ValueType>String</ValueType>
                <TriggerLabel>Reset String</TriggerLabel>
                <ControlPageLabel>Reset String</ControlPageLabel>
            </State>
        </States>
        <UiDisplayStateId>displayState</UiDisplayStateId>
    </Device>
    <Device type='custom' id='aliveTimer'>
        <Name>Alive Timer</Name>
        <ConfigUI>
            <Field id='description0' type='label'>
                <Label>Alive Timer device tracks a single enity for any changes.</Label>
            </Field>
            <Field id='description1' type='label' fontSize='small' fontColor='darkgray'>
                <Label>Device turns ON and sets ALIVE TIMER if any change is detected (including heartbeat).</Label>
            </Field>
            <Field id='description2' type='label' fontSize='small' fontColor='darkgray'>
                <Label>Device turns OFF if ALIVE TIMER expires.</Label>
            </Field>
            <Field id='timerSeparator' type='separator' />
            <Field id='timerSection' type='label' fontColor='blue'>
                <Label>Timer Settings:</Label>
            </Field>
            <Field id='offCycles' type='textfield' defaultValue='25'>
                <Label>Alive Timer Cycles:</Label>
            </Field>
            <Field id='offUnits' type='menu' defaultValue='hours'>
                <Label>Alive Timer Units:</Label>
                <List>
                    <Option value='seconds'>Seconds</Option>
                    <Option value='minutes'>Minutes</Option>
                    <Option value='hours'>Hours</Option>
                    <Option value='days'>Days</Option>
                </List>
            </Field>
            <Field id='offHelp' type='label' fontSize='small' fontColor='darkgray' alignWithControl='true'>
                <Label>How after last detected change before this device turns OFF.</Label>
            </Field>
            <Field id='trackSeparator' type='separator' />
            <Field id='trackSection' type='label' fontColor='blue'>
                <Label>Tracked Entity:</Label>
            </Field>
            <Field id='trackEntity' type='menu' defaultValue='dev'>
                <Label>Track:</Label>
                <List>
                    <Option value='dev'>Device</Option>
                    <Option value='var'>Variable</Option>
                </List>
            </Field>
            <Field id='device1' type='menu' visibleBindingId='trackEntity'  visibleBindingValue='dev' alwaysUseInDialogHeightCalc='true'>
                <Label>Device:</Label>
                <List class='self' method='getDeviceList'/>
            </Field>
            <Field id='state1' type='textField' defaultValue='None' hidden='true' />
            <Field id='variable1' type='menu' visibleBindingId='trackEntity'  visibleBindingValue='var' alwaysUseInDialogHeightCalc='false'>
                <Label>Variable:</Label>
                <List class='self' method='getVariableList'/>
            </Field>
            <Field id='miscSeparator' type='separator' />
            <Field id='miscSection' type='label' fontColor='blue'>
                <Label>Miscellaneous:</Label>
            </Field>
            <Field id='logOnOff' type='checkbox' defaultValue='true'>
                <Label>Log On/Off?:</Label>
                <Description>Uncheck to suppress logging on/off events</Description>
            </Field>
        </ConfigUI>
        <States>
            <State id='onOffState'>
                <ValueType>Boolean</ValueType>
                <TriggerLabel>On/Off State is On</TriggerLabel>
                <TriggerLabelPrefix>On/Off State is</TriggerLabelPrefix>
                <ControlPageLabel>On/Off State</ControlPageLabel>
                <ControlPageLabelPrefix>On/Off State is</ControlPageLabelPrefix>
            </State>
            <State id='state'>
                <ValueType>
                    <List>
                        <Option value='on'>On</Option>
                        <Option value='off'>Off</Option>
                    </List>
                </ValueType>
                <TriggerLabel>Any State Change</TriggerLabel>
                <TriggerLabelPrefix>State is</TriggerLabelPrefix>
                <ControlPageLabel>State</ControlPageLabel>
                <ControlPageLabelPrefix>State is</ControlPageLabelPrefix>
            </State>
            <State id='displayState'>
                <ValueType>String</ValueType>
                <TriggerLabel>Display State Change</TriggerLabel>
                <TriggerLabelPrefix>Display State is</TriggerLabelPrefix>
                <ControlPageLabel>Display State</ControlPageLabel>
                <ControlPageLabelPrefix>Display State is</ControlPageLabelPrefix>
            </State>
            <State id='offTime'>
                <ValueType>Number</ValueType>
                <TriggerLabel>Reset Time</TriggerLabel>
                <ControlPageLabel>Reset Time</ControlPageLabel>
            </State>
            <State id='offString'>
                <ValueType>String</ValueType>
                <TriggerLabel>Reset String</TriggerLabel>
                <ControlPageLabel>Reset String</ControlPageLabel>
            </State>
        </States>
        <UiDisplayStateId>displayState</UiDisplayStateId>
    </Device>
    <Device type='custom' id='runningTimer'>
        <Name>Running Timer</Name>
        <ConfigUI>
            <Field id='description0' type='label'>
                <Label>Running Timer device tracks a single enity, maintaining statistics of on time.</Label>
            </Field>
            <Field id='description1' type='label' fontSize='small' fontColor='darkgray'>
                <Label>Device turns ON with TRUE input and OFF with FALSE input.</Label>
            </Field>
            <Field id='description2' type='label' fontSize='small' fontColor='darkgray'>
                <Label>Total ON times are recorded for current and prior hour, day, week, month and year.</Label>
            </Field>
            <Field id='timerSeparator' type='separator' />
            <Field id='timerSection' type='label' fontColor='blue'>
                <Label>Timer Settings:</Label>
            </Field>
            <Field id='updateSeconds' type='menu' defaultValue='60'>
                <Label>Update Frequency:</Label>
                <List>
                    <Option value='0'>Only when changed</Option>
                    <Option value='5'>5 Seconds (testing)</Option>
                    <Option value='10'>10 Seconds</Option>
                    <Option value='30'>30 Seconds</Option>
                    <Option value="60">1 Minute</Option>
                    <Option value="120">2 Minutes</Option>
                    <Option value="300">5 Minutes</Option>
                    <Option value="600">10 Minutes</Option>
                    <Option value="900">15 Minutes</Option>
                    <Option value="1800">30 Minutes</Option>
                    <Option value="3600">1 Hour</Option>
                </List>
            </Field>
            <Field id='updateHelp0' type='label' alignWithControl='true' fontSize='small' fontColor='darkgray'>
                <Label>• Only affects how often totals are saved to device's states.</Label>
            </Field>
            <Field id='updateHelp1' type='label' alignWithControl='true' fontSize='small' fontColor='darkgray'>
                <Label>• This is NOT the granularity of the measurment.</Label>
            </Field>
            <Field id='updateHelp2' type='label' alignWithControl='true' fontSize='small' fontColor='darkgray'>
                <Label>• Device will ALWAYS update when the tracked entity changes.</Label>
            </Field>
            <Field id='trackSeparator' type='separator' />
            <Field id='trackSection' type='label' fontColor='blue'>
                <Label>Tracked Entity:</Label>
            </Field>
            <Field id='trackEntity' type='menu' defaultValue='dev'>
                <Label>Track:</Label>
                <List>
                    <Option value='dev'>Device</Option>
                    <Option value='var'>Variable</Option>
                </List>
            </Field>
            <Field id='device1' type='menu' visibleBindingId='trackEntity'  visibleBindingValue='dev' alwaysUseInDialogHeightCalc='true'>
                <Label>Device:</Label>
                <List class='self' method='getDeviceList'/>
                <CallbackMethod>loadStates</CallbackMethod>
            </Field>
            <Field id='state1' type='menu' visibleBindingId='trackEntity'  visibleBindingValue='dev' alwaysUseInDialogHeightCalc='true'>
                <Label>State:</Label>
                <List class='self' filter='device1' method='getStateList' dynamicReload='true'/>
            </Field>
            <Field id='variable1' type='menu' visibleBindingId='trackEntity'  visibleBindingValue='var' alwaysUseInDialogHeightCalc='false'>
                <Label>Variable:</Label>
                <List class='self' method='getVariableList'/>
            </Field>
            <Field id='logicSeparator' type='separator' />
            <Field id='logicSection' type='label' fontColor='blue'>
                <Label>Input Logic:</Label>
            </Field>
            <Field id='logicHelp' type='label' alignWithControl='true' fontSize='small' fontColor='darkgray'>
                <Label>Which state or variable values are counted as TRUE inputs?</Label>
            </Field>
            <Field id='logicType' type='menu' defaultValue='simple'>
                <Label>Logic:</Label>
                <List>
                    <Option value='simple'>Simple</Option>
                    <Option value='complex'>Complex</Option>
                </List>
            </Field>
            <Field id='boolLabel1' type='label' visibleBindingId='logicType'  visibleBindingValue='simple' alignWithControl='true' fontSize='small' fontColor='darkgray'>
                <Label>• Strings match 'true', 'on', 'open', 'up', 'yes', 'active', 'locked', '1'  </Label>
            </Field>
            <Field id='boolLabel2' type='label' visibleBindingId='logicType'  visibleBindingValue='simple' alignWithControl='true' fontSize='small' fontColor='darkgray'>
                <Label>• Numbers match if non-zero</Label>
            </Field>
            <Field id='boolLabel3' type='label' visibleBindingId='logicType'  visibleBindingValue='simple' alignWithControl='true' fontSize='small' fontColor='darkgray'>
                <Label>• Booleans match if True</Label>
            </Field>
            <Field id='reverseBoolean' type='checkbox' defaultValue='false' visibleBindingId='logicType'  visibleBindingValue='simple' alwaysUseInDialogHeightCalc='true'>
                <Label>Reverse?:</Label>
                <Description>Check to reverse above logic.</Description>
            </Field>
            <Field id='boolLabel4' type='label' visibleBindingId='reverseBoolean'  visibleBindingValue='false' alignWithControl='true' fontSize='small' fontColor='darkgray'>
                <Label>• Matched value is TRUE input</Label>
            </Field>
            <Field id='boolLabel5' type='label' visibleBindingId='reverseBoolean'  visibleBindingValue='true' alignWithControl='true' fontSize='small' fontColor='darkgray'>
                <Label>• Matched value is FALSE input</Label>
            </Field>
            <Field id='operator' type='menu' defaultValue='eq' visibleBindingId='logicType'  visibleBindingValue='complex'>
                <Label>Operator:</Label>
                <List>
                    <Option value='eq'>Equal</Option>
                    <Option value='ne'>Not Equal</Option>
                    <Option value='gt'>Greater Than</Option>
                    <Option value='lt'>Less Than</Option>
                    <Option value='ge'>Greater or Equal</Option>
                    <Option value='le'>Less or Equal</Option>
                </List>
            </Field>
            <Field id='value' type='textfield' visibleBindingId='logicType'  visibleBindingValue='complex'>
                <Label>Comparison Value:</Label>
            </Field>
            <Field id='valueType' type='menu' defaultValue='str' visibleBindingId='logicType'  visibleBindingValue='complex'>
                <Label>Data Type:</Label>
                <List>
                    <Option value='str'>String</Option>
                    <Option value='num'>Number</Option>
                </List>
            </Field>
            <Field id='boolLabel6' type='label' visibleBindingId='logicType'  visibleBindingValue='complex' alignWithControl='true' fontSize='small' fontColor='darkgray'>
                <Label>• Type errors always compare as False</Label>
            </Field>
            <Field id='boolLabel7' type='label' visibleBindingId='logicType'  visibleBindingValue='complex' alignWithControl='true' fontSize='small' fontColor='darkgray'>
                <Label>• Strings are compared in lowercase</Label>
            </Field>
            <Field id='boolLabel8' type='label' visibleBindingId='logicType'  visibleBindingValue='complex' alignWithControl='true' fontSize='small' fontColor='darkgray'>
                <Label>• Numbers are compared as floats</Label>
            </Field>
            <Field id='boolLabel9' type='label' visibleBindingId='logicType'  visibleBindingValue='complex' alignWithControl='true' fontSize='small' fontColor='darkgray'>
                <Label>• For boolean comparison, use simple logic</Label>
            </Field>
            <Field id='miscSeparator' type='separator' />
            <Field id='miscSection' type='label' fontColor='blue'>
                <Label>Miscellaneous:</Label>
            </Field>
            <Field id='logOnOff' type='checkbox' defaultValue='true'>
                <Label>Log On/Off?:</Label>
                <Description>Uncheck to suppress logging on/off events</Description>
            </Field>
        </ConfigUI>
        <States>
            <State id='onOffState'>
                <ValueType>Boolean</ValueType>
                <TriggerLabel>On/Off State is On</TriggerLabel>
                <TriggerLabelPrefix>On/Off State is</TriggerLabelPrefix>
                <ControlPageLabel>On/Off State</ControlPageLabel>
                <ControlPageLabelPrefix>On/Off State is</ControlPageLabelPrefix>
            </State>
            <State id='state'>
                <ValueType>
                    <List>
                        <Option value='on'>On</Option>
                        <Option value='off'>Off</Option>
                    </List>
                </ValueType>
                <TriggerLabel>Any State Change</TriggerLabel>
                <TriggerLabelPrefix>State is</TriggerLabelPrefix>
                <ControlPageLabel>State</ControlPageLabel>
                <ControlPageLabelPrefix>State is</ControlPageLabelPrefix>
            </State>
            <State id='displayState'>
                <ValueType>String</ValueType>
                <TriggerLabel>Display State Change</TriggerLabel>
                <TriggerLabelPrefix>Display State is</TriggerLabelPrefix>
                <ControlPageLabel>Display State</ControlPageLabel>
                <ControlPageLabelPrefix>Display State is</ControlPageLabelPrefix>
            </State>
            <State id='onTime'>
                <ValueType>Number</ValueType>
                <TriggerLabel>Reset Time</TriggerLabel>
                <ControlPageLabel>Reset Time</ControlPageLabel>
            </State>
            <State id='onString'>
                <ValueType>String</ValueType>
                <TriggerLabel>Reset String</TriggerLabel>
                <ControlPageLabel>Reset String</ControlPageLabel>
            </State>
            <State id='offTime'>
                <ValueType>Number</ValueType>
                <TriggerLabel>Reset Time</TriggerLabel>
                <ControlPageLabel>Reset Time</ControlPageLabel>
            </State>
            <State id='offString'>
                <ValueType>String</ValueType>
                <TriggerLabel>Reset String</TriggerLabel>
                <ControlPageLabel>Reset String</ControlPageLabel>
            </State>
            <State id='secondsThisContinuous'>
                <ValueType>Number</ValueType>
                <TriggerLabel>Seconds On Currently</TriggerLabel>
                <TriggerLabelPrefix>Seconds On Currently</TriggerLabelPrefix>
                <ControlPageLabel>Seconds On Currently</ControlPageLabel>
                <ControlPageLabelPrefix>Seconds On Currently</ControlPageLabelPrefix>
            </State>
            <State id='secondsThisHour'>
                <ValueType>Number</ValueType>
                <TriggerLabel>Seconds On This Hour</TriggerLabel>
                <TriggerLabelPrefix>Seconds On This Hour</TriggerLabelPrefix>
                <ControlPageLabel>Seconds On This Hour</ControlPageLabel>
                <ControlPageLabelPrefix>Seconds On This Hour</ControlPageLabelPrefix>
            </State>
            <State id='secondsThisDay'>
                <ValueType>Number</ValueType>
                <TriggerLabel>Seconds On This Day</TriggerLabel>
                <TriggerLabelPrefix>Seconds On This Day</TriggerLabelPrefix>
                <ControlPageLabel>Seconds On This Day</ControlPageLabel>
                <ControlPageLabelPrefix>Seconds On This Day</ControlPageLabelPrefix>
            </State>
            <State id='secondsThisWeek'>
                <ValueType>Number</ValueType>
                <TriggerLabel>Seconds On This Week</TriggerLabel>
                <TriggerLabelPrefix>Seconds On This Week</TriggerLabelPrefix>
                <ControlPageLabel>Seconds On This Week</ControlPageLabel>
                <ControlPageLabelPrefix>Seconds On This Week</ControlPageLabelPrefix>
            </State>
            <State id='secondsThisMonth'>
                <ValueType>Number</ValueType>
                <TriggerLabel>Seconds On This Month</TriggerLabel>
                <TriggerLabelPrefix>Seconds On This Month</TriggerLabelPrefix>
                <ControlPageLabel>Seconds On This Month</ControlPageLabel>
                <ControlPageLabelPrefix>Seconds On This Month</ControlPageLabelPrefix>
            </State>
            <State id='secondsThisYear'>
                <ValueType>Number</ValueType>
                <TriggerLabel>Seconds On This Year</TriggerLabel>
                <TriggerLabelPrefix>Seconds On This Year</TriggerLabelPrefix>
                <ControlPageLabel>Seconds On This Year</ControlPageLabel>
                <ControlPageLabelPrefix>Seconds On This Year</ControlPageLabelPrefix>
            </State>
            <State id='secondsLastContinuous'>
                <ValueType>Number</ValueType>
                <TriggerLabel>Seconds On Previously</TriggerLabel>
                <TriggerLabelPrefix>Seconds On Previously</TriggerLabelPrefix>
                <ControlPageLabel>Seconds On Previously</ControlPageLabel>
                <ControlPageLabelPrefix>Seconds On Previously</ControlPageLabelPrefix>
            </State>
            <State id='secondsLastHour'>
                <ValueType>Number</ValueType>
                <TriggerLabel>Seconds On Last Hour</TriggerLabel>
                <TriggerLabelPrefix>Seconds On Last Hour</TriggerLabelPrefix>
                <ControlPageLabel>Seconds On Last Hour</ControlPageLabel>
                <ControlPageLabelPrefix>Seconds On Last Hour</ControlPageLabelPrefix>
            </State>
            <State id='secondsLastDay'>
                <ValueType>Number</ValueType>
                <TriggerLabel>Seconds On Last Day</TriggerLabel>
                <TriggerLabelPrefix>Seconds On Last Day</TriggerLabelPrefix>
                <ControlPageLabel>Seconds On Last Day</ControlPageLabel>
                <ControlPageLabelPrefix>Seconds On Last Day</ControlPageLabelPrefix>
            </State>
            <State id='secondsLastWeek'>
                <ValueType>Number</ValueType>
                <TriggerLabel>Seconds On Last Week</TriggerLabel>
                <TriggerLabelPrefix>Seconds On Last Week</TriggerLabelPrefix>
                <ControlPageLabel>Seconds On Last Week</ControlPageLabel>
                <ControlPageLabelPrefix>Seconds On Last Week</ControlPageLabelPrefix>
            </State>
            <State id='secondsLastMonth'>
                <ValueType>Number</ValueType>
                <TriggerLabel>Seconds On Last Month</TriggerLabel>
                <TriggerLabelPrefix>Seconds On Last Month</TriggerLabelPrefix>
                <ControlPageLabel>Seconds On Last Month</ControlPageLabel>
                <ControlPageLabelPrefix>Seconds On Last Month</ControlPageLabelPrefix>
            </State>
            <State id='secondsLastYear'>
                <ValueType>Number</ValueType>
                <TriggerLabel>Seconds On Last Year</TriggerLabel>
                <TriggerLabelPrefix>Seconds On Last Year</TriggerLabelPrefix>
                <ControlPageLabel>Seconds On Last Year</ControlPageLabel>
                <ControlPageLabelPrefix>Seconds On Last Year</ControlPageLabelPrefix>
            </State>
            <State id='stringThisContinuous'>
                <ValueType>String</ValueType>
                <TriggerLabel>String On Currently</TriggerLabel>
                <TriggerLabelPrefix>String On Currently</TriggerLabelPrefix>
                <ControlPageLabel>String On Currently</ControlPageLabel>
                <ControlPageLabelPrefix>String On Currently</ControlPageLabelPrefix>
            </State>
            <State id='stringThisHour'>
                <ValueType>String</ValueType>
                <TriggerLabel>String On This Hour</TriggerLabel>
                <TriggerLabelPrefix>String On This Hour</TriggerLabelPrefix>
                <ControlPageLabel>String On This Hour</ControlPageLabel>
                <ControlPageLabelPrefix>String On This Hour</ControlPageLabelPrefix>
            </State>
            <State id='stringThisDay'>
                <ValueType>String</ValueType>
                <TriggerLabel>String On This Day</TriggerLabel>
                <TriggerLabelPrefix>String On This Day</TriggerLabelPrefix>
                <ControlPageLabel>String On This Day</ControlPageLabel>
                <ControlPageLabelPrefix>String On This Day</ControlPageLabelPrefix>
            </State>
            <State id='stringThisWeek'>
                <ValueType>String</ValueType>
                <TriggerLabel>String On This Week</TriggerLabel>
                <TriggerLabelPrefix>String On This Week</TriggerLabelPrefix>
                <ControlPageLabel>String On This Week</ControlPageLabel>
                <ControlPageLabelPrefix>String On This Week</ControlPageLabelPrefix>
            </State>
            <State id='stringThisMonth'>
                <ValueType>String</ValueType>
                <TriggerLabel>String On This Month</TriggerLabel>
                <TriggerLabelPrefix>String On This Month</TriggerLabelPrefix>
                <ControlPageLabel>String On This Month</ControlPageLabel>
                <ControlPageLabelPrefix>String On This Month</ControlPageLabelPrefix>
            </State>
            <State id='stringThisYear'>
                <ValueType>String</ValueType>
                <TriggerLabel>String On This Year</TriggerLabel>
                <TriggerLabelPrefix>String On This Year</TriggerLabelPrefix>
                <ControlPageLabel>String On This Year</ControlPageLabel>
                <ControlPageLabelPrefix>String On This Year</ControlPageLabelPrefix>
            </State>
            <State id='stringLastContinuous'>
                <ValueType>String</ValueType>
                <TriggerLabel>String On Previously</TriggerLabel>
                <TriggerLabelPrefix>String On Previously</TriggerLabelPrefix>
                <ControlPageLabel>String On Previously</ControlPageLabel>
                <ControlPageLabelPrefix>String On Previously</ControlPageLabelPrefix>
            </State>
            <State id='stringLastHour'>
                <ValueType>String</ValueType>
                <TriggerLabel>String On Last Hour</TriggerLabel>
                <TriggerLabelPrefix>String On Last Hour</TriggerLabelPrefix>
                <ControlPageLabel>String On Last Hour</ControlPageLabel>
                <ControlPageLabelPrefix>String On Last Hour</ControlPageLabelPrefix>
            </State>
            <State id='stringLastDay'>
                <ValueType>String</ValueType>
                <TriggerLabel>String On Last Day</TriggerLabel>
                <TriggerLabelPrefix>String On Last Day</TriggerLabelPrefix>
                <ControlPageLabel>String On Last Day</ControlPageLabel>
                <ControlPageLabelPrefix>String On Last Day</ControlPageLabelPrefix>
            </State>
            <State id='stringLastWeek'>
                <ValueType>String</ValueType>
                <TriggerLabel>String On Last Week</TriggerLabel>
                <TriggerLabelPrefix>String On Last Week</TriggerLabelPrefix>
                <ControlPageLabel>String On Last Week</ControlPageLabel>
                <ControlPageLabelPrefix>String On Last Week</ControlPageLabelPrefix>
            </State>
            <State id='stringLastMonth'>
                <ValueType>String</ValueType>
                <TriggerLabel>String On Last Month</TriggerLabel>
                <TriggerLabelPrefix>String On Last Month</TriggerLabelPrefix>
                <ControlPageLabel>String On Last Month</ControlPageLabel>
                <ControlPageLabelPrefix>String On Last Month</ControlPageLabelPrefix>
            </State>
            <State id='stringLastYear'>
                <ValueType>String</ValueType>
                <TriggerLabel>String On Last Year</TriggerLabel>
                <TriggerLabelPrefix>String On Last Year</TriggerLabelPrefix>
                <ControlPageLabel>String On Last Year</ControlPageLabel>
                <ControlPageLabelPrefix>String On Last Year</ControlPageLabelPrefix>
            </State>
            <State id='zzzSaveSpanDict'>
                <ValueType>String</ValueType>
                <TriggerLabel>-- Do Not Use --</TriggerLabel>
                <TriggerLabelPrefix>-- Do Not Use --</TriggerLabelPrefix>
                <ControlPageLabel>-- Do Not Use --</ControlPageLabel>
                <ControlPageLabelPrefix>-- Do Not Use --</ControlPageLabelPrefix>
            </State>
            <State id='zzzSecsDoneDict'>
                <ValueType>String</ValueType>
                <TriggerLabel>-- Do Not Use --</TriggerLabel>
                <TriggerLabelPrefix>-- Do Not Use --</TriggerLabelPrefix>
                <ControlPageLabel>-- Do Not Use --</ControlPageLabel>
                <ControlPageLabelPrefix>-- Do Not Use --</ControlPageLabelPrefix>
            </State>
        </States>
        <UiDisplayStateId>displayState</UiDisplayStateId>
    </Device>
</Devices>
