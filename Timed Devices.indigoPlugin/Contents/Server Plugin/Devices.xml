<?xml version='1.0'?>
<Devices>
    <Device type='custom' id='activityTimer'>
        <Name>Activity Timer</Name>
        <ConfigUI>
            <Field id='countThreshold' type='textfield' defaultValue='1'>
                <Label>Threshold:</Label>
            </Field>
            <Field id='resetCycles' type='textfield' defaultValue='1'>
                <Label>Reset Cycles:</Label>
            </Field>
            <Field id='resetUnits' type='menu' defaultValue='minutes'>
                <Label>Reset Units:</Label>
                <List>
                    <Option value='seconds'>Seconds</Option>
                    <Option value='minutes'>Minutes</Option>
                    <Option value='hours'>Hours</Option>
                    <Option value='days'>Days</Option>
                </List>
            </Field>
            <Field id='offCycles' type='textfield' defaultValue='10'>
                <Label>Off Cycles:</Label>
            </Field>
            <Field id='offUnits' type='menu' defaultValue='minutes'>
                <Label>Off Units:</Label>
                <List>
                    <Option value='seconds'>Seconds</Option>
                    <Option value='minutes'>Minutes</Option>
                    <Option value='hours'>Hours</Option>
                    <Option value='days'>Days</Option>
                </List>
            </Field>
            <Field id='extend' type='checkbox' defaultValue='true'>
                <Label>Always Ext?:</Label>
                <Description>Extend ON state even when threshold not met.   </Description>
            </Field>
            <Field id='deviceSeparator' type='separator' />
            <Field id='device1' type='menu'>
                <Label>Device 1:</Label>
                <List class='self' method='getDeviceList'/>
                <CallbackMethod>loadStates</CallbackMethod>
            </Field>
            <Field id='state1' type='menu'>
                <Label>State 1:</Label>
                <List class='self' filter='device1' method='getStateList' dynamicReload='true'/>
            </Field>
            <Field id='device2' type='menu'>
                <Label>Device 2:</Label>
                <List class='self' method='getDeviceList'/>
                <CallbackMethod>loadStates</CallbackMethod>
            </Field>
            <Field id='state2' type='menu'>
                <Label>State 2:</Label>
                <List class='self' filter='device2' method='getStateList' dynamicReload='true'/>
            </Field>
            <Field id='device3' type='menu'>
                <Label>Device 3:</Label>
                <List class='self' method='getDeviceList'/>
                <CallbackMethod>loadStates</CallbackMethod>
            </Field>
            <Field id='state3' type='menu'>
                <Label>State 3:</Label>
                <List class='self' filter='device3' method='getStateList' dynamicReload='true'/>
            </Field>
            <Field id='device4' type='menu'>
                <Label>Device 4:</Label>
                <List class='self' method='getDeviceList'/>
                <CallbackMethod>loadStates</CallbackMethod>
            </Field>
            <Field id='state4' type='menu'>
                <Label>State 4:</Label>
                <List class='self' filter='device4' method='getStateList' dynamicReload='true'/>
            </Field>
            <Field id='device5' type='menu'>
                <Label>Device 5:</Label>
                <List class='self' method='getDeviceList'/>
                <CallbackMethod>loadStates</CallbackMethod>
            </Field>
            <Field id='state5' type='menu'>
                <Label>State 5:</Label>
                <List class='self' filter='device5' method='getStateList' dynamicReload='true'/>
            </Field>
            <Field id='show10dev' type='checkbox' defaultValue='false'>
                <Label>Show more</Label>
            </Field>
            <Field id='device6' type='menu' visibleBindingId='show10dev'  visibleBindingValue='true'>
                <Label>Device 6:</Label>
                <List class='self' method='getDeviceList'/>
                <CallbackMethod>loadStates</CallbackMethod>
            </Field>
            <Field id='state6' type='menu' visibleBindingId='show10dev'  visibleBindingValue='true'>
                <Label>State 6:</Label>
                <List class='self' filter='device6' method='getStateList' dynamicReload='true'/>
            </Field>
            <Field id='device7' type='menu' visibleBindingId='show10dev'  visibleBindingValue='true'>
                <Label>Device 7:</Label>
                <List class='self' method='getDeviceList'/>
                <CallbackMethod>loadStates</CallbackMethod>
            </Field>
            <Field id='state7' type='menu' visibleBindingId='show10dev'  visibleBindingValue='true'>
                <Label>State 7:</Label>
                <List class='self' filter='device7' method='getStateList' dynamicReload='true'/>
            </Field>
            <Field id='device8' type='menu' visibleBindingId='show10dev'  visibleBindingValue='true'>
                <Label>Device 8:</Label>
                <List class='self' method='getDeviceList'/>
                <CallbackMethod>loadStates</CallbackMethod>
            </Field>
            <Field id='state8' type='menu' visibleBindingId='show10dev'  visibleBindingValue='true'>
                <Label>State 8:</Label>
                <List class='self' filter='device8' method='getStateList' dynamicReload='true'/>
            </Field>
            <Field id='device9' type='menu' visibleBindingId='show10dev'  visibleBindingValue='true'>
                <Label>Device 9:</Label>
                <List class='self' method='getDeviceList'/>
                <CallbackMethod>loadStates</CallbackMethod>
            </Field>
            <Field id='state9' type='menu' visibleBindingId='show10dev'  visibleBindingValue='true'>
                <Label>State 9:</Label>
                <List class='self' filter='device9' method='getStateList' dynamicReload='true'/>
            </Field>
            <Field id='device10' type='menu' visibleBindingId='show10dev'  visibleBindingValue='true'>
                <Label>Device 10:</Label>
                <List class='self' method='getDeviceList'/>
                <CallbackMethod>loadStates</CallbackMethod>
            </Field>
            <Field id='state10' type='menu' visibleBindingId='show10dev'  visibleBindingValue='true'>
                <Label>State 10:</Label>
                <List class='self' filter='device10' method='getStateList' dynamicReload='true'/>
            </Field>
            <Field id='show20dev' type='checkbox' defaultValue='false'>
                <Label>Show even more</Label>
            </Field>
            <Field id='device11' type='menu' visibleBindingId='show20dev'  visibleBindingValue='true'>
                <Label>Device 11:</Label>
                <List class='self' method='getDeviceList'/>
                <CallbackMethod>loadStates</CallbackMethod>
            </Field>
            <Field id='state11' type='menu' visibleBindingId='show20dev'  visibleBindingValue='true'>
                <Label>State 11:</Label>
                <List class='self' filter='device11' method='getStateList' dynamicReload='true'/>
            </Field>
            <Field id='device12' type='menu' visibleBindingId='show20dev'  visibleBindingValue='true'>
                <Label>Device 12:</Label>
                <List class='self' method='getDeviceList'/>
                <CallbackMethod>loadStates</CallbackMethod>
            </Field>
            <Field id='state12' type='menu' visibleBindingId='show20dev'  visibleBindingValue='true'>
                <Label>State 12:</Label>
                <List class='self' filter='device12' method='getStateList' dynamicReload='true'/>
            </Field>
            <Field id='device13' type='menu' visibleBindingId='show20dev'  visibleBindingValue='true'>
                <Label>Device 13:</Label>
                <List class='self' method='getDeviceList'/>
                <CallbackMethod>loadStates</CallbackMethod>
            </Field>
            <Field id='state13' type='menu' visibleBindingId='show20dev'  visibleBindingValue='true'>
                <Label>State 13:</Label>
                <List class='self' filter='device13' method='getStateList' dynamicReload='true'/>
            </Field>
            <Field id='device14' type='menu' visibleBindingId='show20dev'  visibleBindingValue='true'>
                <Label>Device 14:</Label>
                <List class='self' method='getDeviceList'/>
                <CallbackMethod>loadStates</CallbackMethod>
            </Field>
            <Field id='state14' type='menu' visibleBindingId='show20dev'  visibleBindingValue='true'>
                <Label>State 14:</Label>
                <List class='self' filter='device14' method='getStateList' dynamicReload='true'/>
            </Field>
            <Field id='device15' type='menu' visibleBindingId='show20dev'  visibleBindingValue='true'>
                <Label>Device 15:</Label>
                <List class='self' method='getDeviceList'/>
                <CallbackMethod>loadStates</CallbackMethod>
            </Field>
            <Field id='state15' type='menu' visibleBindingId='show20dev'  visibleBindingValue='true'>
                <Label>State 15:</Label>
                <List class='self' filter='device15' method='getStateList' dynamicReload='true'/>
            </Field>
            <Field id='device16' type='menu' visibleBindingId='show20dev'  visibleBindingValue='true'>
                <Label>Device 16:</Label>
                <List class='self' method='getDeviceList'/>
                <CallbackMethod>loadStates</CallbackMethod>
            </Field>
            <Field id='state16' type='menu' visibleBindingId='show20dev'  visibleBindingValue='true'>
                <Label>State 16:</Label>
                <List class='self' filter='device16' method='getStateList' dynamicReload='true'/>
            </Field>
            <Field id='device17' type='menu' visibleBindingId='show20dev'  visibleBindingValue='true'>
                <Label>Device 17:</Label>
                <List class='self' method='getDeviceList'/>
                <CallbackMethod>loadStates</CallbackMethod>
            </Field>
            <Field id='state17' type='menu' visibleBindingId='show20dev'  visibleBindingValue='true'>
                <Label>State 17:</Label>
                <List class='self' filter='device17' method='getStateList' dynamicReload='true'/>
            </Field>
            <Field id='device18' type='menu' visibleBindingId='show20dev'  visibleBindingValue='true'>
                <Label>Device 18:</Label>
                <List class='self' method='getDeviceList'/>
                <CallbackMethod>loadStates</CallbackMethod>
            </Field>
            <Field id='state18' type='menu' visibleBindingId='show20dev'  visibleBindingValue='true'>
                <Label>State 18:</Label>
                <List class='self' filter='device18' method='getStateList' dynamicReload='true'/>
            </Field>
            <Field id='device19' type='menu' visibleBindingId='show20dev'  visibleBindingValue='true'>
                <Label>Device 19:</Label>
                <List class='self' method='getDeviceList'/>
                <CallbackMethod>loadStates</CallbackMethod>
            </Field>
            <Field id='state19' type='menu' visibleBindingId='show20dev'  visibleBindingValue='true'>
                <Label>State 19:</Label>
                <List class='self' filter='device19' method='getStateList' dynamicReload='true'/>
            </Field>
            <Field id='device20' type='menu' visibleBindingId='show20dev'  visibleBindingValue='true'>
                <Label>Device 20:</Label>
                <List class='self' method='getDeviceList'/>
                <CallbackMethod>loadStates</CallbackMethod>
            </Field>
            <Field id='state20' type='menu' visibleBindingId='show20dev'  visibleBindingValue='true'>
                <Label>State 20:</Label>
                <List class='self' filter='device20' method='getStateList' dynamicReload='true'/>
            </Field>
            <Field id='variableSeparator' type='separator' />
            <Field id='variable1' type='menu'>
                <Label>Variable 1:</Label>
                <List class='self' method='getVariableList'/>
            </Field>
            <Field id='variable2' type='menu'>
                <Label>Variable 2:</Label>
                <List class='self' method='getVariableList'/>
            </Field>
            <Field id='variable3' type='menu'>
                <Label>Variable 3:</Label>
                <List class='self' method='getVariableList'/>
            </Field>
            <Field id='variable4' type='menu'>
                <Label>Variable 4:</Label>
                <List class='self' method='getVariableList'/>
            </Field>
            <Field id='variable5' type='menu'>
                <Label>Variable 5:</Label>
                <List class='self' method='getVariableList'/>
            </Field>
            <Field id='show10var' type='checkbox' defaultValue='false'>
                <Label>Show more</Label>
            </Field>
            <Field id='variable6' type='menu' visibleBindingId='show10var'  visibleBindingValue='true'>
                <Label>Variable 6:</Label>
                <List class='self' method='getVariableList'/>
            </Field>
            <Field id='variable7' type='menu' visibleBindingId='show10var'  visibleBindingValue='true'>
                <Label>Variable 7:</Label>
                <List class='self' method='getVariableList'/>
            </Field>
            <Field id='variable8' type='menu' visibleBindingId='show10var'  visibleBindingValue='true'>
                <Label>Variable 8:</Label>
                <List class='self' method='getVariableList'/>
            </Field>
            <Field id='variable9' type='menu' visibleBindingId='show10var'  visibleBindingValue='true'>
                <Label>Variable 9:</Label>
                <List class='self' method='getVariableList'/>
            </Field>
            <Field id='variable10' type='menu' visibleBindingId='show10var'  visibleBindingValue='true'>
                <Label>Variable 10:</Label>
                <List class='self' method='getVariableList'/>
            </Field>
            <Field id='logicSeparator' type='separator' />
            <Field id='logicType' type='menu' defaultValue='simple'>
                <Label>Logic:</Label>
                <List>
                    <Option value='any'>Any Change</Option>
                    <Option value='simple'>Simple</Option>
                    <Option value='complex'>Complex</Option>
                </List>
            </Field>
            <Field id='boolLabel0' type='label' visibleBindingId='logicType'  visibleBindingValue='simple' alignWithControl='true'>
                <Label>• Strings match:</Label>
            </Field>
            <Field id='boolLabel1' type='label' visibleBindingId='logicType'  visibleBindingValue='simple' alignWithControl='true'>
                <Label>    'true', 'on', 'open', 'up', 'yes', 'active', 'locked', '1'</Label>
            </Field>
            <Field id='boolLabel2' type='label' visibleBindingId='logicType'  visibleBindingValue='simple' alignWithControl='true'>
                <Label>• Numbers match if non-zero</Label>
            </Field>
            <Field id='boolLabel3' type='label' visibleBindingId='logicType'  visibleBindingValue='simple' alignWithControl='true'>
                <Label>• Booleans match if True</Label>
            </Field>
            <Field id='reverseBoolean' type='checkbox' defaultValue='false' visibleBindingId='logicType'  visibleBindingValue='simple' alwaysUseInDialogHeightCalc='true'>
                <Label>Reverse?:</Label>
                <Description>Check to reverse above logic.</Description>
            </Field>
            <Field id='operator' type='menu' defaultValue='eq' visibleBindingId='logicType'  visibleBindingValue='complex'>
                <Label>Operator:</Label>
                <List>
                    <Option value='eq'>Equal</Option>
                    <Option value='ne'>Not Equal</Option>
                    <Option value='gt'>Greater Than</Option>
                    <Option value='lt'>Less Than</Option>
                    <Option value='ge'>Greater or Equal</Option>
                    <Option value='le'>Less or Equal</Option>
                </List>
            </Field>
            <Field id='value' type='textfield' visibleBindingId='logicType'  visibleBindingValue='complex'>
                <Label>Comparison:</Label>
            </Field>
            <Field id='valueType' type='menu' defaultvalue='str' visibleBindingId='logicType'  visibleBindingValue='complex'>
                <Label>Data Type:</Label>
                <List>
                    <Option value='str'>String</Option>
                    <Option value='num'>Number</Option>
                </List>
            </Field>
            <Field id='boolLabel4' type='label' visibleBindingId='logicType'  visibleBindingValue='complex' alignWithControl='true'>
                <Label>• Type errors always compare as False</Label>
            </Field>
            <Field id='boolLabel5' type='label' visibleBindingId='logicType'  visibleBindingValue='complex' alignWithControl='true'>
                <Label>• Strings are compared in lowercase</Label>
            </Field>
            <Field id='boolLabel6' type='label' visibleBindingId='logicType'  visibleBindingValue='complex' alignWithControl='true'>
                <Label>• Numbers are compared as floats</Label>
            </Field>
            <Field id='boolLabel7' type='label' visibleBindingId='logicType'  visibleBindingValue='complex' alignWithControl='true'>
                <Label>• For boolean comparison, use simple logic</Label>
            </Field>
            <Field id='logSeparator' type='separator' />
            <Field id='logOnOff' type='checkbox' defaultValue='true'>
                <Label>Log On/Off?:</Label>
                <Description>Uncheck to suppress logging on/off events</Description>
            </Field>
        </ConfigUI>
        <States>
            <State id='onOffState'>
                <ValueType>Boolean</ValueType>
                <TriggerLabel>On/Off State is On</TriggerLabel>
                <TriggerLabelPrefix>On/Off State is</TriggerLabelPrefix>
                <ControlPageLabel>On/Off State</ControlPageLabel>
                <ControlPageLabelPrefix>On/Off State is</ControlPageLabelPrefix>
            </State>
            <State id='state'>
                <ValueType>
                    <List>
                        <Option value='idle'>Idle</Option>
                        <Option value='accrue'>Accrual</Option>
                        <Option value='active'>Active</Option>
                        <Option value='persist'>Persistent</Option>
                    </List>
                </ValueType>
                <TriggerLabel>Any State Change</TriggerLabel>
                <TriggerLabelPrefix>State is</TriggerLabelPrefix>
                <ControlPageLabel>State</ControlPageLabel>
                <ControlPageLabelPrefix>State is</ControlPageLabelPrefix>
            </State>
            <State id='displayState'>
                <ValueType>String</ValueType>
                <TriggerLabel>Display State Change</TriggerLabel>
                <TriggerLabelPrefix>Display State is</TriggerLabelPrefix>
                <ControlPageLabel>Display State</ControlPageLabel>
                <ControlPageLabelPrefix>Display State is</ControlPageLabelPrefix>
            </State>
            <State id='count'>
                <ValueType>Number</ValueType>
                <TriggerLabel>Count</TriggerLabel>
                <ControlPageLabel>Count</ControlPageLabel>
            </State>
            <State id='counting'>
                <ValueType>Boolean</ValueType>
                <TriggerLabel>Counting</TriggerLabel>
                <ControlPageLabel>Counting</ControlPageLabel>
            </State>
            <State id='expired'>
                <ValueType>Boolean</ValueType>
                <TriggerLabel>Expired</TriggerLabel>
                <ControlPageLabel>Expired</ControlPageLabel>
            </State>
            <State id='reset'>
                <ValueType>Boolean</ValueType>
                <TriggerLabel>Reset</TriggerLabel>
                <ControlPageLabel>Reset</ControlPageLabel>
            </State>
            <State id='resetTime'>
                <ValueType>Number</ValueType>
                <TriggerLabel>Reset Time</TriggerLabel>
                <ControlPageLabel>Reset Time</ControlPageLabel>
            </State>
            <State id='resetString'>
                <ValueType>String</ValueType>
                <TriggerLabel>Reset String</TriggerLabel>
                <ControlPageLabel>Reset String</ControlPageLabel>
            </State>
            <State id='offTime'>
                <ValueType>Number</ValueType>
                <TriggerLabel>Off Time</TriggerLabel>
                <ControlPageLabel>Off Time</ControlPageLabel>
            </State>
            <State id='offString'>
                <ValueType>String</ValueType>
                <TriggerLabel>Off String</TriggerLabel>
                <ControlPageLabel>Off String</ControlPageLabel>
            </State>
        </States>
        <UiDisplayStateId>displayState</UiDisplayStateId>
    </Device>
    <Device type='custom' id='persistenceTimer'>
        <Name>Persistence Timer</Name>
        <ConfigUI>
            <Field id='onCycles' type='textfield' defaultValue='30'>
                <Label>ON Persist Cycles:</Label>
            </Field>
            <Field id='onUnits' type='menu' defaultValue='seconds'>
                <Label>ON Persist Units:</Label>
                <List>
                    <Option value='seconds'>Seconds</Option>
                    <Option value='minutes'>Minutes</Option>
                    <Option value='hours'>Hours</Option>
                    <Option value='days'>Days</Option>
                </List>
            </Field>
            <Field id='offCycles' type='textfield' defaultValue='30'>
                <Label>OFF Persist Cycles:</Label>
            </Field>
            <Field id='offUnits' type='menu' defaultValue='seconds'>
                <Label>OFF Persist Units:</Label>
                <List>
                    <Option value='seconds'>Seconds</Option>
                    <Option value='minutes'>Minutes</Option>
                    <Option value='hours'>Hours</Option>
                    <Option value='days'>Days</Option>
                </List>
            </Field>
            <Field id='separator' type='separator' />
            <Field id='trackEntity' type='menu' defaultValue='dev'>
                <Label>Track:</Label>
                <List>
                    <Option value='dev'>Device</Option>
                    <Option value='var'>Variable</Option>
                </List>
            </Field>
            <Field id='device1' type='menu' visibleBindingId='trackEntity'  visibleBindingValue='dev' alwaysUseInDialogHeightCalc='true'>
                <Label>Device:</Label>
                <List class='self' method='getDeviceList'/>
                <CallbackMethod>loadStates</CallbackMethod>
            </Field>
            <Field id='state1' type='menu' visibleBindingId='trackEntity'  visibleBindingValue='dev' alwaysUseInDialogHeightCalc='true'>
                <Label>State:</Label>
                <List class='self' filter='device1' method='getStateList' dynamicReload='true'/>
            </Field>
            <Field id='variable1' type='menu' visibleBindingId='trackEntity'  visibleBindingValue='var' alwaysUseInDialogHeightCalc='false'>
                <Label>Variable:</Label>
                <List class='self' method='getVariableList'/>
            </Field>
            <Field id='logicSeparator' type='separator' />
            <Field id='logicType' type='menu' defaultValue='simple'>
                <Label>Logic:</Label>
                <List>
                    <Option value='simple'>Simple</Option>
                    <Option value='complex'>Complex</Option>
                </List>
            </Field>
            <Field id='boolLabel0' type='label' visibleBindingId='logicType'  visibleBindingValue='simple' alignWithControl='true'>
                <Label>• Strings match:</Label>
            </Field>
            <Field id='boolLabel1' type='label' visibleBindingId='logicType'  visibleBindingValue='simple' alignWithControl='true'>
                <Label>    'true', 'on', 'open', 'up', 'yes', 'active', 'locked', '1'</Label>
            </Field>
            <Field id='boolLabel2' type='label' visibleBindingId='logicType'  visibleBindingValue='simple' alignWithControl='true'>
                <Label>• Numbers match if non-zero</Label>
            </Field>
            <Field id='boolLabel3' type='label' visibleBindingId='logicType'  visibleBindingValue='simple' alignWithControl='true'>
                <Label>• Booleans match if True</Label>
            </Field>
            <Field id='reverseBoolean' type='checkbox' defaultValue='false' visibleBindingId='logicType'  visibleBindingValue='simple' alwaysUseInDialogHeightCalc='true'>
                <Label>Reverse?:</Label>
                <Description>Check to reverse above logic.</Description>
            </Field>
            <Field id='operator' type='menu' defaultValue='eq' visibleBindingId='logicType'  visibleBindingValue='complex'>
                <Label>Operator:</Label>
                <List>
                    <Option value='eq'>Equal</Option>
                    <Option value='ne'>Not Equal</Option>
                    <Option value='gt'>Greater Than</Option>
                    <Option value='lt'>Less Than</Option>
                    <Option value='ge'>Greater or Equal</Option>
                    <Option value='le'>Less or Equal</Option>
                </List>
            </Field>
            <Field id='value' type='textfield' visibleBindingId='logicType'  visibleBindingValue='complex'>
                <Label>Comparison:</Label>
            </Field>
            <Field id='valueType' type='menu' defaultvalue='str' visibleBindingId='logicType'  visibleBindingValue='complex'>
                <Label>Data Type:</Label>
                <List>
                    <Option value='str'>String</Option>
                    <Option value='num'>Number</Option>
                </List>
            </Field>
            <Field id='boolLabel4' type='label' visibleBindingId='logicType'  visibleBindingValue='complex' alignWithControl='true'>
                <Label>• Type errors always compare as False</Label>
            </Field>
            <Field id='boolLabel5' type='label' visibleBindingId='logicType'  visibleBindingValue='complex' alignWithControl='true'>
                <Label>• Strings are compared in lowercase</Label>
            </Field>
            <Field id='boolLabel6' type='label' visibleBindingId='logicType'  visibleBindingValue='complex' alignWithControl='true'>
                <Label>• Numbers are compared as floats</Label>
            </Field>
            <Field id='boolLabel7' type='label' visibleBindingId='logicType'  visibleBindingValue='complex' alignWithControl='true'>
                <Label>• For boolean comparison, use simple logic</Label>
            </Field>
            <Field id='logSeparator' type='separator' />
            <Field id='logOnOff' type='checkbox' defaultValue='true'>
                <Label>Log On/Off?:</Label>
                <Description>Uncheck to suppress logging on/off events</Description>
            </Field>
        </ConfigUI>
        <States>
            <State id='onOffState'>
                <ValueType>Boolean</ValueType>
                <TriggerLabel>On/Off State is On</TriggerLabel>
                <TriggerLabelPrefix>On/Off State is</TriggerLabelPrefix>
                <ControlPageLabel>On/Off State</ControlPageLabel>
                <ControlPageLabelPrefix>On/Off State is</ControlPageLabelPrefix>
            </State>
            <State id='state'>
                <ValueType>
                    <List>
                        <Option value='on'>On</Option>
                        <Option value='off'>Off</Option>
                        <Option value='pending'>Pending</Option>
                    </List>
                </ValueType>
                <TriggerLabel>Any State Change</TriggerLabel>
                <TriggerLabelPrefix>State is</TriggerLabelPrefix>
                <ControlPageLabel>State</ControlPageLabel>
                <ControlPageLabelPrefix>State is</ControlPageLabelPrefix>
            </State>
            <State id='displayState'>
                <ValueType>String</ValueType>
                <TriggerLabel>Display State Change</TriggerLabel>
                <TriggerLabelPrefix>Display State is</TriggerLabelPrefix>
                <ControlPageLabel>Display State</ControlPageLabel>
                <ControlPageLabelPrefix>Display State is</ControlPageLabelPrefix>
            </State>
            <State id='pending'>
                <ValueType>Boolean</ValueType>
                <TriggerLabel>Pending is</TriggerLabel>
                <TriggerLabelPrefix>Pending is</TriggerLabelPrefix>
                <ControlPageLabel>Pending</ControlPageLabel>
                <ControlPageLabelPrefix>Pending is</ControlPageLabelPrefix>
            </State>
            <State id='onTime'>
                <ValueType>Number</ValueType>
                <TriggerLabel>Reset Time</TriggerLabel>
                <ControlPageLabel>Reset Time</ControlPageLabel>
            </State>
            <State id='onString'>
                <ValueType>String</ValueType>
                <TriggerLabel>Reset String</TriggerLabel>
                <ControlPageLabel>Reset String</ControlPageLabel>
            </State>
            <State id='offTime'>
                <ValueType>Number</ValueType>
                <TriggerLabel>Reset Time</TriggerLabel>
                <ControlPageLabel>Reset Time</ControlPageLabel>
            </State>
            <State id='offString'>
                <ValueType>String</ValueType>
                <TriggerLabel>Reset String</TriggerLabel>
                <ControlPageLabel>Reset String</ControlPageLabel>
            </State>
        </States>
        <UiDisplayStateId>displayState</UiDisplayStateId>
    </Device>
    <Device type='custom' id='lockoutTimer'>
        <Name>Lockout Timer</Name>
        <ConfigUI>
            <Field id='onCycles' type='textfield' defaultValue='30'>
                <Label>ON Lockout Cycles:</Label>
            </Field>
            <Field id='onUnits' type='menu' defaultValue='seconds'>
                <Label>ON Lockout Units:</Label>
                <List>
                    <Option value='seconds'>Seconds</Option>
                    <Option value='minutes'>Minutes</Option>
                    <Option value='hours'>Hours</Option>
                    <Option value='days'>Days</Option>
                </List>
            </Field>
            <Field id='offCycles' type='textfield' defaultValue='30'>
                <Label>OFF Lockout Cycles:</Label>
            </Field>
            <Field id='offUnits' type='menu' defaultValue='seconds'>
                <Label>OFF Lockout Units:</Label>
                <List>
                    <Option value='seconds'>Seconds</Option>
                    <Option value='minutes'>Minutes</Option>
                    <Option value='hours'>Hours</Option>
                    <Option value='days'>Days</Option>
                </List>
            </Field>
            <Field id='separator' type='separator' />
            <Field id='trackEntity' type='menu' defaultValue='dev'>
                <Label>Track:</Label>
                <List>
                    <Option value='dev'>Device</Option>
                    <Option value='var'>Variable</Option>
                </List>
            </Field>
            <Field id='device1' type='menu' visibleBindingId='trackEntity'  visibleBindingValue='dev' alwaysUseInDialogHeightCalc='true'>
                <Label>Device:</Label>
                <List class='self' method='getDeviceList'/>
                <CallbackMethod>loadStates</CallbackMethod>
            </Field>
            <Field id='state1' type='menu' visibleBindingId='trackEntity'  visibleBindingValue='dev' alwaysUseInDialogHeightCalc='true'>
                <Label>State:</Label>
                <List class='self' filter='device1' method='getStateList' dynamicReload='true'/>
            </Field>
            <Field id='variable1' type='menu' visibleBindingId='trackEntity'  visibleBindingValue='var' alwaysUseInDialogHeightCalc='false'>
                <Label>Variable:</Label>
                <List class='self' method='getVariableList'/>
            </Field>
            <Field id='logicSeparator' type='separator' />
            <Field id='logicType' type='menu' defaultValue='simple'>
                <Label>Logic:</Label>
                <List>
                    <Option value='simple'>Simple</Option>
                    <Option value='complex'>Complex</Option>
                </List>
            </Field>
            <Field id='boolLabel0' type='label' visibleBindingId='logicType'  visibleBindingValue='simple' alignWithControl='true'>
                <Label>• Strings match:</Label>
            </Field>
            <Field id='boolLabel1' type='label' visibleBindingId='logicType'  visibleBindingValue='simple' alignWithControl='true'>
                <Label>    'true', 'on', 'open', 'up', 'yes', 'active', 'locked', '1'</Label>
            </Field>
            <Field id='boolLabel2' type='label' visibleBindingId='logicType'  visibleBindingValue='simple' alignWithControl='true'>
                <Label>• Numbers match if non-zero</Label>
            </Field>
            <Field id='boolLabel3' type='label' visibleBindingId='logicType'  visibleBindingValue='simple' alignWithControl='true'>
                <Label>• Booleans match if True</Label>
            </Field>
            <Field id='reverseBoolean' type='checkbox' defaultValue='false' visibleBindingId='logicType'  visibleBindingValue='simple' alwaysUseInDialogHeightCalc='true'>
                <Label>Reverse?:</Label>
                <Description>Check to reverse above logic.</Description>
            </Field>
            <Field id='operator' type='menu' defaultValue='eq' visibleBindingId='logicType'  visibleBindingValue='complex'>
                <Label>Operator:</Label>
                <List>
                    <Option value='eq'>Equal</Option>
                    <Option value='ne'>Not Equal</Option>
                    <Option value='gt'>Greater Than</Option>
                    <Option value='lt'>Less Than</Option>
                    <Option value='ge'>Greater or Equal</Option>
                    <Option value='le'>Less or Equal</Option>
                </List>
            </Field>
            <Field id='value' type='textfield' visibleBindingId='logicType'  visibleBindingValue='complex'>
                <Label>Comparison:</Label>
            </Field>
            <Field id='valueType' type='menu' defaultValue='str' visibleBindingId='logicType'  visibleBindingValue='complex'>
                <Label>Data Type:</Label>
                <List>
                    <Option value='str'>String</Option>
                    <Option value='num'>Number</Option>
                </List>
            </Field>
            <Field id='boolLabel4' type='label' visibleBindingId='logicType'  visibleBindingValue='complex' alignWithControl='true'>
                <Label>• Type errors always compare as False</Label>
            </Field>
            <Field id='boolLabel5' type='label' visibleBindingId='logicType'  visibleBindingValue='complex' alignWithControl='true'>
                <Label>• Strings are compared in lowercase</Label>
            </Field>
            <Field id='boolLabel6' type='label' visibleBindingId='logicType'  visibleBindingValue='complex' alignWithControl='true'>
                <Label>• Numbers are compared as floats</Label>
            </Field>
            <Field id='boolLabel7' type='label' visibleBindingId='logicType'  visibleBindingValue='complex' alignWithControl='true'>
                <Label>• For boolean comparison, use simple logic</Label>
            </Field>
            <Field id='logSeparator' type='separator' />
            <Field id='logOnOff' type='checkbox' defaultValue='true'>
                <Label>Log On/Off?:</Label>
                <Description>Uncheck to suppress logging on/off events</Description>
            </Field>
        </ConfigUI>
        <States>
            <State id='onOffState'>
                <ValueType>Boolean</ValueType>
                <TriggerLabel>On/Off State is On</TriggerLabel>
                <TriggerLabelPrefix>On/Off State is</TriggerLabelPrefix>
                <ControlPageLabel>On/Off State</ControlPageLabel>
                <ControlPageLabelPrefix>On/Off State is</ControlPageLabelPrefix>
            </State>
            <State id='state'>
                <ValueType>
                    <List>
                        <Option value='on'>On</Option>
                        <Option value='off'>Off</Option>
                        <Option value='locked'>Locked</Option>
                    </List>
                </ValueType>
                <TriggerLabel>Any State Change</TriggerLabel>
                <TriggerLabelPrefix>State is</TriggerLabelPrefix>
                <ControlPageLabel>State</ControlPageLabel>
                <ControlPageLabelPrefix>State is</ControlPageLabelPrefix>
            </State>
            <State id='displayState'>
                <ValueType>String</ValueType>
                <TriggerLabel>Display State Change</TriggerLabel>
                <TriggerLabelPrefix>Display State is</TriggerLabelPrefix>
                <ControlPageLabel>Display State</ControlPageLabel>
                <ControlPageLabelPrefix>Display State is</ControlPageLabelPrefix>
            </State>
            <State id='locked'>
                <ValueType>Boolean</ValueType>
                <TriggerLabel>Locked is</TriggerLabel>
                <TriggerLabelPrefix>Locked is</TriggerLabelPrefix>
                <ControlPageLabel>Locked</ControlPageLabel>
                <ControlPageLabelPrefix>Locked is</ControlPageLabelPrefix>
            </State>
            <State id='onTime'>
                <ValueType>Number</ValueType>
                <TriggerLabel>Reset Time</TriggerLabel>
                <ControlPageLabel>Reset Time</ControlPageLabel>
            </State>
            <State id='onString'>
                <ValueType>String</ValueType>
                <TriggerLabel>Reset String</TriggerLabel>
                <ControlPageLabel>Reset String</ControlPageLabel>
            </State>
            <State id='offTime'>
                <ValueType>Number</ValueType>
                <TriggerLabel>Reset Time</TriggerLabel>
                <ControlPageLabel>Reset Time</ControlPageLabel>
            </State>
            <State id='offString'>
                <ValueType>String</ValueType>
                <TriggerLabel>Reset String</TriggerLabel>
                <ControlPageLabel>Reset String</ControlPageLabel>
            </State>
        </States>
        <UiDisplayStateId>displayState</UiDisplayStateId>
    </Device>
</Devices>
